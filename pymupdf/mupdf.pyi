from _typeshed import Incomplete

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

def cdata(ptr, nelements: int = 1): ...
def memmove(data, indata): ...

class SwigPyIterator:
    thisown: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    __swig_destroy__: Incomplete
    def value(self): ...
    def incr(self, n: int = 1): ...
    def decr(self, n: int = 1): ...
    def distance(self, x): ...
    def equal(self, x): ...
    def copy(self): ...
    def next(self): ...
    def __next__(self): ...
    def previous(self): ...
    def advance(self, n): ...
    def __eq__(self, x): ...
    def __ne__(self, x): ...
    def __iadd__(self, n): ...
    def __isub__(self, n): ...
    def __add__(self, n): ...
    def __sub__(self, *args): ...
    def __iter__(self): ...

class uchar_array:
    thisown: Incomplete
    def __init__(self, nelements) -> None: ...
    __swig_destroy__: Incomplete
    def __getitem__(self, index): ...
    def __setitem__(self, index, value) -> None: ...
    def cast(self): ...
    @staticmethod
    def frompointer(t): ...

class vectoruc:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vectori:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vectorf:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vectord:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vectors:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class map_string_int:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __iter__(self): ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    def __getitem__(self, key): ...
    def __delitem__(self, key) -> None: ...
    def has_key(self, key): ...
    def keys(self): ...
    def values(self): ...
    def items(self): ...
    def __contains__(self, key) -> bool: ...
    def key_iterator(self): ...
    def value_iterator(self): ...
    def __setitem__(self, *args) -> None: ...
    def asdict(self): ...
    def __init__(self, *args) -> None: ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def count(self, x): ...
    def erase(self, *args): ...
    def find(self, x): ...
    def lower_bound(self, x): ...
    def upper_bound(self, x): ...
    __swig_destroy__: Incomplete

class vectorq:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vector_search_page2_hit:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vector_fz_font_ucs_gid:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

class vector_fz_point:
    thisown: Incomplete
    def iterator(self): ...
    def __iter__(self): ...
    def __nonzero__(self): ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, *args): ...
    def __delslice__(self, i, j): ...
    def __delitem__(self, *args) -> None: ...
    def __getitem__(self, *args): ...
    def __setitem__(self, *args) -> None: ...
    def pop(self): ...
    def append(self, x): ...
    def empty(self): ...
    def size(self): ...
    def swap(self, v): ...
    def begin(self): ...
    def end(self): ...
    def rbegin(self): ...
    def rend(self): ...
    def clear(self): ...
    def get_allocator(self): ...
    def pop_back(self): ...
    def erase(self, *args): ...
    def __init__(self, *args) -> None: ...
    def push_back(self, x): ...
    def front(self): ...
    def back(self): ...
    def assign(self, n, x): ...
    def resize(self, *args): ...
    def insert(self, *args): ...
    def reserve(self, n): ...
    def capacity(self): ...
    __swig_destroy__: Incomplete

def new_bytes(nelements): ...
def delete_bytes(ary): ...
def bytes_getitem(ary, index): ...
def bytes_setitem(ary, index, value): ...
def new_floats(nelements): ...
def delete_floats(ary): ...
def floats_getitem(ary, index): ...
def floats_setitem(ary, index, value): ...
def internal_set_error_classes(classes): ...

FZ_VERSION: Incomplete
FZ_VERSION_MAJOR: Incomplete
FZ_VERSION_MINOR: Incomplete
FZ_VERSION_PATCH: Incomplete
FZ_ENABLE_SPOT_RENDERING: Incomplete
FZ_PLOTTERS_N: Incomplete
FZ_PLOTTERS_G: Incomplete
FZ_PLOTTERS_RGB: Incomplete
FZ_PLOTTERS_CMYK: Incomplete
FZ_ENABLE_PDF: Incomplete
FZ_ENABLE_XPS: Incomplete
FZ_ENABLE_SVG: Incomplete
FZ_ENABLE_CBZ: Incomplete
FZ_ENABLE_IMG: Incomplete
FZ_ENABLE_HTML: Incomplete
FZ_ENABLE_EPUB: Incomplete
FZ_ENABLE_FB2: Incomplete
FZ_ENABLE_MOBI: Incomplete
FZ_ENABLE_TXT: Incomplete
FZ_ENABLE_OFFICE: Incomplete
FZ_ENABLE_OCR_OUTPUT: Incomplete
FZ_ENABLE_ODT_OUTPUT: Incomplete
FZ_ENABLE_DOCX_OUTPUT: Incomplete
FZ_ENABLE_JPX: Incomplete
FZ_ENABLE_JS: Incomplete
FZ_ENABLE_ICC: Incomplete
FZ_ENABLE_HTML_ENGINE: Incomplete
MEMENTO_PREFILL: Incomplete
MEMENTO_POSTFILL: Incomplete
MEMENTO_ALLOCFILL: Incomplete
MEMENTO_FREEFILL: Incomplete

def Memento_checkBlock(arg1): ...
def Memento_checkAllMemory(): ...
def Memento_check(): ...
def Memento_setParanoia(arg1): ...
def Memento_paranoidAt(arg1): ...
def Memento_breakAt(arg1): ...
def Memento_breakOnFree(a): ...
def Memento_breakOnRealloc(a): ...
def Memento_getBlockNum(arg1): ...
def Memento_find(a): ...
def Memento_breakpoint(): ...
def Memento_failAt(arg1): ...
def Memento_failThisEvent(): ...
def Memento_listBlocks(): ...
def Memento_listNewBlocks(): ...
def Memento_listLargeBlocks(): ...
def Memento_listPhasedBlocks(): ...
def Memento_setMax(arg1): ...
def Memento_stats(): ...
def Memento_label(arg1, arg2): ...
def Memento_tick(): ...
def Memento_setVerbose(arg1): ...
def Memento_addBacktraceLimitFnname(fnname): ...
def Memento_setAtexitFin(atexitfin): ...
def Memento_setIgnoreNewDelete(ignore): ...
def Memento_malloc(s): ...
def Memento_realloc(arg1, s): ...
def Memento_free(arg1): ...
def Memento_calloc(arg1, arg2): ...
def Memento_strdup(arg1): ...
def Memento_info(addr): ...
def Memento_listBlockInfo(): ...
def Memento_blockInfo(blk): ...
def Memento_takeByteRef(blk): ...
def Memento_dropByteRef(blk): ...
def Memento_takeShortRef(blk): ...
def Memento_dropShortRef(blk): ...
def Memento_takeIntRef(blk): ...
def Memento_dropIntRef(blk): ...
def Memento_takeRef(blk): ...
def Memento_dropRef(blk): ...
def Memento_adjustRef(blk, adjust): ...
def Memento_reference(blk): ...
def Memento_checkPointerOrNull(blk): ...
def Memento_checkBytePointerOrNull(blk): ...
def Memento_checkShortPointerOrNull(blk): ...
def Memento_checkIntPointerOrNull(blk): ...
def Memento_startLeaking(): ...
def Memento_stopLeaking(): ...
def Memento_sequence(): ...
def Memento_squeezing(): ...
def Memento_fin(): ...
def Memento_bt(): ...

PATH_MAX: Incomplete
FZ_PI: Incomplete
FZ_RADIAN: Incomplete
FZ_DEGREE: Incomplete
FZ_SQRT2: Incomplete
FZ_LN2: Incomplete
ARCH_HAS_NEON: Incomplete
ARCH_HAS_SSE: Incomplete
HAVE_SIGSETJMP: Incomplete
EOF: Incomplete
SEEK_SET: Incomplete
SEEK_CUR: Incomplete
SEEK_END: Incomplete
M_PI: Incomplete

class fz_point:
    thisown: Incomplete
    x: Incomplete
    y: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_rect:
    thisown: Incomplete
    x0: Incomplete
    y0: Incomplete
    x1: Incomplete
    y1: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_irect:
    thisown: Incomplete
    x0: Incomplete
    y0: Incomplete
    x1: Incomplete
    y1: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_matrix:
    thisown: Incomplete
    a: Incomplete
    b: Incomplete
    c: Incomplete
    d: Incomplete
    e: Incomplete
    f: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

cvar: Incomplete
fz_unit_rect: Incomplete
fz_empty_rect: Incomplete
fz_empty_irect: Incomplete
fz_infinite_rect: Incomplete
fz_infinite_irect: Incomplete

class fz_quad:
    thisown: Incomplete
    ul: Incomplete
    ur: Incomplete
    ll: Incomplete
    lr: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_identity: Incomplete
FZ_VERBOSE_EXCEPTIONS: Incomplete

class fz_alloc_context:
    thisown: Incomplete
    user: Incomplete
    malloc: Incomplete
    realloc: Incomplete
    free: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_invalid_quad: Incomplete
fz_infinite_quad: Incomplete
FZ_ERROR_NONE: Incomplete
FZ_ERROR_GENERIC: Incomplete
FZ_ERROR_SYSTEM: Incomplete
FZ_ERROR_LIBRARY: Incomplete
FZ_ERROR_ARGUMENT: Incomplete
FZ_ERROR_LIMIT: Incomplete
FZ_ERROR_UNSUPPORTED: Incomplete
FZ_ERROR_FORMAT: Incomplete
FZ_ERROR_SYNTAX: Incomplete
FZ_ERROR_TRYLATER: Incomplete
FZ_ERROR_ABORT: Incomplete
FZ_ERROR_REPAIRED: Incomplete

class fz_locks_context:
    thisown: Incomplete
    user: Incomplete
    lock: Incomplete
    unlock: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_LOCK_ALLOC: Incomplete
FZ_LOCK_FREETYPE: Incomplete
FZ_LOCK_GLYPHCACHE: Incomplete
FZ_LOCK_MAX: Incomplete
FZ_STORE_UNLIMITED: Incomplete
FZ_STORE_DEFAULT: Incomplete

class fz_string:
    thisown: Incomplete
    refs: Incomplete
    str: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_JMPBUF_ALIGN: Incomplete

class fz_error_context:
    thisown: Incomplete
    top: Incomplete
    stack: Incomplete
    padding: Incomplete
    stack_base: Incomplete
    errcode: Incomplete
    errnum: Incomplete
    print_user: Incomplete
    message: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_warn_context:
    thisown: Incomplete
    print_user: Incomplete
    count: Incomplete
    message: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_aa_context:
    thisown: Incomplete
    hscale: Incomplete
    vscale: Incomplete
    scale: Incomplete
    bits: Incomplete
    text_bits: Incomplete
    min_line_width: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_context:
    thisown: Incomplete
    user: Incomplete
    alloc: Incomplete
    locks: Incomplete
    error: Incomplete
    warn: Incomplete
    aa: Incomplete
    seed48: Incomplete
    icc_enabled: Incomplete
    throw_on_repair: Incomplete
    handler: Incomplete
    archive: Incomplete
    style: Incomplete
    tuning: Incomplete
    stddbg: Incomplete
    font: Incomplete
    colorspace: Incomplete
    store: Incomplete
    glyph_cache: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_buffer:
    thisown: Incomplete
    refs: Incomplete
    data: Incomplete
    cap: Incomplete
    len: Incomplete
    unused_bits: Incomplete
    shared: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_REPLACEMENT_CHARACTER: Incomplete
FZ_UTFMAX: Incomplete

class fz_stream:
    thisown: Incomplete
    refs: Incomplete
    error: Incomplete
    eof: Incomplete
    progressive: Incomplete
    pos: Incomplete
    avail: Incomplete
    bits: Incomplete
    rp: Incomplete
    wp: Incomplete
    state: Incomplete
    next: Incomplete
    drop: Incomplete
    seek: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_output:
    thisown: Incomplete
    state: Incomplete
    write: Incomplete
    seek: Incomplete
    tell: Incomplete
    close: Incomplete
    drop: Incomplete
    reset: Incomplete
    as_stream: Incomplete
    truncate: Incomplete
    closed: Incomplete
    bp: Incomplete
    wp: Incomplete
    ep: Incomplete
    buffered: Incomplete
    bits: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_md5:
    thisown: Incomplete
    lo: Incomplete
    hi: Incomplete
    a: Incomplete
    b: Incomplete
    c: Incomplete
    d: Incomplete
    buffer: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_sha256:
    thisown: Incomplete
    state: Incomplete
    count: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_sha512:
    thisown: Incomplete
    state: Incomplete
    count: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_arc4:
    thisown: Incomplete
    x: Incomplete
    y: Incomplete
    state: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_aes:
    thisown: Incomplete
    nr: Incomplete
    rk: Incomplete
    buf: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_AES_DECRYPT: Incomplete
FZ_AES_ENCRYPT: Incomplete

class fz_getopt_long_options:
    thisown: Incomplete
    option: Incomplete
    flag: Incomplete
    opaque: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_HASH_TABLE_KEY_LENGTH: Incomplete
FZ_BIDI_LTR: Incomplete
FZ_BIDI_RTL: Incomplete
FZ_BIDI_NEUTRAL: Incomplete
FZ_BIDI_CLASSIFY_WHITE_SPACE: Incomplete
FZ_BIDI_REPLACE_TAB: Incomplete

class fz_archive_handler:
    thisown: Incomplete
    recognize: Incomplete
    open: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_archive:
    thisown: Incomplete
    refs: Incomplete
    file: Incomplete
    format: Incomplete
    drop_archive: Incomplete
    count_entries: Incomplete
    list_entry: Incomplete
    has_entry: Incomplete
    read_entry: Incomplete
    open_entry: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_libarchive_archive_handler: Incomplete

class fz_storable:
    thisown: Incomplete
    refs: Incomplete
    drop: Incomplete
    droppable: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_key_storable:
    thisown: Incomplete
    storable: Incomplete
    store_key_refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_store_hash:
    thisown: Incomplete
    drop: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_store_type:
    thisown: Incomplete
    name: Incomplete
    make_hash_key: Incomplete
    keep_key: Incomplete
    drop_key: Incomplete
    cmp_key: Incomplete
    format_key: Incomplete
    needs_reap: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_RI_PERCEPTUAL: Incomplete
FZ_RI_RELATIVE_COLORIMETRIC: Incomplete
FZ_RI_SATURATION: Incomplete
FZ_RI_ABSOLUTE_COLORIMETRIC: Incomplete

class fz_color_params:
    thisown: Incomplete
    ri: Incomplete
    bp: Incomplete
    op: Incomplete
    opm: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_MAX_COLORS: Incomplete
FZ_COLORSPACE_IS_DEVICE: Incomplete
FZ_COLORSPACE_IS_ICC: Incomplete
FZ_COLORSPACE_HAS_CMYK: Incomplete
FZ_COLORSPACE_HAS_SPOTS: Incomplete
FZ_COLORSPACE_HAS_CMYK_AND_SPOTS: Incomplete

class fz_default_colorspaces:
    thisown: Incomplete
    refs: Incomplete
    gray: Incomplete
    rgb: Incomplete
    cmyk: Incomplete
    oi: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_default_color_params: Incomplete

class fz_colorspace:
    thisown: Incomplete
    key_storable: Incomplete
    type: Incomplete
    flags: Incomplete
    n: Incomplete
    name: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_MAX_SEPARATIONS: Incomplete
FZ_SEPARATION_COMPOSITE: Incomplete
FZ_SEPARATION_SPOT: Incomplete
FZ_SEPARATION_DISABLED: Incomplete

class fz_pixmap:
    thisown: Incomplete
    storable: Incomplete
    x: Incomplete
    y: Incomplete
    w: Incomplete
    h: Incomplete
    n: Incomplete
    s: Incomplete
    alpha: Incomplete
    flags: Incomplete
    stride: Incomplete
    seps: Incomplete
    xres: Incomplete
    yres: Incomplete
    colorspace: Incomplete
    samples: Incomplete
    underlying: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_PIXMAP_FLAG_INTERPOLATE: Incomplete
FZ_PIXMAP_FLAG_FREE_SAMPLES: Incomplete
FZ_DEFLATE_NONE: Incomplete
FZ_DEFLATE_BEST_SPEED: Incomplete
FZ_DEFLATE_BEST: Incomplete
FZ_DEFLATE_DEFAULT: Incomplete

class fz_range:
    thisown: Incomplete
    offset: Incomplete
    length: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_compression_params:
    thisown: Incomplete
    type: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_compressed_buffer:
    thisown: Incomplete
    refs: Incomplete
    params: Incomplete
    buffer: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_IMAGE_UNKNOWN: Incomplete
FZ_IMAGE_RAW: Incomplete
FZ_IMAGE_FAX: Incomplete
FZ_IMAGE_FLATE: Incomplete
FZ_IMAGE_LZW: Incomplete
FZ_IMAGE_RLD: Incomplete
FZ_IMAGE_BMP: Incomplete
FZ_IMAGE_GIF: Incomplete
FZ_IMAGE_JBIG2: Incomplete
FZ_IMAGE_JPEG: Incomplete
FZ_IMAGE_JPX: Incomplete
FZ_IMAGE_JXR: Incomplete
FZ_IMAGE_PNG: Incomplete
FZ_IMAGE_PNM: Incomplete
FZ_IMAGE_TIFF: Incomplete
FZ_IMAGE_PSD: Incomplete

class fz_bitmap:
    thisown: Incomplete
    refs: Incomplete
    w: Incomplete
    h: Incomplete
    stride: Incomplete
    n: Incomplete
    xres: Incomplete
    yres: Incomplete
    samples: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_image:
    thisown: Incomplete
    key_storable: Incomplete
    w: Incomplete
    h: Incomplete
    n: Incomplete
    bpc: Incomplete
    imagemask: Incomplete
    interpolate: Incomplete
    use_colorkey: Incomplete
    use_decode: Incomplete
    decoded: Incomplete
    scalable: Incomplete
    orientation: Incomplete
    mask: Incomplete
    xres: Incomplete
    yres: Incomplete
    colorspace: Incomplete
    drop_image: Incomplete
    get_pixmap: Incomplete
    get_size: Incomplete
    colorkey: Incomplete
    decode: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_FUNCTION_BASED: Incomplete
FZ_LINEAR: Incomplete
FZ_RADIAL: Incomplete
FZ_MESH_TYPE4: Incomplete
FZ_MESH_TYPE5: Incomplete
FZ_MESH_TYPE6: Incomplete
FZ_MESH_TYPE7: Incomplete

class fz_shade:
    thisown: Incomplete
    storable: Incomplete
    bbox: Incomplete
    colorspace: Incomplete
    matrix: Incomplete
    use_background: Incomplete
    background: Incomplete
    function_stride: Incomplete
    function: Incomplete
    type: Incomplete
    buffer: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_vertex:
    thisown: Incomplete
    p: Incomplete
    c: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_text_decoder:
    thisown: Incomplete
    decode_bound: Incomplete
    decode_size: Incomplete
    decode: Incomplete
    table1: Incomplete
    table2: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_unicode_from_iso8859_1: Incomplete
fz_unicode_from_iso8859_7: Incomplete
fz_unicode_from_koi8u: Incomplete
fz_unicode_from_pdf_doc_encoding: Incomplete
fz_unicode_from_windows_1250: Incomplete
fz_unicode_from_windows_1251: Incomplete
fz_unicode_from_windows_1252: Incomplete
FZ_ADOBE_CNS: Incomplete
FZ_ADOBE_GB: Incomplete
FZ_ADOBE_JAPAN: Incomplete
FZ_ADOBE_KOREA: Incomplete

class fz_font_flags_t:
    thisown: Incomplete
    is_mono: Incomplete
    is_serif: Incomplete
    is_bold: Incomplete
    is_italic: Incomplete
    ft_substitute: Incomplete
    ft_stretch: Incomplete
    fake_bold: Incomplete
    fake_italic: Incomplete
    has_opentype: Incomplete
    invalid_bbox: Incomplete
    cjk: Incomplete
    cjk_lang: Incomplete
    embed: Incomplete
    never_embed: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_shaper_data_t:
    thisown: Incomplete
    shaper_handle: Incomplete
    destroy: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_font:
    thisown: Incomplete
    refs: Incomplete
    name: Incomplete
    buffer: Incomplete
    flags: Incomplete
    ft_face: Incomplete
    shaper_data: Incomplete
    t3matrix: Incomplete
    t3resources: Incomplete
    t3procs: Incomplete
    t3lists: Incomplete
    t3widths: Incomplete
    t3flags: Incomplete
    t3doc: Incomplete
    t3run: Incomplete
    t3freeres: Incomplete
    bbox: Incomplete
    ascender: Incomplete
    descender: Incomplete
    glyph_count: Incomplete
    bbox_table: Incomplete
    use_glyph_bbox: Incomplete
    width_count: Incomplete
    width_default: Incomplete
    width_table: Incomplete
    advance_cache: Incomplete
    encoding_cache: Incomplete
    has_digest: Incomplete
    digest: Incomplete
    subfont: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_LINECAP_BUTT: Incomplete
FZ_LINECAP_ROUND: Incomplete
FZ_LINECAP_SQUARE: Incomplete
FZ_LINECAP_TRIANGLE: Incomplete
FZ_LINEJOIN_MITER: Incomplete
FZ_LINEJOIN_ROUND: Incomplete
FZ_LINEJOIN_BEVEL: Incomplete
FZ_LINEJOIN_MITER_XPS: Incomplete

class fz_stroke_state:
    thisown: Incomplete
    refs: Incomplete
    start_cap: Incomplete
    dash_cap: Incomplete
    end_cap: Incomplete
    linejoin: Incomplete
    linewidth: Incomplete
    miterlimit: Incomplete
    dash_phase: Incomplete
    dash_len: Incomplete
    dash_list: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_path_walker:
    thisown: Incomplete
    moveto: Incomplete
    lineto: Incomplete
    curveto: Incomplete
    closepath: Incomplete
    quadto: Incomplete
    curvetov: Incomplete
    curvetoy: Incomplete
    rectto: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_text_item:
    thisown: Incomplete
    x: Incomplete
    y: Incomplete
    adv: Incomplete
    gid: Incomplete
    ucs: Incomplete
    cid: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_default_stroke_state: Incomplete
FZ_LANG_UNSET: Incomplete
FZ_LANG_ur: Incomplete
FZ_LANG_urd: Incomplete
FZ_LANG_ko: Incomplete
FZ_LANG_ja: Incomplete
FZ_LANG_zh: Incomplete
FZ_LANG_zh_Hans: Incomplete
FZ_LANG_zh_Hant: Incomplete

class fz_text_span:
    thisown: Incomplete
    font: Incomplete
    trm: Incomplete
    wmode: Incomplete
    bidi_level: Incomplete
    markup_dir: Incomplete
    language: Incomplete
    len: Incomplete
    cap: Incomplete
    items: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_text:
    thisown: Incomplete
    refs: Incomplete
    head: Incomplete
    tail: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_DEVFLAG_MASK: Incomplete
FZ_DEVFLAG_COLOR: Incomplete
FZ_DEVFLAG_UNCACHEABLE: Incomplete
FZ_DEVFLAG_FILLCOLOR_UNDEFINED: Incomplete
FZ_DEVFLAG_STROKECOLOR_UNDEFINED: Incomplete
FZ_DEVFLAG_STARTCAP_UNDEFINED: Incomplete
FZ_DEVFLAG_DASHCAP_UNDEFINED: Incomplete
FZ_DEVFLAG_ENDCAP_UNDEFINED: Incomplete
FZ_DEVFLAG_LINEJOIN_UNDEFINED: Incomplete
FZ_DEVFLAG_MITERLIMIT_UNDEFINED: Incomplete
FZ_DEVFLAG_LINEWIDTH_UNDEFINED: Incomplete
FZ_DEVFLAG_BBOX_DEFINED: Incomplete
FZ_DEVFLAG_GRIDFIT_AS_TILED: Incomplete
FZ_BLEND_NORMAL: Incomplete
FZ_BLEND_MULTIPLY: Incomplete
FZ_BLEND_SCREEN: Incomplete
FZ_BLEND_OVERLAY: Incomplete
FZ_BLEND_DARKEN: Incomplete
FZ_BLEND_LIGHTEN: Incomplete
FZ_BLEND_COLOR_DODGE: Incomplete
FZ_BLEND_COLOR_BURN: Incomplete
FZ_BLEND_HARD_LIGHT: Incomplete
FZ_BLEND_SOFT_LIGHT: Incomplete
FZ_BLEND_DIFFERENCE: Incomplete
FZ_BLEND_EXCLUSION: Incomplete
FZ_BLEND_HUE: Incomplete
FZ_BLEND_SATURATION: Incomplete
FZ_BLEND_COLOR: Incomplete
FZ_BLEND_LUMINOSITY: Incomplete
FZ_BLEND_MODEMASK: Incomplete
FZ_BLEND_ISOLATED: Incomplete
FZ_BLEND_KNOCKOUT: Incomplete
FZ_FUNCTION_MAX_N: Incomplete
FZ_FUNCTION_MAX_M: Incomplete

class fz_function:
    thisown: Incomplete
    storable: Incomplete
    size: Incomplete
    m: Incomplete
    n: Incomplete
    eval: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_device_container_stack:
    thisown: Incomplete
    scissor: Incomplete
    type: Incomplete
    user: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

fz_device_container_stack_is_clip: Incomplete
fz_device_container_stack_is_mask: Incomplete
fz_device_container_stack_is_group: Incomplete
fz_device_container_stack_is_tile: Incomplete
FZ_STRUCTURE_INVALID: Incomplete
FZ_STRUCTURE_DOCUMENT: Incomplete
FZ_STRUCTURE_PART: Incomplete
FZ_STRUCTURE_ART: Incomplete
FZ_STRUCTURE_SECT: Incomplete
FZ_STRUCTURE_DIV: Incomplete
FZ_STRUCTURE_BLOCKQUOTE: Incomplete
FZ_STRUCTURE_CAPTION: Incomplete
FZ_STRUCTURE_TOC: Incomplete
FZ_STRUCTURE_TOCI: Incomplete
FZ_STRUCTURE_INDEX: Incomplete
FZ_STRUCTURE_NONSTRUCT: Incomplete
FZ_STRUCTURE_PRIVATE: Incomplete
FZ_STRUCTURE_DOCUMENTFRAGMENT: Incomplete
FZ_STRUCTURE_ASIDE: Incomplete
FZ_STRUCTURE_TITLE: Incomplete
FZ_STRUCTURE_FENOTE: Incomplete
FZ_STRUCTURE_SUB: Incomplete
FZ_STRUCTURE_P: Incomplete
FZ_STRUCTURE_H: Incomplete
FZ_STRUCTURE_H1: Incomplete
FZ_STRUCTURE_H2: Incomplete
FZ_STRUCTURE_H3: Incomplete
FZ_STRUCTURE_H4: Incomplete
FZ_STRUCTURE_H5: Incomplete
FZ_STRUCTURE_H6: Incomplete
FZ_STRUCTURE_LIST: Incomplete
FZ_STRUCTURE_LISTITEM: Incomplete
FZ_STRUCTURE_LABEL: Incomplete
FZ_STRUCTURE_LISTBODY: Incomplete
FZ_STRUCTURE_TABLE: Incomplete
FZ_STRUCTURE_TR: Incomplete
FZ_STRUCTURE_TH: Incomplete
FZ_STRUCTURE_TD: Incomplete
FZ_STRUCTURE_THEAD: Incomplete
FZ_STRUCTURE_TBODY: Incomplete
FZ_STRUCTURE_TFOOT: Incomplete
FZ_STRUCTURE_SPAN: Incomplete
FZ_STRUCTURE_QUOTE: Incomplete
FZ_STRUCTURE_NOTE: Incomplete
FZ_STRUCTURE_REFERENCE: Incomplete
FZ_STRUCTURE_BIBENTRY: Incomplete
FZ_STRUCTURE_CODE: Incomplete
FZ_STRUCTURE_LINK: Incomplete
FZ_STRUCTURE_ANNOT: Incomplete
FZ_STRUCTURE_EM: Incomplete
FZ_STRUCTURE_STRONG: Incomplete
FZ_STRUCTURE_RUBY: Incomplete
FZ_STRUCTURE_RB: Incomplete
FZ_STRUCTURE_RT: Incomplete
FZ_STRUCTURE_RP: Incomplete
FZ_STRUCTURE_WARICHU: Incomplete
FZ_STRUCTURE_WT: Incomplete
FZ_STRUCTURE_WP: Incomplete
FZ_STRUCTURE_FIGURE: Incomplete
FZ_STRUCTURE_FORMULA: Incomplete
FZ_STRUCTURE_FORM: Incomplete
FZ_STRUCTURE_ARTIFACT: Incomplete
FZ_METATEXT_ACTUALTEXT: Incomplete
FZ_METATEXT_ALT: Incomplete
FZ_METATEXT_ABBREVIATION: Incomplete
FZ_METATEXT_TITLE: Incomplete

class fz_device:
    thisown: Incomplete
    refs: Incomplete
    hints: Incomplete
    flags: Incomplete
    close_device: Incomplete
    drop_device: Incomplete
    fill_path: Incomplete
    stroke_path: Incomplete
    clip_path: Incomplete
    clip_stroke_path: Incomplete
    fill_text: Incomplete
    stroke_text: Incomplete
    clip_text: Incomplete
    clip_stroke_text: Incomplete
    ignore_text: Incomplete
    fill_shade: Incomplete
    fill_image: Incomplete
    fill_image_mask: Incomplete
    clip_image_mask: Incomplete
    pop_clip: Incomplete
    begin_mask: Incomplete
    end_mask: Incomplete
    begin_group: Incomplete
    end_group: Incomplete
    begin_tile: Incomplete
    end_tile: Incomplete
    render_flags: Incomplete
    set_default_colorspaces: Incomplete
    begin_layer: Incomplete
    end_layer: Incomplete
    begin_structure: Incomplete
    end_structure: Incomplete
    begin_metatext: Incomplete
    end_metatext: Incomplete
    d1_rect: Incomplete
    container_len: Incomplete
    container_cap: Incomplete
    container: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_DONT_INTERPOLATE_IMAGES: Incomplete
FZ_NO_CACHE: Incomplete
FZ_DONT_DECODE_IMAGES: Incomplete

class fz_cookie:
    thisown: Incomplete
    abort: Incomplete
    progress: Incomplete
    progress_max: Incomplete
    errors: Incomplete
    incomplete: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_TEST_OPT_IMAGES: Incomplete
FZ_TEST_OPT_SHADINGS: Incomplete

class fz_draw_options:
    thisown: Incomplete
    rotate: Incomplete
    x_resolution: Incomplete
    y_resolution: Incomplete
    width: Incomplete
    height: Incomplete
    colorspace: Incomplete
    alpha: Incomplete
    graphics: Incomplete
    text: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_location:
    thisown: Incomplete
    chapter: Incomplete
    page: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_layout_char:
    thisown: Incomplete
    x: Incomplete
    advance: Incomplete
    p: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_layout_line:
    thisown: Incomplete
    x: Incomplete
    y: Incomplete
    font_size: Incomplete
    p: Incomplete
    text: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_layout_block:
    thisown: Incomplete
    pool: Incomplete
    matrix: Incomplete
    inv_matrix: Incomplete
    head: Incomplete
    tailp: Incomplete
    text_tailp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_STEXT_PRESERVE_LIGATURES: Incomplete
FZ_STEXT_PRESERVE_WHITESPACE: Incomplete
FZ_STEXT_PRESERVE_IMAGES: Incomplete
FZ_STEXT_INHIBIT_SPACES: Incomplete
FZ_STEXT_DEHYPHENATE: Incomplete
FZ_STEXT_PRESERVE_SPANS: Incomplete
FZ_STEXT_CLIP: Incomplete
FZ_STEXT_USE_CID_FOR_UNKNOWN_UNICODE: Incomplete
FZ_STEXT_COLLECT_STRUCTURE: Incomplete
FZ_STEXT_ACCURATE_BBOXES: Incomplete
FZ_STEXT_COLLECT_VECTORS: Incomplete
FZ_STEXT_IGNORE_ACTUALTEXT: Incomplete
FZ_STEXT_SEGMENT: Incomplete
FZ_STEXT_MEDIABOX_CLIP: Incomplete

class fz_stext_page:
    thisown: Incomplete
    pool: Incomplete
    mediabox: Incomplete
    first_block: Incomplete
    last_block: Incomplete
    last_struct: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_STEXT_BLOCK_TEXT: Incomplete
FZ_STEXT_BLOCK_IMAGE: Incomplete
FZ_STEXT_BLOCK_STRUCT: Incomplete
FZ_STEXT_BLOCK_VECTOR: Incomplete
FZ_STEXT_BLOCK_GRID: Incomplete

class fz_stext_block:
    thisown: Incomplete
    type: Incomplete
    bbox: Incomplete
    prev: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_stext_line:
    thisown: Incomplete
    wmode: Incomplete
    dir: Incomplete
    bbox: Incomplete
    first_char: Incomplete
    last_char: Incomplete
    prev: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_stext_char:
    thisown: Incomplete
    c: Incomplete
    bidi: Incomplete
    flags: Incomplete
    argb: Incomplete
    origin: Incomplete
    quad: Incomplete
    size: Incomplete
    font: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_STEXT_STRIKEOUT: Incomplete
FZ_STEXT_UNDERLINE: Incomplete
FZ_STEXT_SYNTHETIC: Incomplete
FZ_STEXT_FILLED: Incomplete
FZ_STEXT_STROKED: Incomplete
FZ_STEXT_CLIPPED: Incomplete

class fz_stext_struct:
    thisown: Incomplete
    up: Incomplete
    parent: Incomplete
    first_block: Incomplete
    last_block: Incomplete
    standard: Incomplete
    raw: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_stext_grid_positions:
    thisown: Incomplete
    len: Incomplete
    max_uncertainty: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_SELECT_CHARS: Incomplete
FZ_SELECT_WORDS: Incomplete
FZ_SELECT_LINES: Incomplete

class fz_stext_options:
    thisown: Incomplete
    flags: Incomplete
    scale: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_TRANSITION_NONE: Incomplete
FZ_TRANSITION_SPLIT: Incomplete
FZ_TRANSITION_BLINDS: Incomplete
FZ_TRANSITION_BOX: Incomplete
FZ_TRANSITION_WIPE: Incomplete
FZ_TRANSITION_DISSOLVE: Incomplete
FZ_TRANSITION_GLITTER: Incomplete
FZ_TRANSITION_FLY: Incomplete
FZ_TRANSITION_PUSH: Incomplete
FZ_TRANSITION_COVER: Incomplete
FZ_TRANSITION_UNCOVER: Incomplete
FZ_TRANSITION_FADE: Incomplete

class fz_transition:
    thisown: Incomplete
    type: Incomplete
    duration: Incomplete
    vertical: Incomplete
    outwards: Incomplete
    direction: Incomplete
    state0: Incomplete
    state1: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_link:
    thisown: Incomplete
    refs: Incomplete
    next: Incomplete
    rect: Incomplete
    uri: Incomplete
    set_rect_fn: Incomplete
    set_uri_fn: Incomplete
    drop: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_LINK_DEST_FIT: Incomplete
FZ_LINK_DEST_FIT_B: Incomplete
FZ_LINK_DEST_FIT_H: Incomplete
FZ_LINK_DEST_FIT_BH: Incomplete
FZ_LINK_DEST_FIT_V: Incomplete
FZ_LINK_DEST_FIT_BV: Incomplete
FZ_LINK_DEST_FIT_R: Incomplete
FZ_LINK_DEST_XYZ: Incomplete

class fz_link_dest:
    thisown: Incomplete
    loc: Incomplete
    type: Incomplete
    x: Incomplete
    y: Incomplete
    w: Incomplete
    h: Incomplete
    zoom: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_outline_item:
    thisown: Incomplete
    title: Incomplete
    uri: Incomplete
    is_open: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_outline:
    thisown: Incomplete
    refs: Incomplete
    title: Incomplete
    uri: Incomplete
    page: Incomplete
    x: Incomplete
    y: Incomplete
    next: Incomplete
    down: Incomplete
    is_open: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_outline_iterator:
    thisown: Incomplete
    drop: Incomplete
    item: Incomplete
    next: Incomplete
    prev: Incomplete
    up: Incomplete
    down: Incomplete
    insert: Incomplete
    update: Incomplete
    doc: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_MEDIA_BOX: Incomplete
FZ_CROP_BOX: Incomplete
FZ_BLEED_BOX: Incomplete
FZ_TRIM_BOX: Incomplete
FZ_ART_BOX: Incomplete
FZ_UNKNOWN_BOX: Incomplete
FZ_LAYOUT_KINDLE_W: Incomplete
FZ_LAYOUT_KINDLE_H: Incomplete
FZ_LAYOUT_KINDLE_EM: Incomplete
FZ_LAYOUT_US_POCKET_W: Incomplete
FZ_LAYOUT_US_POCKET_H: Incomplete
FZ_LAYOUT_US_POCKET_EM: Incomplete
FZ_LAYOUT_US_TRADE_W: Incomplete
FZ_LAYOUT_US_TRADE_H: Incomplete
FZ_LAYOUT_US_TRADE_EM: Incomplete
FZ_LAYOUT_UK_A_FORMAT_W: Incomplete
FZ_LAYOUT_UK_A_FORMAT_H: Incomplete
FZ_LAYOUT_UK_A_FORMAT_EM: Incomplete
FZ_LAYOUT_UK_B_FORMAT_W: Incomplete
FZ_LAYOUT_UK_B_FORMAT_H: Incomplete
FZ_LAYOUT_UK_B_FORMAT_EM: Incomplete
FZ_LAYOUT_UK_C_FORMAT_W: Incomplete
FZ_LAYOUT_UK_C_FORMAT_H: Incomplete
FZ_LAYOUT_UK_C_FORMAT_EM: Incomplete
FZ_LAYOUT_A5_W: Incomplete
FZ_LAYOUT_A5_H: Incomplete
FZ_LAYOUT_A5_EM: Incomplete
FZ_DEFAULT_LAYOUT_W: Incomplete
FZ_DEFAULT_LAYOUT_H: Incomplete
FZ_DEFAULT_LAYOUT_EM: Incomplete
FZ_PERMISSION_PRINT: Incomplete
FZ_PERMISSION_COPY: Incomplete
FZ_PERMISSION_EDIT: Incomplete
FZ_PERMISSION_ANNOTATE: Incomplete
FZ_PERMISSION_FORM: Incomplete
FZ_PERMISSION_ACCESSIBILITY: Incomplete
FZ_PERMISSION_ASSEMBLE: Incomplete
FZ_PERMISSION_PRINT_HQ: Incomplete
FZ_META_FORMAT: Incomplete
FZ_META_ENCRYPTION: Incomplete
FZ_META_INFO: Incomplete
FZ_META_INFO_TITLE: Incomplete
FZ_META_INFO_AUTHOR: Incomplete
FZ_META_INFO_SUBJECT: Incomplete
FZ_META_INFO_KEYWORDS: Incomplete
FZ_META_INFO_CREATOR: Incomplete
FZ_META_INFO_PRODUCER: Incomplete
FZ_META_INFO_CREATIONDATE: Incomplete
FZ_META_INFO_MODIFICATIONDATE: Incomplete

class fz_page:
    thisown: Incomplete
    refs: Incomplete
    doc: Incomplete
    chapter: Incomplete
    number: Incomplete
    incomplete: Incomplete
    in_doc: Incomplete
    drop_page: Incomplete
    bound_page: Incomplete
    run_page_contents: Incomplete
    run_page_annots: Incomplete
    run_page_widgets: Incomplete
    load_links: Incomplete
    page_presentation: Incomplete
    control_separation: Incomplete
    separation_disabled: Incomplete
    separations: Incomplete
    overprint: Incomplete
    create_link: Incomplete
    delete_link: Incomplete
    prev: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_document:
    thisown: Incomplete
    refs: Incomplete
    drop_document: Incomplete
    needs_password: Incomplete
    authenticate_password: Incomplete
    has_permission: Incomplete
    load_outline: Incomplete
    outline_iterator: Incomplete
    layout: Incomplete
    make_bookmark: Incomplete
    lookup_bookmark: Incomplete
    resolve_link_dest: Incomplete
    format_link_uri: Incomplete
    count_chapters: Incomplete
    count_pages: Incomplete
    load_page: Incomplete
    page_label: Incomplete
    lookup_metadata: Incomplete
    set_metadata: Incomplete
    get_output_intent: Incomplete
    output_accelerator: Incomplete
    run_structure: Incomplete
    as_pdf: Incomplete
    did_layout: Incomplete
    is_reflowable: Incomplete
    open: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_document_handler:
    thisown: Incomplete
    recognize: Incomplete
    open: Incomplete
    extensions: Incomplete
    mimetypes: Incomplete
    recognize_content: Incomplete
    wants_dir: Incomplete
    wants_file: Incomplete
    fin: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_document_writer:
    thisown: Incomplete
    begin_page: Incomplete
    end_page: Incomplete
    close_writer: Incomplete
    drop_writer: Incomplete
    dev: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_band_writer:
    thisown: Incomplete
    drop: Incomplete
    close: Incomplete
    header: Incomplete
    band: Incomplete
    trailer: Incomplete
    out: Incomplete
    w: Incomplete
    h: Incomplete
    n: Incomplete
    s: Incomplete
    alpha: Incomplete
    xres: Incomplete
    yres: Incomplete
    pagenum: Incomplete
    line: Incomplete
    seps: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_pcl_options:
    thisown: Incomplete
    features: Incomplete
    odd_page_init: Incomplete
    even_page_init: Incomplete
    tumble: Incomplete
    duplex_set: Incomplete
    duplex: Incomplete
    paper_size: Incomplete
    manual_feed_set: Incomplete
    manual_feed: Incomplete
    media_position_set: Incomplete
    media_position: Incomplete
    orientation: Incomplete
    page_count: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_pclm_options:
    thisown: Incomplete
    compress: Incomplete
    strip_height: Incomplete
    page_count: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_pdfocr_options:
    thisown: Incomplete
    compress: Incomplete
    strip_height: Incomplete
    language: Incomplete
    datadir: Incomplete
    skew_correct: Incomplete
    skew_angle: Incomplete
    skew_border: Incomplete
    page_count: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_pwg_options:
    thisown: Incomplete
    media_class: Incomplete
    media_color: Incomplete
    media_type: Incomplete
    output_type: Incomplete
    advance_distance: Incomplete
    advance_media: Incomplete
    collate: Incomplete
    cut_media: Incomplete
    duplex: Incomplete
    insert_sheet: Incomplete
    jog: Incomplete
    leading_edge: Incomplete
    manual_feed: Incomplete
    media_position: Incomplete
    media_weight: Incomplete
    mirror_print: Incomplete
    negative_print: Incomplete
    num_copies: Incomplete
    orientation: Incomplete
    output_face_up: Incomplete
    PageSize: Incomplete
    separations: Incomplete
    tray_switch: Incomplete
    tumble: Incomplete
    media_type_num: Incomplete
    compression: Incomplete
    row_count: Incomplete
    row_feed: Incomplete
    row_step: Incomplete
    rendering_intent: Incomplete
    page_size_name: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_SVG_TEXT_AS_PATH: Incomplete
FZ_SVG_TEXT_AS_TEXT: Incomplete
FZ_PLACE_STORY_FLAG_NO_OVERFLOW: Incomplete
FZ_PLACE_STORY_RETURN_ALL_FITTED: Incomplete
FZ_PLACE_STORY_RETURN_OVERFLOW_WIDTH: Incomplete

class fz_story_element_position:
    thisown: Incomplete
    depth: Incomplete
    heading: Incomplete
    id: Incomplete
    href: Incomplete
    rect: Incomplete
    text: Incomplete
    open_close: Incomplete
    rectangle_num: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_write_story_position:
    thisown: Incomplete
    element: Incomplete
    page_num: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_write_story_positions:
    thisown: Incomplete
    positions: Incomplete
    num: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_DESKEW_BORDER_INCREASE: Incomplete
FZ_DESKEW_BORDER_MAINTAIN: Incomplete
FZ_DESKEW_BORDER_DECREASE: Incomplete
PDF_MAX_OBJECT_NUMBER: Incomplete
PDF_MAX_GEN_NUMBER: Incomplete

class pdf_cycle_list:
    thisown: Incomplete
    up: Incomplete
    num: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_mark_bits:
    thisown: Incomplete
    len: Incomplete
    bits: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_mark_list:
    thisown: Incomplete
    len: Incomplete
    max: Incomplete
    list: Incomplete
    local_list: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_ENUM_NULL: Incomplete
PDF_ENUM_TRUE: Incomplete
PDF_ENUM_FALSE: Incomplete
PDF_ENUM_NAME_1_2: Incomplete
PDF_ENUM_NAME_1_5: Incomplete
PDF_ENUM_NAME_3D: Incomplete
PDF_ENUM_NAME_A: Incomplete
PDF_ENUM_NAME_A85: Incomplete
PDF_ENUM_NAME_AA: Incomplete
PDF_ENUM_NAME_AC: Incomplete
PDF_ENUM_NAME_AESV2: Incomplete
PDF_ENUM_NAME_AESV3: Incomplete
PDF_ENUM_NAME_AF: Incomplete
PDF_ENUM_NAME_AFRelationship: Incomplete
PDF_ENUM_NAME_AHx: Incomplete
PDF_ENUM_NAME_AP: Incomplete
PDF_ENUM_NAME_AS: Incomplete
PDF_ENUM_NAME_ASCII85Decode: Incomplete
PDF_ENUM_NAME_ASCIIHexDecode: Incomplete
PDF_ENUM_NAME_AcroForm: Incomplete
PDF_ENUM_NAME_Action: Incomplete
PDF_ENUM_NAME_ActualText: Incomplete
PDF_ENUM_NAME_Adobe_PPKLite: Incomplete
PDF_ENUM_NAME_All: Incomplete
PDF_ENUM_NAME_AllOff: Incomplete
PDF_ENUM_NAME_AllOn: Incomplete
PDF_ENUM_NAME_Alpha: Incomplete
PDF_ENUM_NAME_Alt: Incomplete
PDF_ENUM_NAME_Alternate: Incomplete
PDF_ENUM_NAME_Alternative: Incomplete
PDF_ENUM_NAME_Annot: Incomplete
PDF_ENUM_NAME_Annots: Incomplete
PDF_ENUM_NAME_AnyOff: Incomplete
PDF_ENUM_NAME_App: Incomplete
PDF_ENUM_NAME_Approved: Incomplete
PDF_ENUM_NAME_Art: Incomplete
PDF_ENUM_NAME_ArtBox: Incomplete
PDF_ENUM_NAME_Artifact: Incomplete
PDF_ENUM_NAME_AsIs: Incomplete
PDF_ENUM_NAME_Ascent: Incomplete
PDF_ENUM_NAME_Aside: Incomplete
PDF_ENUM_NAME_AuthEvent: Incomplete
PDF_ENUM_NAME_Author: Incomplete
PDF_ENUM_NAME_B: Incomplete
PDF_ENUM_NAME_BBox: Incomplete
PDF_ENUM_NAME_BC: Incomplete
PDF_ENUM_NAME_BE: Incomplete
PDF_ENUM_NAME_BG: Incomplete
PDF_ENUM_NAME_BM: Incomplete
PDF_ENUM_NAME_BPC: Incomplete
PDF_ENUM_NAME_BS: Incomplete
PDF_ENUM_NAME_Background: Incomplete
PDF_ENUM_NAME_BaseEncoding: Incomplete
PDF_ENUM_NAME_BaseFont: Incomplete
PDF_ENUM_NAME_BaseState: Incomplete
PDF_ENUM_NAME_BibEntry: Incomplete
PDF_ENUM_NAME_BitsPerComponent: Incomplete
PDF_ENUM_NAME_BitsPerCoordinate: Incomplete
PDF_ENUM_NAME_BitsPerFlag: Incomplete
PDF_ENUM_NAME_BitsPerSample: Incomplete
PDF_ENUM_NAME_BlackIs1: Incomplete
PDF_ENUM_NAME_BlackPoint: Incomplete
PDF_ENUM_NAME_BleedBox: Incomplete
PDF_ENUM_NAME_Blinds: Incomplete
PDF_ENUM_NAME_BlockQuote: Incomplete
PDF_ENUM_NAME_Border: Incomplete
PDF_ENUM_NAME_Bounds: Incomplete
PDF_ENUM_NAME_Box: Incomplete
PDF_ENUM_NAME_Bt: Incomplete
PDF_ENUM_NAME_Btn: Incomplete
PDF_ENUM_NAME_Butt: Incomplete
PDF_ENUM_NAME_ByteRange: Incomplete
PDF_ENUM_NAME_C: Incomplete
PDF_ENUM_NAME_C0: Incomplete
PDF_ENUM_NAME_C1: Incomplete
PDF_ENUM_NAME_CA: Incomplete
PDF_ENUM_NAME_CCF: Incomplete
PDF_ENUM_NAME_CCITTFaxDecode: Incomplete
PDF_ENUM_NAME_CF: Incomplete
PDF_ENUM_NAME_CFM: Incomplete
PDF_ENUM_NAME_CI: Incomplete
PDF_ENUM_NAME_CIDFontType0: Incomplete
PDF_ENUM_NAME_CIDFontType0C: Incomplete
PDF_ENUM_NAME_CIDFontType2: Incomplete
PDF_ENUM_NAME_CIDSystemInfo: Incomplete
PDF_ENUM_NAME_CIDToGIDMap: Incomplete
PDF_ENUM_NAME_CL: Incomplete
PDF_ENUM_NAME_CMYK: Incomplete
PDF_ENUM_NAME_CO: Incomplete
PDF_ENUM_NAME_CP: Incomplete
PDF_ENUM_NAME_CS: Incomplete
PDF_ENUM_NAME_CalCMYK: Incomplete
PDF_ENUM_NAME_CalGray: Incomplete
PDF_ENUM_NAME_CalRGB: Incomplete
PDF_ENUM_NAME_Cap: Incomplete
PDF_ENUM_NAME_CapHeight: Incomplete
PDF_ENUM_NAME_Caption: Incomplete
PDF_ENUM_NAME_Caret: Incomplete
PDF_ENUM_NAME_Catalog: Incomplete
PDF_ENUM_NAME_Cert: Incomplete
PDF_ENUM_NAME_Ch: Incomplete
PDF_ENUM_NAME_Changes: Incomplete
PDF_ENUM_NAME_CharProcs: Incomplete
PDF_ENUM_NAME_CheckSum: Incomplete
PDF_ENUM_NAME_Circle: Incomplete
PDF_ENUM_NAME_ClosedArrow: Incomplete
PDF_ENUM_NAME_Code: Incomplete
PDF_ENUM_NAME_Collection: Incomplete
PDF_ENUM_NAME_ColorSpace: Incomplete
PDF_ENUM_NAME_ColorTransform: Incomplete
PDF_ENUM_NAME_Colorants: Incomplete
PDF_ENUM_NAME_Colors: Incomplete
PDF_ENUM_NAME_Columns: Incomplete
PDF_ENUM_NAME_Confidential: Incomplete
PDF_ENUM_NAME_Configs: Incomplete
PDF_ENUM_NAME_ContactInfo: Incomplete
PDF_ENUM_NAME_Contents: Incomplete
PDF_ENUM_NAME_Coords: Incomplete
PDF_ENUM_NAME_Count: Incomplete
PDF_ENUM_NAME_Cover: Incomplete
PDF_ENUM_NAME_CreationDate: Incomplete
PDF_ENUM_NAME_Creator: Incomplete
PDF_ENUM_NAME_CropBox: Incomplete
PDF_ENUM_NAME_Crypt: Incomplete
PDF_ENUM_NAME_D: Incomplete
PDF_ENUM_NAME_DA: Incomplete
PDF_ENUM_NAME_DC: Incomplete
PDF_ENUM_NAME_DCT: Incomplete
PDF_ENUM_NAME_DCTDecode: Incomplete
PDF_ENUM_NAME_DL: Incomplete
PDF_ENUM_NAME_DOS: Incomplete
PDF_ENUM_NAME_DP: Incomplete
PDF_ENUM_NAME_DR: Incomplete
PDF_ENUM_NAME_DS: Incomplete
PDF_ENUM_NAME_DV: Incomplete
PDF_ENUM_NAME_DW: Incomplete
PDF_ENUM_NAME_DW2: Incomplete
PDF_ENUM_NAME_DamagedRowsBeforeError: Incomplete
PDF_ENUM_NAME_Data: Incomplete
PDF_ENUM_NAME_Date: Incomplete
PDF_ENUM_NAME_Decode: Incomplete
PDF_ENUM_NAME_DecodeParms: Incomplete
PDF_ENUM_NAME_Default: Incomplete
PDF_ENUM_NAME_DefaultCMYK: Incomplete
PDF_ENUM_NAME_DefaultGray: Incomplete
PDF_ENUM_NAME_DefaultRGB: Incomplete
PDF_ENUM_NAME_Departmental: Incomplete
PDF_ENUM_NAME_Desc: Incomplete
PDF_ENUM_NAME_DescendantFonts: Incomplete
PDF_ENUM_NAME_Descent: Incomplete
PDF_ENUM_NAME_Design: Incomplete
PDF_ENUM_NAME_Dest: Incomplete
PDF_ENUM_NAME_DestOutputProfile: Incomplete
PDF_ENUM_NAME_Dests: Incomplete
PDF_ENUM_NAME_DeviceCMYK: Incomplete
PDF_ENUM_NAME_DeviceGray: Incomplete
PDF_ENUM_NAME_DeviceN: Incomplete
PDF_ENUM_NAME_DeviceRGB: Incomplete
PDF_ENUM_NAME_Di: Incomplete
PDF_ENUM_NAME_Diamond: Incomplete
PDF_ENUM_NAME_Differences: Incomplete
PDF_ENUM_NAME_DigestLocation: Incomplete
PDF_ENUM_NAME_DigestMethod: Incomplete
PDF_ENUM_NAME_DigestValue: Incomplete
PDF_ENUM_NAME_Dissolve: Incomplete
PDF_ENUM_NAME_Div: Incomplete
PDF_ENUM_NAME_Dm: Incomplete
PDF_ENUM_NAME_DocMDP: Incomplete
PDF_ENUM_NAME_Document: Incomplete
PDF_ENUM_NAME_DocumentFragment: Incomplete
PDF_ENUM_NAME_Domain: Incomplete
PDF_ENUM_NAME_Draft: Incomplete
PDF_ENUM_NAME_Dur: Incomplete
PDF_ENUM_NAME_E: Incomplete
PDF_ENUM_NAME_EF: Incomplete
PDF_ENUM_NAME_EarlyChange: Incomplete
PDF_ENUM_NAME_Em: Incomplete
PDF_ENUM_NAME_EmbeddedFile: Incomplete
PDF_ENUM_NAME_EmbeddedFiles: Incomplete
PDF_ENUM_NAME_Encode: Incomplete
PDF_ENUM_NAME_EncodedByteAlign: Incomplete
PDF_ENUM_NAME_Encoding: Incomplete
PDF_ENUM_NAME_Encrypt: Incomplete
PDF_ENUM_NAME_EncryptMetadata: Incomplete
PDF_ENUM_NAME_EncryptedPayload: Incomplete
PDF_ENUM_NAME_EndOfBlock: Incomplete
PDF_ENUM_NAME_EndOfLine: Incomplete
PDF_ENUM_NAME_Exclude: Incomplete
PDF_ENUM_NAME_Experimental: Incomplete
PDF_ENUM_NAME_Expired: Incomplete
PDF_ENUM_NAME_ExtGState: Incomplete
PDF_ENUM_NAME_Extend: Incomplete
PDF_ENUM_NAME_F: Incomplete
PDF_ENUM_NAME_FENote: Incomplete
PDF_ENUM_NAME_FL: Incomplete
PDF_ENUM_NAME_FRM: Incomplete
PDF_ENUM_NAME_FS: Incomplete
PDF_ENUM_NAME_FT: Incomplete
PDF_ENUM_NAME_Fade: Incomplete
PDF_ENUM_NAME_Ff: Incomplete
PDF_ENUM_NAME_FieldMDP: Incomplete
PDF_ENUM_NAME_Fields: Incomplete
PDF_ENUM_NAME_Figure: Incomplete
PDF_ENUM_NAME_FileAttachment: Incomplete
PDF_ENUM_NAME_FileSize: Incomplete
PDF_ENUM_NAME_Filespec: Incomplete
PDF_ENUM_NAME_Filter: Incomplete
PDF_ENUM_NAME_Final: Incomplete
PDF_ENUM_NAME_Fingerprint: Incomplete
PDF_ENUM_NAME_First: Incomplete
PDF_ENUM_NAME_FirstChar: Incomplete
PDF_ENUM_NAME_FirstPage: Incomplete
PDF_ENUM_NAME_Fit: Incomplete
PDF_ENUM_NAME_FitB: Incomplete
PDF_ENUM_NAME_FitBH: Incomplete
PDF_ENUM_NAME_FitBV: Incomplete
PDF_ENUM_NAME_FitH: Incomplete
PDF_ENUM_NAME_FitR: Incomplete
PDF_ENUM_NAME_FitV: Incomplete
PDF_ENUM_NAME_Fl: Incomplete
PDF_ENUM_NAME_Flags: Incomplete
PDF_ENUM_NAME_FlateDecode: Incomplete
PDF_ENUM_NAME_Fly: Incomplete
PDF_ENUM_NAME_Font: Incomplete
PDF_ENUM_NAME_FontBBox: Incomplete
PDF_ENUM_NAME_FontDescriptor: Incomplete
PDF_ENUM_NAME_FontFile: Incomplete
PDF_ENUM_NAME_FontFile2: Incomplete
PDF_ENUM_NAME_FontFile3: Incomplete
PDF_ENUM_NAME_FontMatrix: Incomplete
PDF_ENUM_NAME_FontName: Incomplete
PDF_ENUM_NAME_ForComment: Incomplete
PDF_ENUM_NAME_ForPublicRelease: Incomplete
PDF_ENUM_NAME_Form: Incomplete
PDF_ENUM_NAME_FormData: Incomplete
PDF_ENUM_NAME_FormEx: Incomplete
PDF_ENUM_NAME_FormType: Incomplete
PDF_ENUM_NAME_Formula: Incomplete
PDF_ENUM_NAME_FreeText: Incomplete
PDF_ENUM_NAME_FreeTextCallout: Incomplete
PDF_ENUM_NAME_FreeTextTypeWriter: Incomplete
PDF_ENUM_NAME_Function: Incomplete
PDF_ENUM_NAME_FunctionType: Incomplete
PDF_ENUM_NAME_Functions: Incomplete
PDF_ENUM_NAME_G: Incomplete
PDF_ENUM_NAME_GTS_PDFX: Incomplete
PDF_ENUM_NAME_Gamma: Incomplete
PDF_ENUM_NAME_Glitter: Incomplete
PDF_ENUM_NAME_GoTo: Incomplete
PDF_ENUM_NAME_GoToR: Incomplete
PDF_ENUM_NAME_Group: Incomplete
PDF_ENUM_NAME_H: Incomplete
PDF_ENUM_NAME_H1: Incomplete
PDF_ENUM_NAME_H2: Incomplete
PDF_ENUM_NAME_H3: Incomplete
PDF_ENUM_NAME_H4: Incomplete
PDF_ENUM_NAME_H5: Incomplete
PDF_ENUM_NAME_H6: Incomplete
PDF_ENUM_NAME_Height: Incomplete
PDF_ENUM_NAME_Helv: Incomplete
PDF_ENUM_NAME_Highlight: Incomplete
PDF_ENUM_NAME_HistoryPos: Incomplete
PDF_ENUM_NAME_I: Incomplete
PDF_ENUM_NAME_IC: Incomplete
PDF_ENUM_NAME_ICCBased: Incomplete
PDF_ENUM_NAME_ID: Incomplete
PDF_ENUM_NAME_IM: Incomplete
PDF_ENUM_NAME_IRT: Incomplete
PDF_ENUM_NAME_IT: Incomplete
PDF_ENUM_NAME_Identity: Incomplete
PDF_ENUM_NAME_Identity_H: Incomplete
PDF_ENUM_NAME_Identity_V: Incomplete
PDF_ENUM_NAME_Image: Incomplete
PDF_ENUM_NAME_ImageB: Incomplete
PDF_ENUM_NAME_ImageC: Incomplete
PDF_ENUM_NAME_ImageI: Incomplete
PDF_ENUM_NAME_ImageMask: Incomplete
PDF_ENUM_NAME_Include: Incomplete
PDF_ENUM_NAME_Index: Incomplete
PDF_ENUM_NAME_Indexed: Incomplete
PDF_ENUM_NAME_Info: Incomplete
PDF_ENUM_NAME_Ink: Incomplete
PDF_ENUM_NAME_InkList: Incomplete
PDF_ENUM_NAME_Intent: Incomplete
PDF_ENUM_NAME_Interpolate: Incomplete
PDF_ENUM_NAME_IsMap: Incomplete
PDF_ENUM_NAME_ItalicAngle: Incomplete
PDF_ENUM_NAME_JBIG2Decode: Incomplete
PDF_ENUM_NAME_JBIG2Globals: Incomplete
PDF_ENUM_NAME_JPXDecode: Incomplete
PDF_ENUM_NAME_JS: Incomplete
PDF_ENUM_NAME_JavaScript: Incomplete
PDF_ENUM_NAME_K: Incomplete
PDF_ENUM_NAME_Keywords: Incomplete
PDF_ENUM_NAME_Kids: Incomplete
PDF_ENUM_NAME_L: Incomplete
PDF_ENUM_NAME_LBody: Incomplete
PDF_ENUM_NAME_LC: Incomplete
PDF_ENUM_NAME_LE: Incomplete
PDF_ENUM_NAME_LI: Incomplete
PDF_ENUM_NAME_LJ: Incomplete
PDF_ENUM_NAME_LL: Incomplete
PDF_ENUM_NAME_LLE: Incomplete
PDF_ENUM_NAME_LLO: Incomplete
PDF_ENUM_NAME_LW: Incomplete
PDF_ENUM_NAME_LZ: Incomplete
PDF_ENUM_NAME_LZW: Incomplete
PDF_ENUM_NAME_LZWDecode: Incomplete
PDF_ENUM_NAME_Lab: Incomplete
PDF_ENUM_NAME_Label: Incomplete
PDF_ENUM_NAME_Lang: Incomplete
PDF_ENUM_NAME_Last: Incomplete
PDF_ENUM_NAME_LastChar: Incomplete
PDF_ENUM_NAME_LastPage: Incomplete
PDF_ENUM_NAME_Launch: Incomplete
PDF_ENUM_NAME_Layer: Incomplete
PDF_ENUM_NAME_Lbl: Incomplete
PDF_ENUM_NAME_Length: Incomplete
PDF_ENUM_NAME_Length1: Incomplete
PDF_ENUM_NAME_Length2: Incomplete
PDF_ENUM_NAME_Length3: Incomplete
PDF_ENUM_NAME_Limits: Incomplete
PDF_ENUM_NAME_Line: Incomplete
PDF_ENUM_NAME_LineArrow: Incomplete
PDF_ENUM_NAME_LineDimension: Incomplete
PDF_ENUM_NAME_Linearized: Incomplete
PDF_ENUM_NAME_Link: Incomplete
PDF_ENUM_NAME_List: Incomplete
PDF_ENUM_NAME_Location: Incomplete
PDF_ENUM_NAME_Lock: Incomplete
PDF_ENUM_NAME_Locked: Incomplete
PDF_ENUM_NAME_Luminosity: Incomplete
PDF_ENUM_NAME_M: Incomplete
PDF_ENUM_NAME_MCID: Incomplete
PDF_ENUM_NAME_MK: Incomplete
PDF_ENUM_NAME_ML: Incomplete
PDF_ENUM_NAME_MMType1: Incomplete
PDF_ENUM_NAME_Mac: Incomplete
PDF_ENUM_NAME_Mask: Incomplete
PDF_ENUM_NAME_Matrix: Incomplete
PDF_ENUM_NAME_Matte: Incomplete
PDF_ENUM_NAME_MaxLen: Incomplete
PDF_ENUM_NAME_MediaBox: Incomplete
PDF_ENUM_NAME_Metadata: Incomplete
PDF_ENUM_NAME_MissingWidth: Incomplete
PDF_ENUM_NAME_ModDate: Incomplete
PDF_ENUM_NAME_Movie: Incomplete
PDF_ENUM_NAME_Msg: Incomplete
PDF_ENUM_NAME_Multiply: Incomplete
PDF_ENUM_NAME_N: Incomplete
PDF_ENUM_NAME_Name: Incomplete
PDF_ENUM_NAME_Named: Incomplete
PDF_ENUM_NAME_Names: Incomplete
PDF_ENUM_NAME_NewWindow: Incomplete
PDF_ENUM_NAME_Next: Incomplete
PDF_ENUM_NAME_NextPage: Incomplete
PDF_ENUM_NAME_NonEFontNoWarn: Incomplete
PDF_ENUM_NAME_NonStruct: Incomplete
PDF_ENUM_NAME_None: Incomplete
PDF_ENUM_NAME_Normal: Incomplete
PDF_ENUM_NAME_NotApproved: Incomplete
PDF_ENUM_NAME_NotForPublicRelease: Incomplete
PDF_ENUM_NAME_Note: Incomplete
PDF_ENUM_NAME_NumSections: Incomplete
PDF_ENUM_NAME_Nums: Incomplete
PDF_ENUM_NAME_O: Incomplete
PDF_ENUM_NAME_OC: Incomplete
PDF_ENUM_NAME_OCG: Incomplete
PDF_ENUM_NAME_OCGs: Incomplete
PDF_ENUM_NAME_OCMD: Incomplete
PDF_ENUM_NAME_OCProperties: Incomplete
PDF_ENUM_NAME_OE: Incomplete
PDF_ENUM_NAME_OFF: Incomplete
PDF_ENUM_NAME_ON: Incomplete
PDF_ENUM_NAME_OP: Incomplete
PDF_ENUM_NAME_OPM: Incomplete
PDF_ENUM_NAME_OS: Incomplete
PDF_ENUM_NAME_ObjStm: Incomplete
PDF_ENUM_NAME_Of: Incomplete
PDF_ENUM_NAME_Off: Incomplete
PDF_ENUM_NAME_Open: Incomplete
PDF_ENUM_NAME_OpenArrow: Incomplete
PDF_ENUM_NAME_OpenType: Incomplete
PDF_ENUM_NAME_Opt: Incomplete
PDF_ENUM_NAME_Order: Incomplete
PDF_ENUM_NAME_Ordering: Incomplete
PDF_ENUM_NAME_Outlines: Incomplete
PDF_ENUM_NAME_OutputCondition: Incomplete
PDF_ENUM_NAME_OutputConditionIdentifier: Incomplete
PDF_ENUM_NAME_OutputIntent: Incomplete
PDF_ENUM_NAME_OutputIntents: Incomplete
PDF_ENUM_NAME_P: Incomplete
PDF_ENUM_NAME_PDF: Incomplete
PDF_ENUM_NAME_PS: Incomplete
PDF_ENUM_NAME_Page: Incomplete
PDF_ENUM_NAME_PageLabels: Incomplete
PDF_ENUM_NAME_PageMode: Incomplete
PDF_ENUM_NAME_Pages: Incomplete
PDF_ENUM_NAME_PaintType: Incomplete
PDF_ENUM_NAME_Params: Incomplete
PDF_ENUM_NAME_Parent: Incomplete
PDF_ENUM_NAME_ParentTree: Incomplete
PDF_ENUM_NAME_Part: Incomplete
PDF_ENUM_NAME_Pattern: Incomplete
PDF_ENUM_NAME_PatternType: Incomplete
PDF_ENUM_NAME_Perms: Incomplete
PDF_ENUM_NAME_PieceInfo: Incomplete
PDF_ENUM_NAME_PolyLine: Incomplete
PDF_ENUM_NAME_PolyLineDimension: Incomplete
PDF_ENUM_NAME_Polygon: Incomplete
PDF_ENUM_NAME_PolygonCloud: Incomplete
PDF_ENUM_NAME_PolygonDimension: Incomplete
PDF_ENUM_NAME_Popup: Incomplete
PDF_ENUM_NAME_PreRelease: Incomplete
PDF_ENUM_NAME_Predictor: Incomplete
PDF_ENUM_NAME_Prev: Incomplete
PDF_ENUM_NAME_PrevPage: Incomplete
PDF_ENUM_NAME_Preview: Incomplete
PDF_ENUM_NAME_Print: Incomplete
PDF_ENUM_NAME_PrinterMark: Incomplete
PDF_ENUM_NAME_Private: Incomplete
PDF_ENUM_NAME_ProcSet: Incomplete
PDF_ENUM_NAME_Producer: Incomplete
PDF_ENUM_NAME_Prop_AuthTime: Incomplete
PDF_ENUM_NAME_Prop_AuthType: Incomplete
PDF_ENUM_NAME_Prop_Build: Incomplete
PDF_ENUM_NAME_Properties: Incomplete
PDF_ENUM_NAME_PubSec: Incomplete
PDF_ENUM_NAME_Push: Incomplete
PDF_ENUM_NAME_Q: Incomplete
PDF_ENUM_NAME_QuadPoints: Incomplete
PDF_ENUM_NAME_Quote: Incomplete
PDF_ENUM_NAME_R: Incomplete
PDF_ENUM_NAME_RB: Incomplete
PDF_ENUM_NAME_RBGroups: Incomplete
PDF_ENUM_NAME_RC: Incomplete
PDF_ENUM_NAME_RClosedArrow: Incomplete
PDF_ENUM_NAME_RD: Incomplete
PDF_ENUM_NAME_REx: Incomplete
PDF_ENUM_NAME_RGB: Incomplete
PDF_ENUM_NAME_RI: Incomplete
PDF_ENUM_NAME_RL: Incomplete
PDF_ENUM_NAME_ROpenArrow: Incomplete
PDF_ENUM_NAME_RP: Incomplete
PDF_ENUM_NAME_RT: Incomplete
PDF_ENUM_NAME_Range: Incomplete
PDF_ENUM_NAME_Reason: Incomplete
PDF_ENUM_NAME_Rect: Incomplete
PDF_ENUM_NAME_Redact: Incomplete
PDF_ENUM_NAME_Ref: Incomplete
PDF_ENUM_NAME_Reference: Incomplete
PDF_ENUM_NAME_Registry: Incomplete
PDF_ENUM_NAME_ResetForm: Incomplete
PDF_ENUM_NAME_Resources: Incomplete
PDF_ENUM_NAME_RoleMap: Incomplete
PDF_ENUM_NAME_Root: Incomplete
PDF_ENUM_NAME_Rotate: Incomplete
PDF_ENUM_NAME_Rows: Incomplete
PDF_ENUM_NAME_Ruby: Incomplete
PDF_ENUM_NAME_RunLengthDecode: Incomplete
PDF_ENUM_NAME_S: Incomplete
PDF_ENUM_NAME_SMask: Incomplete
PDF_ENUM_NAME_SMaskInData: Incomplete
PDF_ENUM_NAME_Schema: Incomplete
PDF_ENUM_NAME_Screen: Incomplete
PDF_ENUM_NAME_Sect: Incomplete
PDF_ENUM_NAME_Separation: Incomplete
PDF_ENUM_NAME_Shading: Incomplete
PDF_ENUM_NAME_ShadingType: Incomplete
PDF_ENUM_NAME_Si: Incomplete
PDF_ENUM_NAME_Sig: Incomplete
PDF_ENUM_NAME_SigFlags: Incomplete
PDF_ENUM_NAME_SigQ: Incomplete
PDF_ENUM_NAME_SigRef: Incomplete
PDF_ENUM_NAME_Size: Incomplete
PDF_ENUM_NAME_Slash: Incomplete
PDF_ENUM_NAME_Sold: Incomplete
PDF_ENUM_NAME_Sound: Incomplete
PDF_ENUM_NAME_Source: Incomplete
PDF_ENUM_NAME_Span: Incomplete
PDF_ENUM_NAME_Split: Incomplete
PDF_ENUM_NAME_Square: Incomplete
PDF_ENUM_NAME_Squiggly: Incomplete
PDF_ENUM_NAME_St: Incomplete
PDF_ENUM_NAME_Stamp: Incomplete
PDF_ENUM_NAME_StampImage: Incomplete
PDF_ENUM_NAME_StampSnapshot: Incomplete
PDF_ENUM_NAME_Standard: Incomplete
PDF_ENUM_NAME_StdCF: Incomplete
PDF_ENUM_NAME_StemV: Incomplete
PDF_ENUM_NAME_StmF: Incomplete
PDF_ENUM_NAME_StrF: Incomplete
PDF_ENUM_NAME_StrikeOut: Incomplete
PDF_ENUM_NAME_Strong: Incomplete
PDF_ENUM_NAME_StructParent: Incomplete
PDF_ENUM_NAME_StructParents: Incomplete
PDF_ENUM_NAME_StructTreeRoot: Incomplete
PDF_ENUM_NAME_Sub: Incomplete
PDF_ENUM_NAME_SubFilter: Incomplete
PDF_ENUM_NAME_Subject: Incomplete
PDF_ENUM_NAME_Subtype: Incomplete
PDF_ENUM_NAME_Subtype2: Incomplete
PDF_ENUM_NAME_Supplement: Incomplete
PDF_ENUM_NAME_Symb: Incomplete
PDF_ENUM_NAME_T: Incomplete
PDF_ENUM_NAME_TBody: Incomplete
PDF_ENUM_NAME_TD: Incomplete
PDF_ENUM_NAME_TFoot: Incomplete
PDF_ENUM_NAME_TH: Incomplete
PDF_ENUM_NAME_THead: Incomplete
PDF_ENUM_NAME_TI: Incomplete
PDF_ENUM_NAME_TOC: Incomplete
PDF_ENUM_NAME_TOCI: Incomplete
PDF_ENUM_NAME_TR: Incomplete
PDF_ENUM_NAME_TR2: Incomplete
PDF_ENUM_NAME_TU: Incomplete
PDF_ENUM_NAME_Table: Incomplete
PDF_ENUM_NAME_Text: Incomplete
PDF_ENUM_NAME_Thumb: Incomplete
PDF_ENUM_NAME_TilingType: Incomplete
PDF_ENUM_NAME_Times: Incomplete
PDF_ENUM_NAME_Title: Incomplete
PDF_ENUM_NAME_ToUnicode: Incomplete
PDF_ENUM_NAME_Top: Incomplete
PDF_ENUM_NAME_TopSecret: Incomplete
PDF_ENUM_NAME_Trans: Incomplete
PDF_ENUM_NAME_TransformMethod: Incomplete
PDF_ENUM_NAME_TransformParams: Incomplete
PDF_ENUM_NAME_Transparency: Incomplete
PDF_ENUM_NAME_TrapNet: Incomplete
PDF_ENUM_NAME_TrimBox: Incomplete
PDF_ENUM_NAME_TrueType: Incomplete
PDF_ENUM_NAME_TrustedMode: Incomplete
PDF_ENUM_NAME_Tx: Incomplete
PDF_ENUM_NAME_Type: Incomplete
PDF_ENUM_NAME_Type0: Incomplete
PDF_ENUM_NAME_Type1: Incomplete
PDF_ENUM_NAME_Type1C: Incomplete
PDF_ENUM_NAME_Type3: Incomplete
PDF_ENUM_NAME_U: Incomplete
PDF_ENUM_NAME_UE: Incomplete
PDF_ENUM_NAME_UF: Incomplete
PDF_ENUM_NAME_URI: Incomplete
PDF_ENUM_NAME_URL: Incomplete
PDF_ENUM_NAME_Unchanged: Incomplete
PDF_ENUM_NAME_Uncover: Incomplete
PDF_ENUM_NAME_Underline: Incomplete
PDF_ENUM_NAME_Unix: Incomplete
PDF_ENUM_NAME_Unspecified: Incomplete
PDF_ENUM_NAME_Usage: Incomplete
PDF_ENUM_NAME_UseBlackPtComp: Incomplete
PDF_ENUM_NAME_UseCMap: Incomplete
PDF_ENUM_NAME_UseOutlines: Incomplete
PDF_ENUM_NAME_UserUnit: Incomplete
PDF_ENUM_NAME_V: Incomplete
PDF_ENUM_NAME_V2: Incomplete
PDF_ENUM_NAME_VE: Incomplete
PDF_ENUM_NAME_Version: Incomplete
PDF_ENUM_NAME_Vertices: Incomplete
PDF_ENUM_NAME_VerticesPerRow: Incomplete
PDF_ENUM_NAME_View: Incomplete
PDF_ENUM_NAME_W: Incomplete
PDF_ENUM_NAME_W2: Incomplete
PDF_ENUM_NAME_WMode: Incomplete
PDF_ENUM_NAME_WP: Incomplete
PDF_ENUM_NAME_WT: Incomplete
PDF_ENUM_NAME_Warichu: Incomplete
PDF_ENUM_NAME_Watermark: Incomplete
PDF_ENUM_NAME_WhitePoint: Incomplete
PDF_ENUM_NAME_Widget: Incomplete
PDF_ENUM_NAME_Width: Incomplete
PDF_ENUM_NAME_Widths: Incomplete
PDF_ENUM_NAME_WinAnsiEncoding: Incomplete
PDF_ENUM_NAME_Wipe: Incomplete
PDF_ENUM_NAME_XFA: Incomplete
PDF_ENUM_NAME_XHeight: Incomplete
PDF_ENUM_NAME_XML: Incomplete
PDF_ENUM_NAME_XObject: Incomplete
PDF_ENUM_NAME_XRef: Incomplete
PDF_ENUM_NAME_XRefStm: Incomplete
PDF_ENUM_NAME_XStep: Incomplete
PDF_ENUM_NAME_XYZ: Incomplete
PDF_ENUM_NAME_YStep: Incomplete
PDF_ENUM_NAME_Yes: Incomplete
PDF_ENUM_NAME_ZaDb: Incomplete
PDF_ENUM_NAME_a: Incomplete
PDF_ENUM_NAME_adbe_pkcs7_detached: Incomplete
PDF_ENUM_NAME_ca: Incomplete
PDF_ENUM_NAME_n0: Incomplete
PDF_ENUM_NAME_n1: Incomplete
PDF_ENUM_NAME_n2: Incomplete
PDF_ENUM_NAME_op: Incomplete
PDF_ENUM_NAME_r: Incomplete
PDF_ENUM_LIMIT: Incomplete
PDF_LEXBUF_SMALL: Incomplete
PDF_LEXBUF_LARGE: Incomplete

class pdf_lexbuf:
    thisown: Incomplete
    size: Incomplete
    base_size: Incomplete
    len: Incomplete
    i: Incomplete
    f: Incomplete
    scratch: Incomplete
    buffer: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_lexbuf_large:
    thisown: Incomplete
    base: Incomplete
    buffer: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_js_console:
    thisown: Incomplete
    drop: Incomplete
    show: Incomplete
    hide: Incomplete
    clear: Incomplete
    write: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_layer_config:
    thisown: Incomplete
    name: Incomplete
    creator: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_LAYER_UI_LABEL: Incomplete
PDF_LAYER_UI_CHECKBOX: Incomplete
PDF_LAYER_UI_RADIOBOX: Incomplete

class pdf_layer_config_ui:
    thisown: Incomplete
    text: Incomplete
    depth: Incomplete
    type: Incomplete
    selected: Incomplete
    locked: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_unsaved_sig:
    thisown: Incomplete
    field: Incomplete
    byte_range_start: Incomplete
    byte_range_end: Incomplete
    contents_start: Incomplete
    contents_end: Incomplete
    signer: Incomplete
    next: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_rev_page_map:
    thisown: Incomplete
    page: Incomplete
    object: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_hint_page:
    thisown: Incomplete
    number: Incomplete
    offset: Incomplete
    index: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_hint_shared:
    thisown: Incomplete
    number: Incomplete
    offset: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_document:
    thisown: Incomplete
    super: Incomplete
    file: Incomplete
    version: Incomplete
    is_fdf: Incomplete
    startxref: Incomplete
    file_size: Incomplete
    crypt: Incomplete
    ocg: Incomplete
    oi: Incomplete
    max_xref_len: Incomplete
    num_xref_sections: Incomplete
    saved_num_xref_sections: Incomplete
    num_incremental_sections: Incomplete
    xref_base: Incomplete
    disallow_new_increments: Incomplete
    local_xref: Incomplete
    local_xref_nesting: Incomplete
    xref_sections: Incomplete
    saved_xref_sections: Incomplete
    xref_index: Incomplete
    save_in_progress: Incomplete
    last_xref_was_old_style: Incomplete
    has_linearization_object: Incomplete
    map_page_count: Incomplete
    rev_page_map: Incomplete
    fwd_page_map: Incomplete
    page_tree_broken: Incomplete
    repair_attempted: Incomplete
    repair_in_progress: Incomplete
    non_structural_change: Incomplete
    file_reading_linearly: Incomplete
    file_length: Incomplete
    linear_page_count: Incomplete
    linear_obj: Incomplete
    linear_page_refs: Incomplete
    linear_page1_obj_num: Incomplete
    linear_pos: Incomplete
    linear_page_num: Incomplete
    hint_object_offset: Incomplete
    hint_object_length: Incomplete
    hints_loaded: Incomplete
    hint_page: Incomplete
    hint_shared_ref: Incomplete
    hint_shared: Incomplete
    hint_obj_offsets_max: Incomplete
    hint_obj_offsets: Incomplete
    resources_localised: Incomplete
    lexbuf: Incomplete
    js: Incomplete
    recalculate: Incomplete
    redacted: Incomplete
    resynth_required: Incomplete
    event_cb: Incomplete
    free_event_data_cb: Incomplete
    event_cb_data: Incomplete
    num_type3_fonts: Incomplete
    max_type3_fonts: Incomplete
    type3_fonts: Incomplete
    orphans_max: Incomplete
    orphans_count: Incomplete
    orphans: Incomplete
    xfa: Incomplete
    journal: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_PAGE_LABEL_NONE: Incomplete
PDF_PAGE_LABEL_DECIMAL: Incomplete
PDF_PAGE_LABEL_ROMAN_UC: Incomplete
PDF_PAGE_LABEL_ROMAN_LC: Incomplete
PDF_PAGE_LABEL_ALPHA_UC: Incomplete
PDF_PAGE_LABEL_ALPHA_LC: Incomplete

class pdf_write_options:
    thisown: Incomplete
    do_incremental: Incomplete
    do_pretty: Incomplete
    do_ascii: Incomplete
    do_compress: Incomplete
    do_compress_images: Incomplete
    do_compress_fonts: Incomplete
    do_decompress: Incomplete
    do_garbage: Incomplete
    do_linear: Incomplete
    do_clean: Incomplete
    do_sanitize: Incomplete
    do_appearance: Incomplete
    do_encrypt: Incomplete
    dont_regenerate_id: Incomplete
    permissions: Incomplete
    opwd_utf8: Incomplete
    upwd_utf8: Incomplete
    do_snapshot: Incomplete
    do_preserve_metadata: Incomplete
    do_use_objstms: Incomplete
    compression_effort: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_TOK_ERROR: Incomplete
PDF_TOK_EOF: Incomplete
PDF_TOK_OPEN_ARRAY: Incomplete
PDF_TOK_CLOSE_ARRAY: Incomplete
PDF_TOK_OPEN_DICT: Incomplete
PDF_TOK_CLOSE_DICT: Incomplete
PDF_TOK_OPEN_BRACE: Incomplete
PDF_TOK_CLOSE_BRACE: Incomplete
PDF_TOK_NAME: Incomplete
PDF_TOK_INT: Incomplete
PDF_TOK_REAL: Incomplete
PDF_TOK_STRING: Incomplete
PDF_TOK_KEYWORD: Incomplete
PDF_TOK_R: Incomplete
PDF_TOK_TRUE: Incomplete
PDF_TOK_FALSE: Incomplete
PDF_TOK_NULL: Incomplete
PDF_TOK_OBJ: Incomplete
PDF_TOK_ENDOBJ: Incomplete
PDF_TOK_STREAM: Incomplete
PDF_TOK_ENDSTREAM: Incomplete
PDF_TOK_XREF: Incomplete
PDF_TOK_TRAILER: Incomplete
PDF_TOK_STARTXREF: Incomplete
PDF_TOK_NEWOBJ: Incomplete
PDF_NUM_TOKENS: Incomplete

class pdf_xref_entry:
    thisown: Incomplete
    type: Incomplete
    marked: Incomplete
    gen: Incomplete
    num: Incomplete
    ofs: Incomplete
    stm_ofs: Incomplete
    stm_buf: Incomplete
    obj: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

pdf_default_write_options: Incomplete

class pdf_xref_subsec:
    thisown: Incomplete
    next: Incomplete
    len: Incomplete
    start: Incomplete
    table: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_xref:
    thisown: Incomplete
    num_objects: Incomplete
    subsec: Incomplete
    trailer: Incomplete
    pre_repair_trailer: Incomplete
    unsaved_sigs: Incomplete
    unsaved_sigs_end: Incomplete
    end_ofs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_ENCRYPT_KEEP: Incomplete
PDF_ENCRYPT_NONE: Incomplete
PDF_ENCRYPT_RC4_40: Incomplete
PDF_ENCRYPT_RC4_128: Incomplete
PDF_ENCRYPT_AES_128: Incomplete
PDF_ENCRYPT_AES_256: Incomplete
PDF_ENCRYPT_UNKNOWN: Incomplete
PDF_PERM_PRINT: Incomplete
PDF_PERM_MODIFY: Incomplete
PDF_PERM_COPY: Incomplete
PDF_PERM_ANNOTATE: Incomplete
PDF_PERM_FORM: Incomplete
PDF_PERM_ACCESSIBILITY: Incomplete
PDF_PERM_ASSEMBLE: Incomplete
PDF_PERM_PRINT_HQ: Incomplete
PDF_MRANGE_CAP: Incomplete

class pdf_range:
    thisown: Incomplete
    low: Incomplete
    high: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_xrange:
    thisown: Incomplete
    low: Incomplete
    high: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_mrange:
    thisown: Incomplete
    low: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_cmap:
    thisown: Incomplete
    storable: Incomplete
    cmap_name: Incomplete
    usecmap_name: Incomplete
    usecmap: Incomplete
    wmode: Incomplete
    codespace_len: Incomplete
    rlen: Incomplete
    rcap: Incomplete
    ranges: Incomplete
    xlen: Incomplete
    xcap: Incomplete
    xranges: Incomplete
    mlen: Incomplete
    mcap: Incomplete
    mranges: Incomplete
    dlen: Incomplete
    dcap: Incomplete
    dict: Incomplete
    tlen: Incomplete
    tcap: Incomplete
    ttop: Incomplete
    tree: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_FD_FIXED_PITCH: Incomplete
PDF_FD_SERIF: Incomplete
PDF_FD_SYMBOLIC: Incomplete
PDF_FD_SCRIPT: Incomplete
PDF_FD_NONSYMBOLIC: Incomplete
PDF_FD_ITALIC: Incomplete
PDF_FD_ALL_CAP: Incomplete
PDF_FD_SMALL_CAP: Incomplete
PDF_FD_FORCE_BOLD: Incomplete

class pdf_hmtx:
    thisown: Incomplete
    lo: Incomplete
    hi: Incomplete
    w: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_vmtx:
    thisown: Incomplete
    lo: Incomplete
    hi: Incomplete
    x: Incomplete
    y: Incomplete
    w: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_font_desc:
    thisown: Incomplete
    storable: Incomplete
    size: Incomplete
    font: Incomplete
    flags: Incomplete
    italic_angle: Incomplete
    ascent: Incomplete
    descent: Incomplete
    cap_height: Incomplete
    x_height: Incomplete
    missing_width: Incomplete
    encoding: Incomplete
    to_ttf_cmap: Incomplete
    cid_to_gid_len: Incomplete
    cid_to_gid: Incomplete
    to_unicode: Incomplete
    cid_to_ucs_len: Incomplete
    cid_to_ucs: Incomplete
    wmode: Incomplete
    hmtx_len: Incomplete
    hmtx_cap: Incomplete
    dhmtx: Incomplete
    hmtx: Incomplete
    vmtx_len: Incomplete
    vmtx_cap: Incomplete
    dvmtx: Incomplete
    vmtx: Incomplete
    is_embedded: Incomplete
    t3loading: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_SIMPLE_FONT_RESOURCE: Incomplete
PDF_CID_FONT_RESOURCE: Incomplete
PDF_CJK_FONT_RESOURCE: Incomplete
PDF_SIMPLE_ENCODING_LATIN: Incomplete
PDF_SIMPLE_ENCODING_GREEK: Incomplete
PDF_SIMPLE_ENCODING_CYRILLIC: Incomplete

class pdf_font_resource_key:
    thisown: Incomplete
    digest: Incomplete
    type: Incomplete
    encoding: Incomplete
    local_xref: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_pattern:
    thisown: Incomplete
    storable: Incomplete
    ismask: Incomplete
    xstep: Incomplete
    ystep: Incomplete
    matrix: Incomplete
    bbox: Incomplete
    document: Incomplete
    resources: Incomplete
    contents: Incomplete
    id: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_PROCESSOR_REQUIRES_DECODED_IMAGES: Incomplete

class pdf_processor:
    thisown: Incomplete
    refs: Incomplete
    closed: Incomplete
    close_processor: Incomplete
    drop_processor: Incomplete
    reset_processor: Incomplete
    push_resources: Incomplete
    pop_resources: Incomplete
    op_w: Incomplete
    op_j: Incomplete
    op_J: Incomplete
    op_M: Incomplete
    op_d: Incomplete
    op_ri: Incomplete
    op_i: Incomplete
    op_gs_begin: Incomplete
    op_gs_BM: Incomplete
    op_gs_ca: Incomplete
    op_gs_CA: Incomplete
    op_gs_SMask: Incomplete
    op_gs_end: Incomplete
    op_q: Incomplete
    op_Q: Incomplete
    op_cm: Incomplete
    op_m: Incomplete
    op_l: Incomplete
    op_c: Incomplete
    op_v: Incomplete
    op_y: Incomplete
    op_h: Incomplete
    op_re: Incomplete
    op_S: Incomplete
    op_s: Incomplete
    op_F: Incomplete
    op_f: Incomplete
    op_fstar: Incomplete
    op_B: Incomplete
    op_Bstar: Incomplete
    op_b: Incomplete
    op_bstar: Incomplete
    op_n: Incomplete
    op_W: Incomplete
    op_Wstar: Incomplete
    op_BT: Incomplete
    op_ET: Incomplete
    op_Tc: Incomplete
    op_Tw: Incomplete
    op_Tz: Incomplete
    op_TL: Incomplete
    op_Tf: Incomplete
    op_Tr: Incomplete
    op_Ts: Incomplete
    op_Td: Incomplete
    op_TD: Incomplete
    op_Tm: Incomplete
    op_Tstar: Incomplete
    op_TJ: Incomplete
    op_Tj: Incomplete
    op_squote: Incomplete
    op_dquote: Incomplete
    op_d0: Incomplete
    op_d1: Incomplete
    op_CS: Incomplete
    op_cs: Incomplete
    op_SC_pattern: Incomplete
    op_sc_pattern: Incomplete
    op_SC_shade: Incomplete
    op_sc_shade: Incomplete
    op_SC_color: Incomplete
    op_sc_color: Incomplete
    op_G: Incomplete
    op_g: Incomplete
    op_RG: Incomplete
    op_rg: Incomplete
    op_K: Incomplete
    op_k: Incomplete
    op_BI: Incomplete
    op_sh: Incomplete
    op_Do_image: Incomplete
    op_Do_form: Incomplete
    op_MP: Incomplete
    op_DP: Incomplete
    op_BMC: Incomplete
    op_BDC: Incomplete
    op_EMC: Incomplete
    op_BX: Incomplete
    op_EX: Incomplete
    op_gs_OP: Incomplete
    op_gs_op: Incomplete
    op_gs_OPM: Incomplete
    op_gs_UseBlackPtComp: Incomplete
    op_END: Incomplete
    usage: Incomplete
    hidden: Incomplete
    requirements: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_csi:
    thisown: Incomplete
    doc: Incomplete
    rdb: Incomplete
    buf: Incomplete
    cookie: Incomplete
    gstate: Incomplete
    xbalance: Incomplete
    in_text: Incomplete
    d1_rect: Incomplete
    obj: Incomplete
    name: Incomplete
    string: Incomplete
    string_len: Incomplete
    top: Incomplete
    stack: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_filter_factory:
    thisown: Incomplete
    filter: Incomplete
    options: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_filter_options:
    thisown: Incomplete
    recurse: Incomplete
    instance_forms: Incomplete
    ascii: Incomplete
    no_update: Incomplete
    opaque: Incomplete
    complete: Incomplete
    filters: Incomplete
    newlines: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_CULL_PATH_DROP: Incomplete
FZ_CULL_PATH_FILL: Incomplete
FZ_CULL_PATH_STROKE: Incomplete
FZ_CULL_PATH_FILL_STROKE: Incomplete
FZ_CULL_CLIP_PATH_DROP: Incomplete
FZ_CULL_CLIP_PATH_FILL: Incomplete
FZ_CULL_CLIP_PATH_STROKE: Incomplete
FZ_CULL_CLIP_PATH_FILL_STROKE: Incomplete
FZ_CULL_GLYPH: Incomplete
FZ_CULL_IMAGE: Incomplete
FZ_CULL_SHADING: Incomplete

class pdf_sanitize_filter_options:
    thisown: Incomplete
    opaque: Incomplete
    image_filter: Incomplete
    text_filter: Incomplete
    after_text_object: Incomplete
    culler: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_color_filter_options:
    thisown: Incomplete
    opaque: Incomplete
    color_rewrite: Incomplete
    image_rewrite: Incomplete
    shade_rewrite: Incomplete
    repeated_image_rewrite: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_text_state:
    thisown: Incomplete
    char_space: Incomplete
    word_space: Incomplete
    scale: Incomplete
    leading: Incomplete
    font: Incomplete
    fontname: Incomplete
    size: Incomplete
    render: Incomplete
    rise: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_text_object_state:
    thisown: Incomplete
    text: Incomplete
    text_bbox: Incomplete
    tlm: Incomplete
    tm: Incomplete
    text_mode: Incomplete
    cid: Incomplete
    gid: Incomplete
    char_bbox: Incomplete
    fontdesc: Incomplete
    char_tx: Incomplete
    char_ty: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_REDACT_IMAGE_NONE: Incomplete
PDF_REDACT_IMAGE_REMOVE: Incomplete
PDF_REDACT_IMAGE_PIXELS: Incomplete
PDF_REDACT_IMAGE_REMOVE_UNLESS_INVISIBLE: Incomplete
PDF_REDACT_LINE_ART_NONE: Incomplete
PDF_REDACT_LINE_ART_REMOVE_IF_COVERED: Incomplete
PDF_REDACT_LINE_ART_REMOVE_IF_TOUCHED: Incomplete
PDF_REDACT_TEXT_REMOVE: Incomplete
PDF_REDACT_TEXT_NONE: Incomplete

class pdf_redact_options:
    thisown: Incomplete
    black_boxes: Incomplete
    image_method: Incomplete
    line_art: Incomplete
    text: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_page:
    thisown: Incomplete
    super: Incomplete
    doc: Incomplete
    obj: Incomplete
    transparency: Incomplete
    overprint: Incomplete
    links: Incomplete
    annots: Incomplete
    annot_tailp: Incomplete
    widgets: Incomplete
    widget_tailp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_ANNOT_TEXT: Incomplete
PDF_ANNOT_LINK: Incomplete
PDF_ANNOT_FREE_TEXT: Incomplete
PDF_ANNOT_LINE: Incomplete
PDF_ANNOT_SQUARE: Incomplete
PDF_ANNOT_CIRCLE: Incomplete
PDF_ANNOT_POLYGON: Incomplete
PDF_ANNOT_POLY_LINE: Incomplete
PDF_ANNOT_HIGHLIGHT: Incomplete
PDF_ANNOT_UNDERLINE: Incomplete
PDF_ANNOT_SQUIGGLY: Incomplete
PDF_ANNOT_STRIKE_OUT: Incomplete
PDF_ANNOT_REDACT: Incomplete
PDF_ANNOT_STAMP: Incomplete
PDF_ANNOT_CARET: Incomplete
PDF_ANNOT_INK: Incomplete
PDF_ANNOT_POPUP: Incomplete
PDF_ANNOT_FILE_ATTACHMENT: Incomplete
PDF_ANNOT_SOUND: Incomplete
PDF_ANNOT_MOVIE: Incomplete
PDF_ANNOT_RICH_MEDIA: Incomplete
PDF_ANNOT_WIDGET: Incomplete
PDF_ANNOT_SCREEN: Incomplete
PDF_ANNOT_PRINTER_MARK: Incomplete
PDF_ANNOT_TRAP_NET: Incomplete
PDF_ANNOT_WATERMARK: Incomplete
PDF_ANNOT_3D: Incomplete
PDF_ANNOT_PROJECTION: Incomplete
PDF_ANNOT_UNKNOWN: Incomplete
PDF_ANNOT_IS_INVISIBLE: Incomplete
PDF_ANNOT_IS_HIDDEN: Incomplete
PDF_ANNOT_IS_PRINT: Incomplete
PDF_ANNOT_IS_NO_ZOOM: Incomplete
PDF_ANNOT_IS_NO_ROTATE: Incomplete
PDF_ANNOT_IS_NO_VIEW: Incomplete
PDF_ANNOT_IS_READ_ONLY: Incomplete
PDF_ANNOT_IS_LOCKED: Incomplete
PDF_ANNOT_IS_TOGGLE_NO_VIEW: Incomplete
PDF_ANNOT_IS_LOCKED_CONTENTS: Incomplete
PDF_ANNOT_LE_NONE: Incomplete
PDF_ANNOT_LE_SQUARE: Incomplete
PDF_ANNOT_LE_CIRCLE: Incomplete
PDF_ANNOT_LE_DIAMOND: Incomplete
PDF_ANNOT_LE_OPEN_ARROW: Incomplete
PDF_ANNOT_LE_CLOSED_ARROW: Incomplete
PDF_ANNOT_LE_BUTT: Incomplete
PDF_ANNOT_LE_R_OPEN_ARROW: Incomplete
PDF_ANNOT_LE_R_CLOSED_ARROW: Incomplete
PDF_ANNOT_LE_SLASH: Incomplete
PDF_ANNOT_Q_LEFT: Incomplete
PDF_ANNOT_Q_CENTER: Incomplete
PDF_ANNOT_Q_RIGHT: Incomplete
PDF_ANNOT_IT_DEFAULT: Incomplete
PDF_ANNOT_IT_FREETEXT_CALLOUT: Incomplete
PDF_ANNOT_IT_FREETEXT_TYPEWRITER: Incomplete
PDF_ANNOT_IT_LINE_ARROW: Incomplete
PDF_ANNOT_IT_LINE_DIMENSION: Incomplete
PDF_ANNOT_IT_POLYLINE_DIMENSION: Incomplete
PDF_ANNOT_IT_POLYGON_CLOUD: Incomplete
PDF_ANNOT_IT_POLYGON_DIMENSION: Incomplete
PDF_ANNOT_IT_STAMP_IMAGE: Incomplete
PDF_ANNOT_IT_STAMP_SNAPSHOT: Incomplete
PDF_ANNOT_IT_UNKNOWN: Incomplete
PDF_BORDER_STYLE_SOLID: Incomplete
PDF_BORDER_STYLE_DASHED: Incomplete
PDF_BORDER_STYLE_BEVELED: Incomplete
PDF_BORDER_STYLE_INSET: Incomplete
PDF_BORDER_STYLE_UNDERLINE: Incomplete
PDF_BORDER_EFFECT_NONE: Incomplete
PDF_BORDER_EFFECT_CLOUDY: Incomplete

class pdf_filespec_params:
    thisown: Incomplete
    filename: Incomplete
    mimetype: Incomplete
    size: Incomplete
    created: Incomplete
    modified: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_WIDGET_TYPE_UNKNOWN: Incomplete
PDF_WIDGET_TYPE_BUTTON: Incomplete
PDF_WIDGET_TYPE_CHECKBOX: Incomplete
PDF_WIDGET_TYPE_COMBOBOX: Incomplete
PDF_WIDGET_TYPE_LISTBOX: Incomplete
PDF_WIDGET_TYPE_RADIOBUTTON: Incomplete
PDF_WIDGET_TYPE_SIGNATURE: Incomplete
PDF_WIDGET_TYPE_TEXT: Incomplete
PDF_WIDGET_TX_FORMAT_NONE: Incomplete
PDF_WIDGET_TX_FORMAT_NUMBER: Incomplete
PDF_WIDGET_TX_FORMAT_SPECIAL: Incomplete
PDF_WIDGET_TX_FORMAT_DATE: Incomplete
PDF_WIDGET_TX_FORMAT_TIME: Incomplete
PDF_FIELD_IS_READ_ONLY: Incomplete
PDF_FIELD_IS_REQUIRED: Incomplete
PDF_FIELD_IS_NO_EXPORT: Incomplete
PDF_TX_FIELD_IS_MULTILINE: Incomplete
PDF_TX_FIELD_IS_PASSWORD: Incomplete
PDF_TX_FIELD_IS_FILE_SELECT: Incomplete
PDF_TX_FIELD_IS_DO_NOT_SPELL_CHECK: Incomplete
PDF_TX_FIELD_IS_DO_NOT_SCROLL: Incomplete
PDF_TX_FIELD_IS_COMB: Incomplete
PDF_TX_FIELD_IS_RICH_TEXT: Incomplete
PDF_BTN_FIELD_IS_NO_TOGGLE_TO_OFF: Incomplete
PDF_BTN_FIELD_IS_RADIO: Incomplete
PDF_BTN_FIELD_IS_PUSHBUTTON: Incomplete
PDF_BTN_FIELD_IS_RADIOS_IN_UNISON: Incomplete
PDF_CH_FIELD_IS_COMBO: Incomplete
PDF_CH_FIELD_IS_EDIT: Incomplete
PDF_CH_FIELD_IS_SORT: Incomplete
PDF_CH_FIELD_IS_MULTI_SELECT: Incomplete
PDF_CH_FIELD_IS_DO_NOT_SPELL_CHECK: Incomplete
PDF_CH_FIELD_IS_COMMIT_ON_SEL_CHANGE: Incomplete

class pdf_pkcs7_distinguished_name:
    thisown: Incomplete
    cn: Incomplete
    o: Incomplete
    ou: Incomplete
    email: Incomplete
    c: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_SIGNATURE_ERROR_OKAY: Incomplete
PDF_SIGNATURE_ERROR_NO_SIGNATURES: Incomplete
PDF_SIGNATURE_ERROR_NO_CERTIFICATE: Incomplete
PDF_SIGNATURE_ERROR_DIGEST_FAILURE: Incomplete
PDF_SIGNATURE_ERROR_SELF_SIGNED: Incomplete
PDF_SIGNATURE_ERROR_SELF_SIGNED_IN_CHAIN: Incomplete
PDF_SIGNATURE_ERROR_NOT_TRUSTED: Incomplete
PDF_SIGNATURE_ERROR_NOT_SIGNED: Incomplete
PDF_SIGNATURE_ERROR_UNKNOWN: Incomplete

class pdf_pkcs7_signer:
    thisown: Incomplete
    keep: Incomplete
    drop: Incomplete
    get_signing_name: Incomplete
    max_digest_size: Incomplete
    create_digest: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_pkcs7_verifier:
    thisown: Incomplete
    drop: Incomplete
    check_certificate: Incomplete
    check_digest: Incomplete
    get_signatory: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_SIGNATURE_SHOW_LABELS: Incomplete
PDF_SIGNATURE_SHOW_DN: Incomplete
PDF_SIGNATURE_SHOW_DATE: Incomplete
PDF_SIGNATURE_SHOW_TEXT_NAME: Incomplete
PDF_SIGNATURE_SHOW_GRAPHIC_NAME: Incomplete
PDF_SIGNATURE_SHOW_LOGO: Incomplete

class pdf_keystroke_event:
    thisown: Incomplete
    value: Incomplete
    change: Incomplete
    selStart: Incomplete
    selEnd: Incomplete
    willCommit: Incomplete
    newChange: Incomplete
    newValue: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_doc_event:
    thisown: Incomplete
    type: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_DOCUMENT_EVENT_ALERT: Incomplete
PDF_DOCUMENT_EVENT_PRINT: Incomplete
PDF_DOCUMENT_EVENT_LAUNCH_URL: Incomplete
PDF_DOCUMENT_EVENT_MAIL_DOC: Incomplete
PDF_DOCUMENT_EVENT_SUBMIT: Incomplete
PDF_DOCUMENT_EVENT_EXEC_MENU_ITEM: Incomplete

class pdf_alert_event:
    thisown: Incomplete
    doc: Incomplete
    message: Incomplete
    icon_type: Incomplete
    button_group_type: Incomplete
    title: Incomplete
    has_check_box: Incomplete
    check_box_message: Incomplete
    initially_checked: Incomplete
    finally_checked: Incomplete
    button_pressed: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_ALERT_ICON_ERROR: Incomplete
PDF_ALERT_ICON_WARNING: Incomplete
PDF_ALERT_ICON_QUESTION: Incomplete
PDF_ALERT_ICON_STATUS: Incomplete
PDF_ALERT_BUTTON_GROUP_OK: Incomplete
PDF_ALERT_BUTTON_GROUP_OK_CANCEL: Incomplete
PDF_ALERT_BUTTON_GROUP_YES_NO: Incomplete
PDF_ALERT_BUTTON_GROUP_YES_NO_CANCEL: Incomplete
PDF_ALERT_BUTTON_NONE: Incomplete
PDF_ALERT_BUTTON_OK: Incomplete
PDF_ALERT_BUTTON_CANCEL: Incomplete
PDF_ALERT_BUTTON_NO: Incomplete
PDF_ALERT_BUTTON_YES: Incomplete

class pdf_launch_url_event:
    thisown: Incomplete
    url: Incomplete
    new_frame: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_mail_doc_event:
    thisown: Incomplete
    ask_user: Incomplete
    to: Incomplete
    cc: Incomplete
    bcc: Incomplete
    subject: Incomplete
    message: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

FZ_SUBSAMPLE_AVERAGE: Incomplete
FZ_SUBSAMPLE_BICUBIC: Incomplete
FZ_RECOMPRESS_NEVER: Incomplete
FZ_RECOMPRESS_SAME: Incomplete
FZ_RECOMPRESS_LOSSLESS: Incomplete
FZ_RECOMPRESS_JPEG: Incomplete
FZ_RECOMPRESS_J2K: Incomplete
FZ_RECOMPRESS_FAX: Incomplete

class pdf_image_rewriter_options:
    thisown: Incomplete
    color_lossless_image_subsample_method: Incomplete
    color_lossy_image_subsample_method: Incomplete
    color_lossless_image_subsample_threshold: Incomplete
    color_lossless_image_subsample_to: Incomplete
    color_lossy_image_subsample_threshold: Incomplete
    color_lossy_image_subsample_to: Incomplete
    color_lossless_image_recompress_method: Incomplete
    color_lossy_image_recompress_method: Incomplete
    color_lossy_image_recompress_quality: Incomplete
    color_lossless_image_recompress_quality: Incomplete
    gray_lossless_image_subsample_method: Incomplete
    gray_lossy_image_subsample_method: Incomplete
    gray_lossless_image_subsample_threshold: Incomplete
    gray_lossless_image_subsample_to: Incomplete
    gray_lossy_image_subsample_threshold: Incomplete
    gray_lossy_image_subsample_to: Incomplete
    gray_lossless_image_recompress_method: Incomplete
    gray_lossy_image_recompress_method: Incomplete
    gray_lossy_image_recompress_quality: Incomplete
    gray_lossless_image_recompress_quality: Incomplete
    bitonal_image_subsample_method: Incomplete
    bitonal_image_subsample_threshold: Incomplete
    bitonal_image_subsample_to: Incomplete
    bitonal_image_recompress_method: Incomplete
    bitonal_image_recompress_quality: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_CLEAN_STRUCTURE_DROP: Incomplete
PDF_CLEAN_STRUCTURE_KEEP: Incomplete

class pdf_clean_options:
    thisown: Incomplete
    write: Incomplete
    image: Incomplete
    subset_fonts: Incomplete
    structure: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class pdf_recolor_options:
    thisown: Incomplete
    num_comp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

PDF_NOT_ZUGFERD: Incomplete
PDF_ZUGFERD_COMFORT: Incomplete
PDF_ZUGFERD_BASIC: Incomplete
PDF_ZUGFERD_EXTENDED: Incomplete
PDF_ZUGFERD_BASIC_WL: Incomplete
PDF_ZUGFERD_MINIMUM: Incomplete
PDF_ZUGFERD_XRECHNUNG: Incomplete
PDF_ZUGFERD_UNKNOWN: Incomplete

class fz_search_page2_hit:
    thisown: Incomplete
    quad: Incomplete
    mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_install_load_system_font_funcs_args:
    thisown: Incomplete
    f: Incomplete
    f_cjk: Incomplete
    f_fallback: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

class fz_font_ucs_gid:
    thisown: Incomplete
    ucs: Incomplete
    gid: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_aa_level(): ...
def ll_fz_abs(f): ...
def ll_fz_absi(i): ...
def ll_fz_add_layout_char(block, x, w, p): ...
def ll_fz_add_layout_line(block, x, y, h, p): ...
def ll_fz_add_separation(sep, name, cs, cs_channel): ...
def ll_fz_add_separation_equivalents(sep, rgba, cmyk, name): ...
def ll_fz_adjust_rect_for_stroke(rect, stroke, ctm): ...
def ll_fz_advance_glyph(font, glyph, wmode): ...
def ll_fz_aes_crypt_cbc(ctx, mode, length, iv, input, output): ...
def ll_fz_aes_setkey_dec(ctx, key, keysize): ...
def ll_fz_aes_setkey_enc(ctx, key, keysize): ...
def ll_fz_alpha_from_gray(gray): ...
def ll_fz_append_base64(out, data, size, newline): ...
def ll_fz_append_base64_buffer(out, data, newline): ...
def ll_fz_append_bits(buf, value, count): ...
def ll_fz_append_bits_pad(buf): ...
def ll_fz_append_buffer(destination, source): ...
def ll_fz_append_byte(buf, c): ...
def ll_fz_append_data(buf, data, len): ...
def ll_fz_append_image_as_data_uri(out, image): ...
def ll_fz_append_int16_be(buf, x): ...
def ll_fz_append_int16_le(buf, x): ...
def ll_fz_append_int32_be(buf, x): ...
def ll_fz_append_int32_le(buf, x): ...
def ll_fz_append_pdf_string(buffer, text): ...
def ll_fz_append_pixmap_as_data_uri(out, pixmap): ...
def ll_fz_append_rune(buf, c): ...
def ll_fz_append_string(buf, data): ...
def ll_fz_arc4_encrypt(state, dest, src, len): ...
def ll_fz_arc4_final(state): ...
def ll_fz_arc4_init(state, key, len): ...
def ll_fz_archive_format(arch): ...
def ll_fz_atof(s): ...
def ll_fz_atoi(s): ...
def ll_fz_atoi64(s): ...
def ll_fz_atoz(s): ...
def ll_fz_authenticate_password(doc, password): ...
def ll_fz_autowarp_pixmap(src, points): ...
def ll_fz_available(stm, max): ...
def ll_fz_base_colorspace(cs): ...
def ll_fz_basename(path): ...
def ll_fz_begin_group(dev, area, cs, isolated, knockout, blendmode, alpha): ...
def ll_fz_begin_layer(dev, layer_name): ...
def ll_fz_begin_mask(dev, area, luminosity, colorspace, bc, color_params): ...
def ll_fz_begin_metatext(dev, meta, text): ...
def ll_fz_begin_page(wri, mediabox): ...
def ll_fz_begin_structure(dev, standard, raw, idx): ...
def ll_fz_begin_tile(dev, area, view, xstep, ystep, ctm): ...
def ll_fz_begin_tile_id(dev, area, view, xstep, ystep, ctm, id): ...
def ll_fz_bidi_fragment_text(text, textlen, baseDir, callback, arg, flags): ...
def ll_fz_bitmap_details(bitmap, w, h, n, stride): ...
def ll_fz_blendmode_name(blendmode): ...
def ll_fz_bound_display_list(list): ...
def ll_fz_bound_glyph(font, gid, trm): ...
def ll_fz_bound_page(page): ...
def ll_fz_bound_page_box(page, box): ...
def ll_fz_bound_path(path, stroke, ctm): ...
def ll_fz_bound_shade(shade, ctm): ...
def ll_fz_bound_text(text, stroke, ctm): ...
def ll_fz_box_type_from_string(name): ...
def ll_fz_buffer_extract(buf, data): ...
def ll_fz_buffer_storage(buf, datap): ...
def ll_fz_calloc(count, size): ...
def ll_fz_calloc_no_throw(count, size): ...
def ll_fz_caught(): ...
def ll_fz_caught_errno(): ...
def ll_fz_caught_message(): ...
def ll_fz_chartorune(rune, str): ...
def ll_fz_clamp(x, min, max): ...
def ll_fz_clamp64(x, min, max): ...
def ll_fz_clamp_color(cs, _in, out): ...
def ll_fz_clamp_location(doc, loc): ...
def ll_fz_clampd(x, min, max): ...
def ll_fz_clampi(x, min, max): ...
def ll_fz_clampp(x, min, max): ...
def ll_fz_cleanname(name): ...
def ll_fz_cleanname_strdup(name): ...
def ll_fz_clear_bitmap(bit): ...
def ll_fz_clear_buffer(buf): ...
def ll_fz_clear_pixmap(pix): ...
def ll_fz_clear_pixmap_rect_with_value(pix, value, r): ...
def ll_fz_clear_pixmap_with_value(pix, value): ...
def ll_fz_clip_image_mask(dev, image, ctm, scissor): ...
def ll_fz_clip_path(dev, path, even_odd, ctm, scissor): ...
def ll_fz_clip_stroke_path(dev, path, stroke, ctm, scissor): ...
def ll_fz_clip_stroke_text(dev, text, stroke, ctm, scissor): ...
def ll_fz_clip_text(dev, text, ctm, scissor): ...
def ll_fz_clone_buffer(buf): ...
def ll_fz_clone_context(): ...
def ll_fz_clone_default_colorspaces(base): ...
def ll_fz_clone_path(path): ...
def ll_fz_clone_pixmap(old): ...
def ll_fz_clone_pixmap_area_with_different_seps(src, bbox, dcs, seps, color_params, default_cs): ...
def ll_fz_clone_separations_for_overprint(seps): ...
def ll_fz_clone_stroke_state(stroke): ...
def ll_fz_close_band_writer(writer): ...
def ll_fz_close_device(dev): ...
def ll_fz_close_document_writer(wri): ...
def ll_fz_close_output(arg_1): ...
def ll_fz_close_zip_writer(zip): ...
def ll_fz_closepath(path): ...
def ll_fz_colorspace_colorant(cs, n): ...
def ll_fz_colorspace_device_n_has_cmyk(cs): ...
def ll_fz_colorspace_device_n_has_only_cmyk(cs): ...
def ll_fz_colorspace_is_cmyk(cs): ...
def ll_fz_colorspace_is_device(cs): ...
def ll_fz_colorspace_is_device_cmyk(cs): ...
def ll_fz_colorspace_is_device_gray(cs): ...
def ll_fz_colorspace_is_device_n(cs): ...
def ll_fz_colorspace_is_gray(cs): ...
def ll_fz_colorspace_is_indexed(cs): ...
def ll_fz_colorspace_is_lab(cs): ...
def ll_fz_colorspace_is_lab_icc(cs): ...
def ll_fz_colorspace_is_rgb(cs): ...
def ll_fz_colorspace_is_subtractive(cs): ...
def ll_fz_colorspace_n(cs): ...
def ll_fz_colorspace_name(cs): ...
def ll_fz_colorspace_name_colorant(cs, n, name): ...
def ll_fz_colorspace_type(cs): ...
def ll_fz_compare_separations(sep1, sep2): ...
def ll_fz_compress_ccitt_fax_g3(data, columns, rows, stride): ...
def ll_fz_compress_ccitt_fax_g4(data, columns, rows, stride): ...
def ll_fz_compressed_buffer_size(buffer): ...
def ll_fz_compressed_image_buffer(image): ...
def ll_fz_compressed_image_type(image): ...
def ll_fz_concat(left, right): ...
def ll_fz_concat_push_drop(concat, chain): ...
def ll_fz_contains_rect(a, b): ...
def ll_fz_convert_color(ss, sv, ds, dv, _is, params): ...
def ll_fz_convert_error(code): ...
def ll_fz_convert_indexed_pixmap_to_base(src): ...
def ll_fz_convert_pixmap(pix, cs_des, prf, default_cs, color_params, keep_alpha): ...
def ll_fz_convert_separation_colors(src_cs, src_color, dst_seps, dst_cs, dst_color, color_params): ...
def ll_fz_convert_separation_pixmap_to_base(src): ...
def ll_fz_copy_option(val, dest, maxlen): ...
def ll_fz_copy_pixmap_rect(dest, src, r, default_cs): ...
def ll_fz_copy_rectangle(page, area, crlf): ...
def ll_fz_copy_selection(page, a, b, crlf): ...
def ll_fz_count_active_separations(seps): ...
def ll_fz_count_archive_entries(arch): ...
def ll_fz_count_chapter_pages(doc, chapter): ...
def ll_fz_count_chapters(doc): ...
def ll_fz_count_pages(doc): ...
def ll_fz_count_separations(sep): ...
def ll_fz_create_link(page, bbox, uri): ...
def ll_fz_currentpoint(path): ...
def ll_fz_curveto(path, x0, y0, x1, y1, x2, y2): ...
def ll_fz_curvetov(path, x1, y1, x2, y2): ...
def ll_fz_curvetoy(path, x0, y0, x2, y2): ...
def ll_fz_debug_store(out): ...
def ll_fz_debug_xml(item, level): ...
def ll_fz_decode_tile(pix, decode): ...
def ll_fz_decode_uri(s): ...
def ll_fz_decode_uri_component(s): ...
def ll_fz_decomp_image_from_stream(stm, image, subarea, indexed, l2factor, l2extra): ...
def ll_fz_decouple_type3_font(font, t3doc): ...
def ll_fz_default_cmyk(default_cs): ...
def ll_fz_default_error_callback(user, message): ...
def ll_fz_default_gray(default_cs): ...
def ll_fz_default_halftone(num_comps): ...
def ll_fz_default_output_intent(default_cs): ...
def ll_fz_default_rgb(default_cs): ...
def ll_fz_default_warning_callback(user, message): ...
def ll_fz_defer_reap_end(): ...
def ll_fz_defer_reap_start(): ...
def ll_fz_deflate(dest, compressed_length, source, source_length, level): ...
def ll_fz_deflate_bound(size): ...
def ll_fz_delete_link(page, link): ...
def ll_fz_deskew_pixmap(src, degrees, border): ...
def ll_fz_detach_xml(node): ...
def ll_fz_detect_document(points, src): ...
def ll_fz_device_bgr(): ...
def ll_fz_device_cmyk(): ...
def ll_fz_device_current_scissor(dev): ...
def ll_fz_device_gray(): ...
def ll_fz_device_lab(): ...
def ll_fz_device_rgb(): ...
def ll_fz_dirname(dir, path, dirsize): ...
def ll_fz_disable_device_hints(dev, hints): ...
def ll_fz_disable_icc(): ...
def ll_fz_display_list_is_empty(list): ...
def ll_fz_div255(c, a): ...
def ll_fz_do_always(): ...
def ll_fz_do_catch(): ...
def ll_fz_do_try(): ...
def ll_fz_document_handler_open(handler, stream, accel, dir, recognize_state): ...
def ll_fz_document_handler_recognize(handler, magic): ...
def ll_fz_document_output_intent(doc): ...
def ll_fz_document_supports_accelerator(doc): ...
def ll_fz_dom_add_attribute(elt, att, value): ...
def ll_fz_dom_append_child(parent, child): ...
def ll_fz_dom_attribute(elt, att): ...
def ll_fz_dom_body(dom): ...
def ll_fz_dom_clone(elt): ...
def ll_fz_dom_create_element(dom, tag): ...
def ll_fz_dom_create_text_node(dom, text): ...
def ll_fz_dom_document_element(dom): ...
def ll_fz_dom_find(elt, tag, att, match): ...
def ll_fz_dom_find_next(elt, tag, att, match): ...
def ll_fz_dom_first_child(elt): ...
def ll_fz_dom_get_attribute(elt, i, att): ...
def ll_fz_dom_insert_after(node, new_elt): ...
def ll_fz_dom_insert_before(node, new_elt): ...
def ll_fz_dom_next(elt): ...
def ll_fz_dom_parent(elt): ...
def ll_fz_dom_previous(elt): ...
def ll_fz_dom_remove(elt): ...
def ll_fz_dom_remove_attribute(elt, att): ...
def ll_fz_draw_story(story, dev, ctm): ...
def ll_fz_drop_archive(arch): ...
def ll_fz_drop_band_writer(writer): ...
def ll_fz_drop_bitmap(bit): ...
def ll_fz_drop_buffer(buf): ...
def ll_fz_drop_colorspace(colorspace): ...
def ll_fz_drop_colorspace_imp(cs_): ...
def ll_fz_drop_compressed_buffer(buf): ...
def ll_fz_drop_context(): ...
def ll_fz_drop_default_colorspaces(default_cs): ...
def ll_fz_drop_device(dev): ...
def ll_fz_drop_display_list(list): ...
def ll_fz_drop_document(doc): ...
def ll_fz_drop_document_writer(wri): ...
def ll_fz_drop_font(font): ...
def ll_fz_drop_function(func): ...
def ll_fz_drop_glyph(pix): ...
def ll_fz_drop_halftone(ht): ...
def ll_fz_drop_hash_table(table): ...
def ll_fz_drop_image(image): ...
def ll_fz_drop_image_base(image): ...
def ll_fz_drop_image_imp(image): ...
def ll_fz_drop_image_store_key(image): ...
def ll_fz_drop_imp(p, refs): ...
def ll_fz_drop_imp16(p, refs): ...
def ll_fz_drop_imp8(p, refs): ...
def ll_fz_drop_jbig2_globals(globals): ...
def ll_fz_drop_jbig2_globals_imp(globals): ...
def ll_fz_drop_key_storable(arg_1): ...
def ll_fz_drop_key_storable_key(arg_1): ...
def ll_fz_drop_layout(block): ...
def ll_fz_drop_link(link): ...
def ll_fz_drop_outline(outline): ...
def ll_fz_drop_outline_iterator(iter): ...
def ll_fz_drop_output(arg_1): ...
def ll_fz_drop_page(page): ...
def ll_fz_drop_path(path): ...
def ll_fz_drop_pixmap(pix): ...
def ll_fz_drop_pool(pool): ...
def ll_fz_drop_separations(sep): ...
def ll_fz_drop_shade(shade): ...
def ll_fz_drop_shade_color_cache(cache): ...
def ll_fz_drop_shade_imp(shade): ...
def ll_fz_drop_stext_page(page): ...
def ll_fz_drop_storable(arg_1): ...
def ll_fz_drop_store_context(): ...
def ll_fz_drop_story(story): ...
def ll_fz_drop_stream(stm): ...
def ll_fz_drop_string(str): ...
def ll_fz_drop_stroke_state(stroke): ...
def ll_fz_drop_text(text): ...
def ll_fz_drop_tree(node, dropfunc): ...
def ll_fz_drop_xml(xml): ...
def ll_fz_drop_zip_writer(zip): ...
def ll_fz_dump_glyph_cache_stats(out): ...
def ll_fz_duplicate_glyph_names_from_unicode(unicode): ...
def ll_fz_empty_store(): ...
def ll_fz_enable_device_hints(dev, hints): ...
def ll_fz_enable_icc(): ...
def ll_fz_encode_character(font, unicode): ...
def ll_fz_encode_character_by_glyph_name(font, glyphname): ...
def ll_fz_encode_character_sc(font, unicode): ...
def ll_fz_encode_character_with_fallback(font, unicode, script, language, out_font): ...
def ll_fz_encode_uri(s): ...
def ll_fz_encode_uri_component(s): ...
def ll_fz_encode_uri_pathname(s): ...
def ll_fz_end_group(dev): ...
def ll_fz_end_layer(dev): ...
def ll_fz_end_mask(dev): ...
def ll_fz_end_mask_tr(dev, fn): ...
def ll_fz_end_metatext(dev): ...
def ll_fz_end_page(wri): ...
def ll_fz_end_structure(dev): ...
def ll_fz_end_throw_on_repair(): ...
def ll_fz_end_tile(dev): ...
def ll_fz_enumerate_font_cmap(font, cb, opaque): ...
def ll_fz_enumerate_font_cmap2(font): ...
def ll_fz_error_callback(user): ...
def ll_fz_eval_function(func, _in, inlen, out, outlen): ...
def ll_fz_expand_irect(a, expand): ...
def ll_fz_expand_rect(b, expand): ...
def ll_fz_extract_ttf_from_ttc(font): ...
def ll_fz_file_exists(path): ...
def ll_fz_fill_image(dev, image, ctm, alpha, color_params): ...
def ll_fz_fill_image_mask(dev, image, ctm, colorspace, color, alpha, color_params): ...
def ll_fz_fill_path(dev, path, even_odd, ctm, colorspace, color, alpha, color_params): ...
def ll_fz_fill_pixmap_from_display_list(list, ctm, pix): ...
def ll_fz_fill_pixmap_with_color(pix, colorspace, color, color_params): ...
def ll_fz_fill_shade(dev, shade, ctm, alpha, color_params): ...
def ll_fz_fill_text(dev, text, ctm, colorspace, color, alpha, color_params): ...
def ll_fz_filter_store(fn, arg, type): ...
def ll_fz_find_item(drop, key, type): ...
def ll_fz_flush_output(out): ...
def ll_fz_flush_warnings(): ...
def ll_fz_font_ascender(font): ...
def ll_fz_font_bbox(font): ...
def ll_fz_font_descender(font): ...
def ll_fz_font_digest(font, digest): ...
def ll_fz_font_flags(font): ...
def ll_fz_font_ft_face(font): ...
def ll_fz_font_is_bold(font): ...
def ll_fz_font_is_italic(font): ...
def ll_fz_font_is_monospaced(font): ...
def ll_fz_font_is_serif(font): ...
def ll_fz_font_name(font): ...
def ll_fz_font_shaper_data(font): ...
def ll_fz_font_t3_procs(font): ...
def ll_fz_format_double(fmt, value): ...
def ll_fz_format_link_uri(doc, dest): ...
def ll_fz_format_output_path(path, size, fmt, page): ...
def ll_fz_free(p): ...
def ll_fz_free_aligned(p): ...
def ll_fz_ft_lock(): ...
def ll_fz_ft_lock_held(): ...
def ll_fz_ft_unlock(): ...
def ll_fz_function_size(func): ...
def ll_fz_gamma_pixmap(pix, gamma): ...
def ll_fz_generate_transition(tpix, opix, npix, time, trans): ...
def ll_fz_get_glyph_name(font, glyph, buf, size): ...
def ll_fz_get_glyph_name2(font, glyph): ...
def ll_fz_get_pixmap_from_image(image, subarea, ctm, w, h): ...
def ll_fz_get_unscaled_pixmap_from_image(image): ...
def ll_fz_getopt(nargc, nargv, ostr): ...
def ll_fz_getopt_long(nargc, nargv, ostr, longopts): ...
def ll_fz_glyph_bbox(glyph): ...
def ll_fz_glyph_bbox_no_ctx(src): ...
def ll_fz_glyph_cacheable(font, gid): ...
def ll_fz_glyph_height(glyph): ...
def ll_fz_glyph_name_from_unicode_sc(unicode): ...
def ll_fz_glyph_width(glyph): ...
def ll_fz_graphics_aa_level(): ...
def ll_fz_graphics_min_line_width(): ...
def ll_fz_gridfit_matrix(as_tiled, m): ...
def ll_fz_grisu(f, s, exp): ...
def ll_fz_grow_buffer(buf): ...
def ll_fz_has_archive_entry(arch, name): ...
def ll_fz_has_option(opts, key, val): ...
def ll_fz_has_permission(doc, p): ...
def ll_fz_hash_filter(table, state, callback): ...
def ll_fz_hash_find(table, key): ...
def ll_fz_hash_for_each(table, state, callback): ...
def ll_fz_hash_insert(table, key, val): ...
def ll_fz_hash_remove(table, key): ...
def ll_fz_hb_lock(): ...
def ll_fz_hb_unlock(): ...
def ll_fz_highlight_selection(page, a, b, quads, max_quads): ...
def ll_fz_highlight_selection2(page, a, b, max_quads): ...
def ll_fz_ignore_error(): ...
def ll_fz_ignore_text(dev, text, ctm): ...
def ll_fz_image_orientation(image): ...
def ll_fz_image_orientation_matrix(image): ...
def ll_fz_image_resolution(image, xres, yres): ...
def ll_fz_image_size(im): ...
def ll_fz_image_type_name(type): ...
def ll_fz_include_point_in_rect(r, p): ...
def ll_fz_init_text_decoder(dec, encoding): ...
def ll_fz_install_load_system_font_funcs(f, f_cjk, f_fallback): ...
def ll_fz_install_load_system_font_funcs2(args): ...
def ll_fz_int2_heap_insert(heap, v): ...
def ll_fz_int2_heap_sort(heap): ...
def ll_fz_int2_heap_uniq(heap): ...
def ll_fz_int_heap_insert(heap, v): ...
def ll_fz_int_heap_sort(heap): ...
def ll_fz_int_heap_uniq(heap): ...
def ll_fz_intersect_irect(a, b): ...
def ll_fz_intersect_rect(a, b): ...
def ll_fz_intptr_heap_insert(heap, v): ...
def ll_fz_intptr_heap_sort(heap): ...
def ll_fz_intptr_heap_uniq(heap): ...
def ll_fz_invert_bitmap(bmp): ...
def ll_fz_invert_matrix(matrix): ...
def ll_fz_invert_pixmap(pix): ...
def ll_fz_invert_pixmap_alpha(pix): ...
def ll_fz_invert_pixmap_luminance(pix): ...
def ll_fz_invert_pixmap_raw(pix): ...
def ll_fz_invert_pixmap_rect(image, rect): ...
def ll_fz_irect_from_rect(rect): ...
def ll_fz_irect_height(r): ...
def ll_fz_irect_width(r): ...
def ll_fz_is_cfb_archive(file): ...
def ll_fz_is_directory(path): ...
def ll_fz_is_document_reflowable(doc): ...
def ll_fz_is_empty_irect(r): ...
def ll_fz_is_empty_quad(q): ...
def ll_fz_is_empty_rect(r): ...
def ll_fz_is_eof(stm): ...
def ll_fz_is_eof_bits(stm): ...
def ll_fz_is_external_link(uri): ...
def ll_fz_is_identity(m): ...
def ll_fz_is_infinite_irect(r): ...
def ll_fz_is_infinite_quad(q): ...
def ll_fz_is_infinite_rect(r): ...
def ll_fz_is_libarchive_archive(file): ...
def ll_fz_is_page_range(s): ...
def ll_fz_is_pixmap_monochrome(pixmap): ...
def ll_fz_is_point_inside_irect(x, y, r): ...
def ll_fz_is_point_inside_quad(p, q): ...
def ll_fz_is_point_inside_rect(p, r): ...
def ll_fz_is_pow2(a): ...
def ll_fz_is_quad_inside_quad(needle, haystack): ...
def ll_fz_is_quad_intersecting_quad(a, b): ...
def ll_fz_is_rectilinear(m): ...
def ll_fz_is_tar_archive(file): ...
def ll_fz_is_valid_blend_colorspace(cs): ...
def ll_fz_is_valid_irect(r): ...
def ll_fz_is_valid_quad(q): ...
def ll_fz_is_valid_rect(r): ...
def ll_fz_is_zip_archive(file): ...
def ll_fz_iso8859_1_from_unicode(u): ...
def ll_fz_iso8859_7_from_unicode(u): ...
def ll_fz_jbig2_globals_data(globals): ...
def ll_fz_keep_archive(arch): ...
def ll_fz_keep_bitmap(bit): ...
def ll_fz_keep_buffer(buf): ...
def ll_fz_keep_colorspace(colorspace): ...
def ll_fz_keep_compressed_buffer(cbuf): ...
def ll_fz_keep_default_colorspaces(default_cs): ...
def ll_fz_keep_device(dev): ...
def ll_fz_keep_display_list(list): ...
def ll_fz_keep_document(doc): ...
def ll_fz_keep_font(font): ...
def ll_fz_keep_function(func): ...
def ll_fz_keep_glyph(pix): ...
def ll_fz_keep_halftone(half): ...
def ll_fz_keep_image(image): ...
def ll_fz_keep_image_store_key(image): ...
def ll_fz_keep_imp(p, refs): ...
def ll_fz_keep_imp16(p, refs): ...
def ll_fz_keep_imp8(p, refs): ...
def ll_fz_keep_imp8_locked(p, refs): ...
def ll_fz_keep_imp_locked(p, refs): ...
def ll_fz_keep_jbig2_globals(globals): ...
def ll_fz_keep_key_storable(arg_1): ...
def ll_fz_keep_key_storable_key(arg_1): ...
def ll_fz_keep_link(link): ...
def ll_fz_keep_outline(outline): ...
def ll_fz_keep_page(page): ...
def ll_fz_keep_path(path): ...
def ll_fz_keep_pixmap(pix): ...
def ll_fz_keep_separations(sep): ...
def ll_fz_keep_shade(shade): ...
def ll_fz_keep_storable(arg_1): ...
def ll_fz_keep_store_context(): ...
def ll_fz_keep_stream(stm): ...
def ll_fz_keep_string(str): ...
def ll_fz_keep_stroke_state(stroke): ...
def ll_fz_keep_text(text): ...
def ll_fz_keep_xml(xml): ...
def ll_fz_koi8u_from_unicode(u): ...
def ll_fz_last_page(doc): ...
def ll_fz_layout_document(doc, w, h, em): ...
def ll_fz_lineto(path, x, y): ...
def ll_fz_list_archive_entry(arch, idx): ...
def ll_fz_load_bmp_subimage(buf, len, subimage): ...
def ll_fz_load_bmp_subimage_count(buf, len): ...
def ll_fz_load_chapter_page(doc, chapter, page): ...
def ll_fz_load_fallback_font(script, language, serif, bold, italic): ...
def ll_fz_load_jbig2_globals(buf): ...
def ll_fz_load_jbig2_subimage(buf, len, subimage): ...
def ll_fz_load_jbig2_subimage_count(buf, len): ...
def ll_fz_load_jpx(data, size, cs): ...
def ll_fz_load_links(page): ...
def ll_fz_load_outline(doc): ...
def ll_fz_load_outline_from_iterator(iter): ...
def ll_fz_load_page(doc, number): ...
def ll_fz_load_pnm_subimage(buf, len, subimage): ...
def ll_fz_load_pnm_subimage_count(buf, len): ...
def ll_fz_load_system_cjk_font(name, ordering, serif): ...
def ll_fz_load_system_font(name, bold, italic, needs_exact_metrics): ...
def ll_fz_load_tiff_subimage(buf, len, subimage): ...
def ll_fz_load_tiff_subimage_count(buf, len): ...
def ll_fz_load_user_css(filename): ...
def ll_fz_location_from_page_number(doc, number): ...
def ll_fz_lock(lock): ...
def ll_fz_log_error(str): ...
def ll_fz_lookup_base14_font(name, len): ...
def ll_fz_lookup_blendmode(name): ...
def ll_fz_lookup_bookmark(doc, mark): ...
def ll_fz_lookup_builtin_font(name, bold, italic, len): ...
def ll_fz_lookup_cjk_font(ordering, len, index): ...
def ll_fz_lookup_cjk_font_by_language(lang, len, subfont): ...
def ll_fz_lookup_cjk_ordering_by_language(name): ...
def ll_fz_lookup_image_type(type): ...
def ll_fz_lookup_metadata(doc, key, buf, size): ...
def ll_fz_lookup_metadata2(doc, key): ...
def ll_fz_lookup_noto_boxes_font(len): ...
def ll_fz_lookup_noto_emoji_font(len): ...
def ll_fz_lookup_noto_font(script, lang, len, subfont): ...
def ll_fz_lookup_noto_math_font(len): ...
def ll_fz_lookup_noto_music_font(len): ...
def ll_fz_lookup_noto_stem_from_script(script, language): ...
def ll_fz_lookup_noto_symbol1_font(len): ...
def ll_fz_lookup_noto_symbol2_font(len): ...
def ll_fz_lookup_rendering_intent(name): ...
def ll_fz_make_bookmark(doc, loc): ...
def ll_fz_make_irect(x0, y0, x1, y1): ...
def ll_fz_make_link_dest_none(): ...
def ll_fz_make_link_dest_xyz(chapter, page, x, y, z): ...
def ll_fz_make_location(chapter, page): ...
def ll_fz_make_matrix(a, b, c, d, e, f): ...
def ll_fz_make_point(x, y): ...
def ll_fz_make_quad(ul_x, ul_y, ur_x, ur_y, ll_x, ll_y, lr_x, lr_y): ...
def ll_fz_make_rect(x0, y0, x1, y1): ...
def ll_fz_malloc(size): ...
def ll_fz_malloc_aligned(size, align): ...
def ll_fz_malloc_no_throw(size): ...
def ll_fz_matrix_expansion(m): ...
def ll_fz_matrix_max_expansion(m): ...
def ll_fz_max(a, b): ...
def ll_fz_maxi(a, b): ...
def ll_fz_maxi64(a, b): ...
def ll_fz_maxz(a, b): ...
def ll_fz_md5_buffer(buffer, digest): ...
def ll_fz_md5_final(state, digest): ...
def ll_fz_md5_final2(md5): ...
def ll_fz_md5_init(state): ...
def ll_fz_md5_pixmap(pixmap, digest): ...
def ll_fz_md5_pixmap2(pixmap): ...
def ll_fz_md5_update(state, input, inlen): ...
def ll_fz_md5_update_int64(state, i): ...
def ll_fz_measure_string(user_font, trm, s, wmode, bidi_level, markup_dir, language): ...
def ll_fz_memmem(haystack, haystacklen, needle, needlelen): ...
def ll_fz_memrnd(block, len): ...
def ll_fz_min(a, b): ...
def ll_fz_mini(a, b): ...
def ll_fz_mini64(a, b): ...
def ll_fz_minz(a, b): ...
def ll_fz_mkdir(path): ...
def ll_fz_morph_error(fromcode, tocode): ...
def ll_fz_mount_multi_archive(arch_, sub, path): ...
def ll_fz_moveto(path, x, y): ...
def ll_fz_mul255(a, b): ...
def ll_fz_needs_password(doc): ...
def ll_fz_new_arc4_output(chain, key, keylen): ...
def ll_fz_new_archive_of_size(file, size): ...
def ll_fz_new_ascii85_output(chain): ...
def ll_fz_new_asciihex_output(chain): ...
def ll_fz_new_band_writer_of_size(size, out): ...
def ll_fz_new_base14_font(name): ...
def ll_fz_new_bbox_device(rectp): ...
def ll_fz_new_bitmap(w, h, n, xres, yres): ...
def ll_fz_new_bitmap_from_pixmap(pix, ht): ...
def ll_fz_new_bitmap_from_pixmap_band(pix, ht, band_start): ...
def ll_fz_new_buffer(capacity): ...
def ll_fz_new_buffer_from_base64(data, size): ...
def ll_fz_new_buffer_from_copied_data(data, size): ...
def ll_fz_new_buffer_from_data(data, size): ...
def ll_fz_new_buffer_from_display_list(list, options): ...
def ll_fz_new_buffer_from_image_as_jpeg(image, color_params, quality, invert_cmyk): ...
def ll_fz_new_buffer_from_image_as_jpx(image, color_params, quality): ...
def ll_fz_new_buffer_from_image_as_pam(image, color_params): ...
def ll_fz_new_buffer_from_image_as_png(image, color_params): ...
def ll_fz_new_buffer_from_image_as_pnm(image, color_params): ...
def ll_fz_new_buffer_from_image_as_psd(image, color_params): ...
def ll_fz_new_buffer_from_page(page, options): ...
def ll_fz_new_buffer_from_page_number(doc, number, options): ...
def ll_fz_new_buffer_from_page_with_format(page, format, options, transform, cookie): ...
def ll_fz_new_buffer_from_pixmap_as_jpeg(pixmap, color_params, quality, invert_cmyk): ...
def ll_fz_new_buffer_from_pixmap_as_jpx(pix, color_params, quality): ...
def ll_fz_new_buffer_from_pixmap_as_pam(pixmap, color_params): ...
def ll_fz_new_buffer_from_pixmap_as_png(pixmap, color_params): ...
def ll_fz_new_buffer_from_pixmap_as_pnm(pixmap, color_params): ...
def ll_fz_new_buffer_from_pixmap_as_psd(pix, color_params): ...
def ll_fz_new_buffer_from_shared_data(data, size): ...
def ll_fz_new_buffer_from_stext_page(text): ...
def ll_fz_new_builtin_font(name, is_bold, is_italic): ...
def ll_fz_new_cal_gray_colorspace(wp, bp, gamma): ...
def ll_fz_new_cal_rgb_colorspace(wp, bp, gamma, matrix): ...
def ll_fz_new_cbz_writer(path, options): ...
def ll_fz_new_cbz_writer_with_output(out, options): ...
def ll_fz_new_cjk_font(ordering): ...
def ll_fz_new_color_pcl_band_writer(out, options): ...
def ll_fz_new_colorspace(type, flags, n, name): ...
def ll_fz_new_compressed_buffer(): ...
def ll_fz_new_context_imp(alloc, locks, max_store, version): ...
def ll_fz_new_default_colorspaces(): ...
def ll_fz_new_deflate_output(chain, effort, raw): ...
def ll_fz_new_deflated_data(compressed_length, source, source_length, level): ...
def ll_fz_new_deflated_data_from_buffer(compressed_length, buffer, level): ...
def ll_fz_new_device_of_size(size): ...
def ll_fz_new_display_list(mediabox): ...
def ll_fz_new_display_list_from_page(page): ...
def ll_fz_new_display_list_from_page_contents(page): ...
def ll_fz_new_display_list_from_page_number(doc, number): ...
def ll_fz_new_display_list_from_svg(buf, base_uri, dir, w, h): ...
def ll_fz_new_display_list_from_svg_xml(xmldoc, xml, base_uri, dir, w, h): ...
def ll_fz_new_document_of_size(size): ...
def ll_fz_new_document_writer(path, format, options): ...
def ll_fz_new_document_writer_of_size(size, begin_page, end_page, close, drop): ...
def ll_fz_new_document_writer_with_buffer(buf, format, options): ...
def ll_fz_new_document_writer_with_output(out, format, options): ...
def ll_fz_new_docx_writer(path, options): ...
def ll_fz_new_docx_writer_with_output(out, options): ...
def ll_fz_new_dom(tag): ...
def ll_fz_new_dom_node(dom, tag): ...
def ll_fz_new_dom_text_node(dom, text): ...
def ll_fz_new_draw_device(transform, dest): ...
def ll_fz_new_draw_device_type3(transform, dest): ...
def ll_fz_new_draw_device_with_bbox(transform, dest, clip): ...
def ll_fz_new_draw_device_with_bbox_proof(transform, dest, clip, cs): ...
def ll_fz_new_draw_device_with_options(options, mediabox, pixmap): ...
def ll_fz_new_draw_device_with_proof(transform, dest, proof_cs): ...
def ll_fz_new_font_from_buffer(name, buffer, index, use_glyph_bbox): ...
def ll_fz_new_font_from_file(name, path, index, use_glyph_bbox): ...
def ll_fz_new_font_from_memory(name, data, len, index, use_glyph_bbox): ...
def ll_fz_new_function_of_size(size, size2, m, n, eval, drop): ...
def ll_fz_new_hash_table(initialsize, keylen, lock, drop_val): ...
def ll_fz_new_icc_colorspace(type, flags, name, buf): ...
def ll_fz_new_image_from_buffer(buffer): ...
def ll_fz_new_image_from_compressed_buffer(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, buffer, mask): ...
def ll_fz_new_image_from_compressed_buffer2(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, buffer, mask): ...
def ll_fz_new_image_from_display_list(w, h, list): ...
def ll_fz_new_image_from_file(path): ...
def ll_fz_new_image_from_pixmap(pixmap, mask): ...
def ll_fz_new_image_from_svg(buf, base_uri, dir): ...
def ll_fz_new_image_from_svg_xml(xmldoc, xml, base_uri, dir): ...
def ll_fz_new_image_of_size(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, mask, size, get_pixmap, get_size, drop): ...
def ll_fz_new_indexed_colorspace(base, high, lookup): ...
def ll_fz_new_jpeg_pixmap_writer(path, options): ...
def ll_fz_new_layout(): ...
def ll_fz_new_link_of_size(size, rect, uri): ...
def ll_fz_new_list_device(list): ...
def ll_fz_new_log_for_module(module): ...
def ll_fz_new_mono_pcl_band_writer(out, options): ...
def ll_fz_new_mono_pwg_band_writer(out, pwg): ...
def ll_fz_new_multi_archive(): ...
def ll_fz_new_ocr_device(target, ctm, mediabox, with_list, language, datadir, progress, progress_arg): ...
def ll_fz_new_odt_writer(path, options): ...
def ll_fz_new_odt_writer_with_output(out, options): ...
def ll_fz_new_outline(): ...
def ll_fz_new_outline_iterator(doc): ...
def ll_fz_new_outline_iterator_of_size(size, doc): ...
def ll_fz_new_output(bufsiz, state, write, close, drop): ...
def ll_fz_new_output_with_buffer(buf): ...
def ll_fz_new_output_with_file_ptr(file): ...
def ll_fz_new_output_with_path(filename, append): ...
def ll_fz_new_page_of_size(size, doc): ...
def ll_fz_new_pam_band_writer(out): ...
def ll_fz_new_pam_pixmap_writer(path, options): ...
def ll_fz_new_path(): ...
def ll_fz_new_pbm_band_writer(out): ...
def ll_fz_new_pbm_pixmap_writer(path, options): ...
def ll_fz_new_pcl_writer(path, options): ...
def ll_fz_new_pcl_writer_with_output(out, options): ...
def ll_fz_new_pclm_band_writer(out, options): ...
def ll_fz_new_pclm_writer(path, options): ...
def ll_fz_new_pclm_writer_with_output(out, options): ...
def ll_fz_new_pdf_document_from_fz_document(ptr): ...
def ll_fz_new_pdf_writer(path, options): ...
def ll_fz_new_pdf_writer_with_output(out, options): ...
def ll_fz_new_pdfocr_band_writer(out, options): ...
def ll_fz_new_pdfocr_writer(path, options): ...
def ll_fz_new_pdfocr_writer_with_output(out, options): ...
def ll_fz_new_pgm_pixmap_writer(path, options): ...
def ll_fz_new_pixmap(cs, w, h, seps, alpha): ...
def ll_fz_new_pixmap_from_alpha_channel(src): ...
def ll_fz_new_pixmap_from_color_and_mask(color, mask): ...
def ll_fz_new_pixmap_from_display_list(list, ctm, cs, alpha): ...
def ll_fz_new_pixmap_from_display_list_with_separations(list, ctm, cs, seps, alpha): ...
def ll_fz_new_pixmap_from_page(page, ctm, cs, alpha): ...
def ll_fz_new_pixmap_from_page_contents(page, ctm, cs, alpha): ...
def ll_fz_new_pixmap_from_page_contents_with_separations(page, ctm, cs, seps, alpha): ...
def ll_fz_new_pixmap_from_page_number(doc, number, ctm, cs, alpha): ...
def ll_fz_new_pixmap_from_page_number_with_separations(doc, number, ctm, cs, seps, alpha): ...
def ll_fz_new_pixmap_from_page_with_separations(page, ctm, cs, seps, alpha): ...
def ll_fz_new_pixmap_from_pixmap(pixmap, rect): ...
def ll_fz_new_pixmap_with_bbox(colorspace, bbox, seps, alpha): ...
def ll_fz_new_pixmap_with_bbox_and_data(colorspace, rect, seps, alpha, samples): ...
def ll_fz_new_pixmap_with_data(colorspace, w, h, seps, alpha, stride, samples): ...
def ll_fz_new_pixmap_writer(path, options, default_path, n, save): ...
def ll_fz_new_pkm_band_writer(out): ...
def ll_fz_new_pkm_pixmap_writer(path, options): ...
def ll_fz_new_png_band_writer(out): ...
def ll_fz_new_png_pixmap_writer(path, options): ...
def ll_fz_new_pnm_band_writer(out): ...
def ll_fz_new_pnm_pixmap_writer(path, options): ...
def ll_fz_new_pool(): ...
def ll_fz_new_ppm_pixmap_writer(path, options): ...
def ll_fz_new_ps_band_writer(out): ...
def ll_fz_new_ps_writer(path, options): ...
def ll_fz_new_ps_writer_with_output(out, options): ...
def ll_fz_new_psd_band_writer(out): ...
def ll_fz_new_pwg_band_writer(out, pwg): ...
def ll_fz_new_pwg_writer(path, options): ...
def ll_fz_new_pwg_writer_with_output(out, options): ...
def ll_fz_new_rle_output(chain): ...
def ll_fz_new_separations(controllable): ...
def ll_fz_new_stext_device(page, options): ...
def ll_fz_new_stext_page(mediabox): ...
def ll_fz_new_stext_page_from_chapter_page_number(doc, chapter, number, options): ...
def ll_fz_new_stext_page_from_display_list(list, options): ...
def ll_fz_new_stext_page_from_page(page, options): ...
def ll_fz_new_stext_page_from_page_number(doc, number, options): ...
def ll_fz_new_store_context(max): ...
def ll_fz_new_story(buf, user_css, em, dir): ...
def ll_fz_new_stream(state, next, drop): ...
def ll_fz_new_string(str): ...
def ll_fz_new_stroke_state(): ...
def ll_fz_new_stroke_state_with_dash_len(len): ...
def ll_fz_new_svg_device(out, page_width, page_height, text_format, reuse_images): ...
def ll_fz_new_svg_device_with_id(out, page_width, page_height, text_format, reuse_images, id): ...
def ll_fz_new_svg_writer(path, options): ...
def ll_fz_new_svg_writer_with_output(out, options): ...
def ll_fz_new_test_device(is_color, threshold, options, passthrough): ...
def ll_fz_new_text(): ...
def ll_fz_new_text_writer(format, path, options): ...
def ll_fz_new_text_writer_with_output(format, out, options): ...
def ll_fz_new_trace_device(out): ...
def ll_fz_new_tree_archive(tree): ...
def ll_fz_new_type3_font(name, matrix): ...
def ll_fz_new_xhtml_document_from_document(old_doc, opts): ...
def ll_fz_new_xmltext_device(out): ...
def ll_fz_new_zip_writer(filename): ...
def ll_fz_new_zip_writer_with_output(out): ...
def ll_fz_next_page(doc, loc): ...
def ll_fz_normalize_vector(p): ...
def ll_fz_open_a85d(chain): ...
def ll_fz_open_accelerated_document(filename, accel): ...
def ll_fz_open_accelerated_document_with_stream(magic, stream, accel): ...
def ll_fz_open_accelerated_document_with_stream_and_dir(magic, stream, accel, dir): ...
def ll_fz_open_aesd(chain, key, keylen): ...
def ll_fz_open_ahxd(chain): ...
def ll_fz_open_arc4(chain, key, keylen): ...
def ll_fz_open_archive(filename): ...
def ll_fz_open_archive_entry(arch, name): ...
def ll_fz_open_archive_with_stream(file): ...
def ll_fz_open_buffer(buf): ...
def ll_fz_open_cfb_archive(filename): ...
def ll_fz_open_cfb_archive_with_stream(file): ...
def ll_fz_open_compressed_buffer(arg_1): ...
def ll_fz_open_concat(max, pad): ...
def ll_fz_open_dctd(chain, color_transform, invert_cmyk, l2factor, jpegtables): ...
def ll_fz_open_directory(path): ...
def ll_fz_open_document(filename): ...
def ll_fz_open_document_with_buffer(magic, buffer): ...
def ll_fz_open_document_with_stream(magic, stream): ...
def ll_fz_open_document_with_stream_and_dir(magic, stream, dir): ...
def ll_fz_open_endstream_filter(chain, len, offset): ...
def ll_fz_open_faxd(chain, k, end_of_line, encoded_byte_align, columns, rows, end_of_block, black_is_1): ...
def ll_fz_open_file(filename): ...
def ll_fz_open_file_autodelete(filename): ...
def ll_fz_open_file_ptr_no_close(file): ...
def ll_fz_open_flated(chain, window_bits): ...
def ll_fz_open_image_decomp_stream(arg_1, arg_2, l2factor): ...
def ll_fz_open_image_decomp_stream_from_buffer(arg_1, l2factor): ...
def ll_fz_open_jbig2d(chain, globals, embedded): ...
def ll_fz_open_leecher(chain, buf): ...
def ll_fz_open_libarchive_archive(filename): ...
def ll_fz_open_libarchive_archive_with_stream(file): ...
def ll_fz_open_libarchived(chain): ...
def ll_fz_open_lzwd(chain, early_change, min_bits, reverse_bits, old_tiff): ...
def ll_fz_open_memory(data, len): ...
def ll_fz_open_null_filter(chain, len, offset): ...
def ll_fz_open_predict(chain, predictor, columns, colors, bpc): ...
def ll_fz_open_range_filter(chain, ranges, nranges): ...
def ll_fz_open_reflowed_document(underdoc, opts): ...
def ll_fz_open_rld(chain): ...
def ll_fz_open_sgilog16(chain, w): ...
def ll_fz_open_sgilog24(chain, w): ...
def ll_fz_open_sgilog32(chain, w): ...
def ll_fz_open_tar_archive(filename): ...
def ll_fz_open_tar_archive_with_stream(file): ...
def ll_fz_open_thunder(chain, w): ...
def ll_fz_open_zip_archive(path): ...
def ll_fz_open_zip_archive_with_stream(file): ...
def ll_fz_opt_from_list(opt, optlist): ...
def ll_fz_option_eq(a, b): ...
def ll_fz_outline_glyph(font, gid, ctm): ...
def ll_fz_outline_iterator_delete(iter): ...
def ll_fz_outline_iterator_down(iter): ...
def ll_fz_outline_iterator_from_outline(outline): ...
def ll_fz_outline_iterator_insert(iter, item): ...
def ll_fz_outline_iterator_item(iter): ...
def ll_fz_outline_iterator_next(iter): ...
def ll_fz_outline_iterator_prev(iter): ...
def ll_fz_outline_iterator_up(iter): ...
def ll_fz_outline_iterator_update(iter, item): ...
def ll_fz_output_accelerator(doc, accel): ...
def ll_fz_output_supports_stream(out): ...
def ll_fz_output_xml(out, item, level): ...
def ll_fz_pack_path(pack, path): ...
def ll_fz_packed_path_size(path): ...
def ll_fz_page_label(page, buf, size): ...
def ll_fz_page_number_from_location(doc, loc): ...
def ll_fz_page_presentation(page, transition, duration): ...
def ll_fz_page_separations(page): ...
def ll_fz_page_uses_overprint(page): ...
def ll_fz_paint_shade(shade, override_cs, ctm, dest, color_params, bbox, eop, cache): ...
def ll_fz_parse_draw_options(options, string): ...
def ll_fz_parse_page_range(s, a, b, n): ...
def ll_fz_parse_pcl_options(opts, args): ...
def ll_fz_parse_pclm_options(opts, args): ...
def ll_fz_parse_pdfocr_options(opts, args): ...
def ll_fz_parse_stext_options(opts, string): ...
def ll_fz_parse_xml(buf, preserve_white): ...
def ll_fz_parse_xml_archive_entry(dir, filename, preserve_white): ...
def ll_fz_parse_xml_from_html5(buf): ...
def ll_fz_parse_xml_stream(stream, preserve_white): ...
def ll_fz_pcl_preset(opts, preset): ...
def ll_fz_pdfocr_band_writer_set_progress(writer, progress_fn, progress_arg): ...
def ll_fz_pdfocr_writer_set_progress(writer, progress, arg_3): ...
def ll_fz_peek_byte(stm): ...
def ll_fz_pixmap_alpha(pix): ...
def ll_fz_pixmap_bbox(pix): ...
def ll_fz_pixmap_colorants(pix): ...
def ll_fz_pixmap_colorspace(pix): ...
def ll_fz_pixmap_components(pix): ...
def ll_fz_pixmap_height(pix): ...
def ll_fz_pixmap_image_tile(cimg): ...
def ll_fz_pixmap_samples(pix): ...
def ll_fz_pixmap_samples_int(pixmap): ...
def ll_fz_pixmap_size(pix): ...
def ll_fz_pixmap_spots(pix): ...
def ll_fz_pixmap_stride(pix): ...
def ll_fz_pixmap_width(pix): ...
def ll_fz_pixmap_x(pix): ...
def ll_fz_pixmap_y(pix): ...
def ll_fz_place_story(story, where, filled): ...
def ll_fz_place_story_flags(story, where, filled, flags): ...
def ll_fz_pool_alloc(pool, size): ...
def ll_fz_pool_size(pool): ...
def ll_fz_pool_strdup(pool, s): ...
def ll_fz_pop_clip(dev): ...
def ll_fz_post_scale(m, sx, sy): ...
def ll_fz_pre_rotate(m, degrees): ...
def ll_fz_pre_scale(m, sx, sy): ...
def ll_fz_pre_shear(m, sx, sy): ...
def ll_fz_pre_translate(m, tx, ty): ...
def ll_fz_prepare_t3_glyph(font, gid): ...
def ll_fz_previous_page(doc, loc): ...
def ll_fz_print_stext_header_as_html(out): ...
def ll_fz_print_stext_header_as_xhtml(out): ...
def ll_fz_print_stext_page_as_html(out, page, id): ...
def ll_fz_print_stext_page_as_json(out, page, scale): ...
def ll_fz_print_stext_page_as_text(out, page): ...
def ll_fz_print_stext_page_as_xhtml(out, page, id): ...
def ll_fz_print_stext_page_as_xml(out, page, id): ...
def ll_fz_print_stext_trailer_as_html(out): ...
def ll_fz_print_stext_trailer_as_xhtml(out): ...
def ll_fz_process_opened_pages(doc, process_openend_page, state): ...
def ll_fz_process_shade(shade, ctm, scissor, prepare, process, process_arg): ...
def ll_fz_ptr_heap_insert(heap, v, HEAP_CMP): ...
def ll_fz_ptr_heap_sort(heap, HEAP_CMP): ...
def ll_fz_ptr_heap_uniq(heap, HEAP_CMP): ...
def ll_fz_purge_glyph_cache(): ...
def ll_fz_quad_from_rect(r): ...
def ll_fz_quadto(path, x0, y0, x1, y1): ...
def ll_fz_read(stm, data, len): ...
def ll_fz_read_all(stm, initial): ...
def ll_fz_read_archive_entry(arch, name): ...
def ll_fz_read_best(stm, initial, truncated, worst_case): ...
def ll_fz_read_bits(stm, n): ...
def ll_fz_read_byte(stm): ...
def ll_fz_read_file(filename): ...
def ll_fz_read_float(stm): ...
def ll_fz_read_float_le(stm): ...
def ll_fz_read_int16(stm): ...
def ll_fz_read_int16_le(stm): ...
def ll_fz_read_int32(stm): ...
def ll_fz_read_int32_le(stm): ...
def ll_fz_read_int64(stm): ...
def ll_fz_read_int64_le(stm): ...
def ll_fz_read_line(stm, buf, max): ...
def ll_fz_read_rbits(stm, n): ...
def ll_fz_read_rune(_in): ...
def ll_fz_read_string(stm, buffer, len): ...
def ll_fz_read_uint16(stm): ...
def ll_fz_read_uint16_le(stm): ...
def ll_fz_read_uint24(stm): ...
def ll_fz_read_uint24_le(stm): ...
def ll_fz_read_uint32(stm): ...
def ll_fz_read_uint32_le(stm): ...
def ll_fz_read_uint64(stm): ...
def ll_fz_read_uint64_le(stm): ...
def ll_fz_read_utf16_be(stm): ...
def ll_fz_read_utf16_le(stm): ...
def ll_fz_realloc(p, size): ...
def ll_fz_realloc_no_throw(p, size): ...
def ll_fz_realpath(path, resolved_path): ...
def ll_fz_recognize_document(magic): ...
def ll_fz_recognize_document_content(filename): ...
def ll_fz_recognize_document_stream_and_dir_content(stream, dir, magic): ...
def ll_fz_recognize_document_stream_content(stream, magic): ...
def ll_fz_recognize_image_format(p): ...
def ll_fz_rect_from_irect(bbox): ...
def ll_fz_rect_from_quad(q): ...
def ll_fz_rectto(path, x0, y0, x1, y1): ...
def ll_fz_register_archive_handler(handler): ...
def ll_fz_register_document_handler(handler): ...
def ll_fz_register_document_handlers(): ...
def ll_fz_remove_item(drop, key, type): ...
def ll_fz_render_flags(dev, set, clear): ...
def ll_fz_render_glyph_pixmap(font, gid, ctm, scissor, aa): ...
def ll_fz_render_t3_glyph_direct(dev, font, gid, trm, gstate, def_cs): ...
def ll_fz_rendering_intent_name(ri): ...
def ll_fz_report_error(): ...
def ll_fz_reset_output(arg_1): ...
def ll_fz_reset_story(story): ...
def ll_fz_resize_buffer(buf, capacity): ...
def ll_fz_resolve_link(doc, uri, xp, yp): ...
def ll_fz_resolve_link_dest(doc, uri): ...
def ll_fz_rethrow(): ...
def ll_fz_rethrow_if(errcode): ...
def ll_fz_rethrow_unless(errcode): ...
def ll_fz_rotate(degrees): ...
def ll_fz_round_rect(rect): ...
def ll_fz_run_display_list(list, dev, ctm, scissor, cookie): ...
def ll_fz_run_document_structure(doc, dev, cookie): ...
def ll_fz_run_page(page, dev, transform, cookie): ...
def ll_fz_run_page_annots(page, dev, transform, cookie): ...
def ll_fz_run_page_contents(page, dev, transform, cookie): ...
def ll_fz_run_page_widgets(page, dev, transform, cookie): ...
def ll_fz_run_t3_glyph(font, gid, trm, dev): ...
def ll_fz_runeidx(str, p): ...
def ll_fz_runelen(rune): ...
def ll_fz_runeptr(str, idx): ...
def ll_fz_runetochar(str, rune): ...
def ll_fz_samples_get(pixmap, offset): ...
def ll_fz_samples_set(pixmap, offset, value): ...
def ll_fz_save_accelerator(doc, accel): ...
def ll_fz_save_bitmap_as_pbm(bitmap, filename): ...
def ll_fz_save_bitmap_as_pcl(bitmap, filename, append, pcl): ...
def ll_fz_save_bitmap_as_pkm(bitmap, filename): ...
def ll_fz_save_bitmap_as_pwg(bitmap, filename, append, pwg): ...
def ll_fz_save_buffer(buf, filename): ...
def ll_fz_save_pixmap_as_jpeg(pixmap, filename, quality): ...
def ll_fz_save_pixmap_as_jpx(pixmap, filename, q): ...
def ll_fz_save_pixmap_as_pam(pixmap, filename): ...
def ll_fz_save_pixmap_as_pbm(pixmap, filename): ...
def ll_fz_save_pixmap_as_pcl(pixmap, filename, append, pcl): ...
def ll_fz_save_pixmap_as_pclm(pixmap, filename, append, options): ...
def ll_fz_save_pixmap_as_pdfocr(pixmap, filename, append, options): ...
def ll_fz_save_pixmap_as_pkm(pixmap, filename): ...
def ll_fz_save_pixmap_as_png(pixmap, filename): ...
def ll_fz_save_pixmap_as_pnm(pixmap, filename): ...
def ll_fz_save_pixmap_as_ps(pixmap, filename, append): ...
def ll_fz_save_pixmap_as_psd(pixmap, filename): ...
def ll_fz_save_pixmap_as_pwg(pixmap, filename, append, pwg): ...
def ll_fz_save_xml(root, path, indented): ...
def ll_fz_scale(sx, sy): ...
def ll_fz_scale_pixmap(src, x, y, w, h, clip): ...
def ll_fz_search_chapter_page_number(doc, chapter, page, needle, hit_mark, hit_bbox, hit_max): ...
def ll_fz_search_chapter_page_number_cb(doc, chapter, page, needle, cb, opaque): ...
def ll_fz_search_display_list(list, needle, hit_mark, hit_bbox, hit_max): ...
def ll_fz_search_display_list_cb(list, needle, cb, opaque): ...
def ll_fz_search_page(page, needle, hit_mark, hit_bbox, hit_max): ...
def ll_fz_search_page2(doc, number, needle, hit_max): ...
def ll_fz_search_page_cb(page, needle, cb, opaque): ...
def ll_fz_search_page_number(doc, number, needle, hit_mark, hit_bbox, hit_max): ...
def ll_fz_search_page_number_cb(doc, number, needle, cb, opaque): ...
def ll_fz_search_stext_page(text, needle, hit_mark, hit_bbox, hit_max): ...
def ll_fz_search_stext_page_cb(text, needle, cb, opaque): ...
def ll_fz_seek(stm, offset, whence): ...
def ll_fz_seek_output(out, off, whence): ...
def ll_fz_segment_stext_page(page): ...
def ll_fz_separation_current_behavior(sep, separation): ...
def ll_fz_separation_equivalent(seps, idx, dst_cs, dst_color, prf, color_params): ...
def ll_fz_separation_name(sep, separation): ...
def ll_fz_set_aa_level(bits): ...
def ll_fz_set_compressed_image_buffer(cimg, buf): ...
def ll_fz_set_default_cmyk(default_cs, cs): ...
def ll_fz_set_default_colorspaces(dev, default_cs): ...
def ll_fz_set_default_gray(default_cs, cs): ...
def ll_fz_set_default_output_intent(default_cs, cs): ...
def ll_fz_set_default_rgb(default_cs, cs): ...
def ll_fz_set_error_callback(error_cb, user): ...
def ll_fz_set_font_bbox(font, xmin, ymin, xmax, ymax): ...
def ll_fz_set_font_embedding(font, embed): ...
def ll_fz_set_graphics_aa_level(bits): ...
def ll_fz_set_graphics_min_line_width(min_line_width): ...
def ll_fz_set_link_rect(link, rect): ...
def ll_fz_set_link_uri(link, uri): ...
def ll_fz_set_metadata(doc, key, value): ...
def ll_fz_set_pixmap_image_tile(cimg, pix): ...
def ll_fz_set_pixmap_resolution(pix, xres, yres): ...
def ll_fz_set_separation_behavior(sep, separation, behavior): ...
def ll_fz_set_stddbg(out): ...
def ll_fz_set_text_aa_level(bits): ...
def ll_fz_set_use_document_css(use): ...
def ll_fz_set_user_context(user): ...
def ll_fz_set_user_css(text): ...
def ll_fz_set_warning_callback(warning_cb, user): ...
def ll_fz_sha256_final(state, digest): ...
def ll_fz_sha256_init(state): ...
def ll_fz_sha256_update(state, input, inlen): ...
def ll_fz_sha384_final(state, digest): ...
def ll_fz_sha384_init(state): ...
def ll_fz_sha384_update(state, input, inlen): ...
def ll_fz_sha512_final(state, digest): ...
def ll_fz_sha512_init(state): ...
def ll_fz_sha512_update(state, input, inlen): ...
def ll_fz_shear(sx, sy): ...
def ll_fz_show_glyph(text, font, trm, glyph, unicode, wmode, bidi_level, markup_dir, language): ...
def ll_fz_show_glyph_aux(text, font, trm, adv, glyph, unicode, cid, wmode, bidi_level, markup_dir, lang): ...
def ll_fz_show_string(text, font, trm, s, wmode, bidi_level, markup_dir, language): ...
def ll_fz_shrink_store(percent): ...
def ll_fz_skew_detect(pixmap): ...
def ll_fz_skip(stm, len): ...
def ll_fz_skip_space(stm): ...
def ll_fz_skip_string(stm, str): ...
def ll_fz_slice_buffer(buf, start, end): ...
def ll_fz_snap_selection(page, ap, bp, mode): ...
def ll_fz_start_throw_on_repair(): ...
def ll_fz_stat_ctime(path): ...
def ll_fz_stat_mtime(path): ...
def ll_fz_stddbg(): ...
def ll_fz_stderr(): ...
def ll_fz_stdout(): ...
def ll_fz_store_item(key, val, itemsize, type): ...
def ll_fz_store_scavenge(size, phase): ...
def ll_fz_store_scavenge_external(size, phase): ...
def ll_fz_story_document(story): ...
def ll_fz_story_positions(story, cb, arg): ...
def ll_fz_story_warnings(story): ...
def ll_fz_strcasecmp(a, b): ...
def ll_fz_strdup(s): ...
def ll_fz_stream_filename(stm): ...
def ll_fz_stream_from_output(arg_1): ...
def ll_fz_string_from_box_type(box): ...
def ll_fz_string_from_buffer(buf): ...
def ll_fz_string_from_text_language(str, lang): ...
def ll_fz_string_from_text_language2(lang): ...
def ll_fz_strlcat(dst, src, n): ...
def ll_fz_strlcpy(dst, src, n): ...
def ll_fz_strncasecmp(a, b, n): ...
def ll_fz_strnlen(s, maxlen): ...
def ll_fz_stroke_path(dev, path, stroke, ctm, colorspace, color, alpha, color_params): ...
def ll_fz_stroke_text(dev, text, stroke, ctm, colorspace, color, alpha, color_params): ...
def ll_fz_strsep(stringp, delim): ...
def ll_fz_strtof(s, es): ...
def ll_fz_structure_from_string(str): ...
def ll_fz_structure_to_string(type): ...
def ll_fz_subpixel_adjust(ctm, subpix_ctm, qe, qf): ...
def ll_fz_subsample_pixmap(tile, factor): ...
def ll_fz_subset_cff_for_gids(orig, gids, num_gids, symbolic, cidfont): ...
def ll_fz_subset_ttf_for_gids(orig, gids, num_gids, symbolic, cidfont): ...
def ll_fz_sync_bits(stm): ...
def ll_fz_tell(stm): ...
def ll_fz_tell_output(out): ...
def ll_fz_terminate_buffer(buf): ...
def ll_fz_text_aa_level(): ...
def ll_fz_text_language_from_string(str): ...
def ll_fz_tint_pixmap(pix, black, white): ...
def ll_fz_tolower(c): ...
def ll_fz_toupper(c): ...
def ll_fz_transform_page(mediabox, resolution, rotate): ...
def ll_fz_transform_path(path, transform): ...
def ll_fz_transform_point(point, m): ...
def ll_fz_transform_point_xy(x, y, m): ...
def ll_fz_transform_quad(q, m): ...
def ll_fz_transform_rect(rect, m): ...
def ll_fz_transform_vector(vector, m): ...
def ll_fz_translate(tx, ty): ...
def ll_fz_translate_irect(a, xoff, yoff): ...
def ll_fz_translate_rect(a, xoff, yoff): ...
def ll_fz_tree_archive_add_buffer(arch_, name, buf): ...
def ll_fz_tree_archive_add_data(arch_, name, data, size): ...
def ll_fz_tree_insert(root, key, value): ...
def ll_fz_tree_lookup(node, key): ...
def ll_fz_trim_buffer(buf): ...
def ll_fz_trim_path(path): ...
def ll_fz_truncate_output(arg_1): ...
def ll_fz_try_invert_matrix(inv, src): ...
def ll_fz_try_open_archive_entry(arch, name): ...
def ll_fz_try_open_archive_with_stream(file): ...
def ll_fz_try_open_file(name): ...
def ll_fz_try_parse_xml_archive_entry(dir, filename, preserve_white): ...
def ll_fz_try_read_archive_entry(arch, name): ...
def ll_fz_try_read_file(filename): ...
def ll_fz_tune_image_decode(image_decode, arg): ...
def ll_fz_tune_image_scale(image_scale, arg): ...
def ll_fz_unicode_from_glyph_name(name): ...
def ll_fz_unicode_from_glyph_name_strict(name): ...
def ll_fz_union_rect(a, b): ...
def ll_fz_unlock(lock): ...
def ll_fz_unpack_stream(src, depth, w, h, n, indexed, pad, skip): ...
def ll_fz_unread_byte(stm): ...
def ll_fz_unshare_stroke_state(shared): ...
def ll_fz_unshare_stroke_state_with_dash_len(shared, len): ...
def ll_fz_urldecode(url): ...
def ll_fz_use_document_css(): ...
def ll_fz_user_context(): ...
def ll_fz_user_css(): ...
def ll_fz_utflen(s): ...
def ll_fz_var_imp(arg_0): ...
def ll_fz_walk_path(path, walker, arg): ...
def ll_fz_warn(*args): ...
def ll_fz_warning_callback(user): ...
def ll_fz_warp_pixmap(src, points, width, height): ...
def ll_fz_windows_1250_from_unicode(u): ...
def ll_fz_windows_1251_from_unicode(u): ...
def ll_fz_windows_1252_from_unicode(u): ...
def ll_fz_write_band(writer, stride, band_height, samples): ...
def ll_fz_write_base64(out, data, size, newline): ...
def ll_fz_write_base64_buffer(out, data, newline): ...
def ll_fz_write_bitmap_as_pbm(out, bitmap): ...
def ll_fz_write_bitmap_as_pcl(out, bitmap, pcl): ...
def ll_fz_write_bitmap_as_pkm(out, bitmap): ...
def ll_fz_write_bitmap_as_pwg(out, bitmap, pwg): ...
def ll_fz_write_bitmap_as_pwg_page(out, bitmap, pwg): ...
def ll_fz_write_bits(out, data, num_bits): ...
def ll_fz_write_bits_sync(out): ...
def ll_fz_write_buffer(out, data): ...
def ll_fz_write_byte(out, x): ...
def ll_fz_write_char(out, x): ...
def ll_fz_write_data(out, data, size): ...
def ll_fz_write_document(wri, doc): ...
def ll_fz_write_float_be(out, f): ...
def ll_fz_write_float_le(out, f): ...
def ll_fz_write_header(writer, w, h, n, alpha, xres, yres, pagenum, cs, seps): ...
def ll_fz_write_image_as_data_uri(out, image): ...
def ll_fz_write_int16_be(out, x): ...
def ll_fz_write_int16_le(out, x): ...
def ll_fz_write_int32_be(out, x): ...
def ll_fz_write_int32_le(out, x): ...
def ll_fz_write_pixmap_as_data_uri(out, pixmap): ...
def ll_fz_write_pixmap_as_jpeg(out, pix, quality, invert_cmyk): ...
def ll_fz_write_pixmap_as_jpx(out, pix, quality): ...
def ll_fz_write_pixmap_as_pam(out, pixmap): ...
def ll_fz_write_pixmap_as_pcl(out, pixmap, pcl): ...
def ll_fz_write_pixmap_as_pclm(out, pixmap, options): ...
def ll_fz_write_pixmap_as_pdfocr(out, pixmap, options): ...
def ll_fz_write_pixmap_as_png(out, pixmap): ...
def ll_fz_write_pixmap_as_pnm(out, pixmap): ...
def ll_fz_write_pixmap_as_ps(out, pixmap): ...
def ll_fz_write_pixmap_as_psd(out, pixmap): ...
def ll_fz_write_pixmap_as_pwg(out, pixmap, pwg): ...
def ll_fz_write_pixmap_as_pwg_page(out, pixmap, pwg): ...
def ll_fz_write_ps_file_header(out): ...
def ll_fz_write_ps_file_trailer(out, pages): ...
def ll_fz_write_pwg_file_header(out): ...
def ll_fz_write_rune(out, rune): ...
def ll_fz_write_stabilized_story(writer, user_css, em, contentfn, contentfn_ref, rectfn, rectfn_ref, pagefn, pagefn_ref, dir): ...
def ll_fz_write_story(writer, story, rectfn, rectfn_ref, positionfn, positionfn_ref, pagefn, pagefn_ref): ...
def ll_fz_write_stream(out, _in): ...
def ll_fz_write_string(out, s): ...
def ll_fz_write_uint16_be(out, x): ...
def ll_fz_write_uint16_le(out, x): ...
def ll_fz_write_uint32_be(out, x): ...
def ll_fz_write_uint32_le(out, x): ...
def ll_fz_write_xml(root, out, indented): ...
def ll_fz_write_zip_entry(zip, name, buf, compress): ...
def ll_fz_xml_add_att(pool, node, key, val): ...
def ll_fz_xml_att(item, att): ...
def ll_fz_xml_att_alt(item, one, two): ...
def ll_fz_xml_att_eq(item, name, match): ...
def ll_fz_xml_down(item): ...
def ll_fz_xml_find(item, tag): ...
def ll_fz_xml_find_dfs(item, tag, att, match): ...
def ll_fz_xml_find_dfs_top(item, tag, att, match, top): ...
def ll_fz_xml_find_down(item, tag): ...
def ll_fz_xml_find_down_match(item, tag, att, match): ...
def ll_fz_xml_find_match(item, tag, att, match): ...
def ll_fz_xml_find_next(item, tag): ...
def ll_fz_xml_find_next_dfs(item, tag, att, match): ...
def ll_fz_xml_find_next_dfs_top(item, tag, att, match, top): ...
def ll_fz_xml_find_next_match(item, tag, att, match): ...
def ll_fz_xml_is_tag(item, name): ...
def ll_fz_xml_next(item): ...
def ll_fz_xml_prev(item): ...
def ll_fz_xml_root(xml): ...
def ll_fz_xml_tag(item): ...
def ll_fz_xml_text(item): ...
def ll_fz_xml_up(item): ...
def ll_pdf_abandon_operation(doc): ...
def ll_pdf_access_alert_event(evt): ...
def ll_pdf_access_exec_menu_item_event(evt): ...
def ll_pdf_access_launch_url_event(evt): ...
def ll_pdf_access_mail_doc_event(evt): ...
def ll_pdf_add_annot_border_dash_item(annot, length): ...
def ll_pdf_add_annot_ink_list(annot, n, stroke): ...
def ll_pdf_add_annot_ink_list_stroke(annot): ...
def ll_pdf_add_annot_ink_list_stroke_vertex(annot, p): ...
def ll_pdf_add_annot_quad_point(annot, quad): ...
def ll_pdf_add_annot_vertex(annot, p): ...
def ll_pdf_add_cid_font(doc, font): ...
def ll_pdf_add_cjk_font(doc, font, script, wmode, serif): ...
def ll_pdf_add_codespace(cmap, low, high, n): ...
def ll_pdf_add_embedded_file(doc, filename, mimetype, contents, created, modifed, add_checksum): ...
def ll_pdf_add_hmtx(font, lo, hi, w): ...
def ll_pdf_add_image(doc, image): ...
def ll_pdf_add_journal_fragment(doc, parent, copy, copy_stream, newobj): ...
def ll_pdf_add_new_array(doc, initial): ...
def ll_pdf_add_new_dict(doc, initial): ...
def ll_pdf_add_object(doc, obj): ...
def ll_pdf_add_object_drop(doc, obj): ...
def ll_pdf_add_page(doc, mediabox, rotate, resources, contents): ...
def ll_pdf_add_simple_font(doc, font, encoding): ...
def ll_pdf_add_stream(doc, buf, obj, compressed): ...
def ll_pdf_add_substitute_font(doc, font): ...
def ll_pdf_add_vmtx(font, lo, hi, x, y, w): ...
def ll_pdf_annot_MK_BC(annot, n, color): ...
def ll_pdf_annot_MK_BC_rgb(annot, rgb): ...
def ll_pdf_annot_MK_BG(annot, n, color): ...
def ll_pdf_annot_MK_BG_rgb(annot, rgb): ...
def ll_pdf_annot_active(annot): ...
def ll_pdf_annot_ap(annot): ...
def ll_pdf_annot_author(annot): ...
def ll_pdf_annot_border(annot): ...
def ll_pdf_annot_border_dash_count(annot): ...
def ll_pdf_annot_border_dash_item(annot, i): ...
def ll_pdf_annot_border_effect(annot): ...
def ll_pdf_annot_border_effect_intensity(annot): ...
def ll_pdf_annot_border_style(annot): ...
def ll_pdf_annot_border_width(annot): ...
def ll_pdf_annot_callout_line(annot, callout, n): ...
def ll_pdf_annot_callout_point(annot): ...
def ll_pdf_annot_callout_style(annot): ...
def ll_pdf_annot_color(annot, n, color): ...
def ll_pdf_annot_contents(annot): ...
def ll_pdf_annot_creation_date(annot): ...
def ll_pdf_annot_default_appearance(annot, font, size, n, color): ...
def ll_pdf_annot_default_appearance_unmapped(annot, font_name, font_name_len, size, n, color): ...
def ll_pdf_annot_ensure_local_xref(annot): ...
def ll_pdf_annot_event_blur(annot): ...
def ll_pdf_annot_event_down(annot): ...
def ll_pdf_annot_event_enter(annot): ...
def ll_pdf_annot_event_exit(annot): ...
def ll_pdf_annot_event_focus(annot): ...
def ll_pdf_annot_event_page_close(annot): ...
def ll_pdf_annot_event_page_invisible(annot): ...
def ll_pdf_annot_event_page_open(annot): ...
def ll_pdf_annot_event_page_visible(annot): ...
def ll_pdf_annot_event_up(annot): ...
def ll_pdf_annot_field_event_keystroke(doc, annot, evt): ...
def ll_pdf_annot_field_flags(annot): ...
def ll_pdf_annot_field_label(widget): ...
def ll_pdf_annot_field_value(annot): ...
def ll_pdf_annot_filespec(annot): ...
def ll_pdf_annot_flags(annot): ...
def ll_pdf_annot_has_author(annot): ...
def ll_pdf_annot_has_border(annot): ...
def ll_pdf_annot_has_border_effect(annot): ...
def ll_pdf_annot_has_callout(annot): ...
def ll_pdf_annot_has_filespec(annot): ...
def ll_pdf_annot_has_icon_name(annot): ...
def ll_pdf_annot_has_ink_list(annot): ...
def ll_pdf_annot_has_intent(annot): ...
def ll_pdf_annot_has_interior_color(annot): ...
def ll_pdf_annot_has_line(annot): ...
def ll_pdf_annot_has_line_ending_styles(annot): ...
def ll_pdf_annot_has_open(annot): ...
def ll_pdf_annot_has_popup(annot): ...
def ll_pdf_annot_has_quad_points(annot): ...
def ll_pdf_annot_has_quadding(annot): ...
def ll_pdf_annot_has_rect(annot): ...
def ll_pdf_annot_has_vertices(annot): ...
def ll_pdf_annot_hidden_for_editing(annot): ...
def ll_pdf_annot_hot(annot): ...
def ll_pdf_annot_icon_name(annot): ...
def ll_pdf_annot_ink_list_count(annot): ...
def ll_pdf_annot_ink_list_stroke_count(annot, i): ...
def ll_pdf_annot_ink_list_stroke_vertex(annot, i, k): ...
def ll_pdf_annot_intent(annot): ...
def ll_pdf_annot_interior_color(annot, n, color): ...
def ll_pdf_annot_is_open(annot): ...
def ll_pdf_annot_is_standard_stamp(annot): ...
def ll_pdf_annot_language(annot): ...
def ll_pdf_annot_line(annot, a, b): ...
def ll_pdf_annot_line_caption(annot): ...
def ll_pdf_annot_line_caption_offset(annot): ...
def ll_pdf_annot_line_end_style(annot): ...
def ll_pdf_annot_line_ending_styles(annot, start_style, end_style): ...
def ll_pdf_annot_line_leader(annot): ...
def ll_pdf_annot_line_leader_extension(annot): ...
def ll_pdf_annot_line_leader_offset(annot): ...
def ll_pdf_annot_line_start_style(annot): ...
def ll_pdf_annot_modification_date(annot): ...
def ll_pdf_annot_needs_resynthesis(annot): ...
def ll_pdf_annot_obj(annot): ...
def ll_pdf_annot_opacity(annot): ...
def ll_pdf_annot_page(annot): ...
def ll_pdf_annot_pop_and_discard_local_xref(annot): ...
def ll_pdf_annot_pop_local_xref(annot): ...
def ll_pdf_annot_popup(annot): ...
def ll_pdf_annot_push_local_xref(annot): ...
def ll_pdf_annot_quad_point(annot, i): ...
def ll_pdf_annot_quad_point_count(annot): ...
def ll_pdf_annot_quadding(annot): ...
def ll_pdf_annot_rect(annot): ...
def ll_pdf_annot_request_resynthesis(annot): ...
def ll_pdf_annot_request_synthesis(annot): ...
def ll_pdf_annot_transform(annot): ...
def ll_pdf_annot_type(annot): ...
def ll_pdf_annot_type_from_string(subtype): ...
def ll_pdf_annot_vertex(annot, i): ...
def ll_pdf_annot_vertex_count(annot): ...
def ll_pdf_append_explicit_dest_to_uri(url, dest): ...
def ll_pdf_append_named_dest_to_uri(url, name): ...
def ll_pdf_append_token(buf, tok, lex): ...
def ll_pdf_apply_redaction(annot, opts): ...
def ll_pdf_array_contains(array, obj): ...
def ll_pdf_array_delete(array, index): ...
def ll_pdf_array_find(array, obj): ...
def ll_pdf_array_get(array, i): ...
def ll_pdf_array_get_bool(array, index): ...
def ll_pdf_array_get_int(array, index): ...
def ll_pdf_array_get_matrix(array, index): ...
def ll_pdf_array_get_name(array, index): ...
def ll_pdf_array_get_real(array, index): ...
def ll_pdf_array_get_rect(array, index): ...
def ll_pdf_array_get_string(array, index, sizep): ...
def ll_pdf_array_get_text_string(array, index): ...
def ll_pdf_array_insert(array, obj, index): ...
def ll_pdf_array_insert_drop(array, obj, index): ...
def ll_pdf_array_len(array): ...
def ll_pdf_array_push(array, obj): ...
def ll_pdf_array_push_array(array, initial): ...
def ll_pdf_array_push_bool(array, x): ...
def ll_pdf_array_push_dict(array, initial): ...
def ll_pdf_array_push_drop(array, obj): ...
def ll_pdf_array_push_int(array, x): ...
def ll_pdf_array_push_name(array, x): ...
def ll_pdf_array_push_real(array, x): ...
def ll_pdf_array_push_string(array, x, n): ...
def ll_pdf_array_push_text_string(array, x): ...
def ll_pdf_array_put(array, i, obj): ...
def ll_pdf_array_put_array(array, i, initial): ...
def ll_pdf_array_put_bool(array, i, x): ...
def ll_pdf_array_put_dict(array, i, initial): ...
def ll_pdf_array_put_drop(array, i, obj): ...
def ll_pdf_array_put_int(array, i, x): ...
def ll_pdf_array_put_name(array, i, x): ...
def ll_pdf_array_put_real(array, i, x): ...
def ll_pdf_array_put_string(array, i, x, n): ...
def ll_pdf_array_put_text_string(array, i, x): ...
def ll_pdf_authenticate_password(doc, pw): ...
def ll_pdf_bake_document(doc, bake_annots, bake_widgets): ...
def ll_pdf_begin_implicit_operation(doc): ...
def ll_pdf_begin_operation(doc, operation): ...
def ll_pdf_bound_annot(annot): ...
def ll_pdf_bound_page(page, box): ...
def ll_pdf_bound_widget(widget): ...
def ll_pdf_button_field_on_state(field): ...
def ll_pdf_cache_object(doc, num): ...
def ll_pdf_calculate_form(doc): ...
def ll_pdf_can_be_saved_incrementally(doc): ...
def ll_pdf_can_redo(doc): ...
def ll_pdf_can_undo(doc): ...
def ll_pdf_check_certificate(verifier, doc, signature): ...
def ll_pdf_check_digest(verifier, doc, signature): ...
def ll_pdf_check_widget_certificate(verifier, widget): ...
def ll_pdf_check_widget_digest(verifier, widget): ...
def ll_pdf_choice_field_option(field, exportval, i): ...
def ll_pdf_choice_field_option_count(field): ...
def ll_pdf_choice_widget_is_multiselect(tw): ...
def ll_pdf_choice_widget_options(tw, exportval, opts): ...
def ll_pdf_choice_widget_options2(tw, exportval): ...
def ll_pdf_choice_widget_set_value(tw, n, opts): ...
def ll_pdf_choice_widget_value(tw, opts): ...
def ll_pdf_clean_file(infile, outfile, password, opts, retainlen): ...
def ll_pdf_clean_font_name(fontname): ...
def ll_pdf_clean_obj(obj): ...
def ll_pdf_clear_annot_border_dash(annot): ...
def ll_pdf_clear_annot_ink_list(annot): ...
def ll_pdf_clear_annot_quad_points(annot): ...
def ll_pdf_clear_annot_vertices(annot): ...
def ll_pdf_clear_signature(widget): ...
def ll_pdf_clear_xref(doc): ...
def ll_pdf_clear_xref_to_mark(doc): ...
def ll_pdf_close_processor(proc): ...
def ll_pdf_cmap_size(cmap): ...
def ll_pdf_cmap_wmode(cmap): ...
def ll_pdf_copy_array(array): ...
def ll_pdf_copy_dict(dict): ...
def ll_pdf_count_document_associated_files(doc): ...
def ll_pdf_count_layer_config_ui(doc): ...
def ll_pdf_count_layer_configs(doc): ...
def ll_pdf_count_layers(doc): ...
def ll_pdf_count_objects(doc): ...
def ll_pdf_count_page_associated_files(page): ...
def ll_pdf_count_pages(doc): ...
def ll_pdf_count_pages_imp(doc, chapter): ...
def ll_pdf_count_q_balance(doc, res, stm, prepend, append): ...
def ll_pdf_count_signatures(doc): ...
def ll_pdf_count_unsaved_versions(doc): ...
def ll_pdf_count_versions(doc): ...
def ll_pdf_create_annot(page, type): ...
def ll_pdf_create_annot_raw(page, type): ...
def ll_pdf_create_document(): ...
def ll_pdf_create_field_name(doc, prefix, buf, len): ...
def ll_pdf_create_link(page, bbox, uri): ...
def ll_pdf_create_object(doc): ...
def ll_pdf_create_signature_widget(page, name): ...
def ll_pdf_crypt_encrypt_metadata(crypt): ...
def ll_pdf_crypt_key(crypt): ...
def ll_pdf_crypt_length(crypt): ...
def ll_pdf_crypt_method(crypt): ...
def ll_pdf_crypt_obj(crypt, obj, num, gen): ...
def ll_pdf_crypt_owner_encryption(crypt): ...
def ll_pdf_crypt_owner_password(crypt): ...
def ll_pdf_crypt_permissions(crypt): ...
def ll_pdf_crypt_permissions_encryption(crypt): ...
def ll_pdf_crypt_revision(crypt): ...
def ll_pdf_crypt_stream_method(crypt): ...
def ll_pdf_crypt_string_method(crypt): ...
def ll_pdf_crypt_user_encryption(crypt): ...
def ll_pdf_crypt_user_password(crypt): ...
def ll_pdf_crypt_version(crypt): ...
def ll_pdf_cycle(here, prev, obj): ...
def ll_pdf_debug_doc_changes(doc): ...
def ll_pdf_debug_obj(obj): ...
def ll_pdf_debug_ref(obj): ...
def ll_pdf_decode_cmap(cmap, s, e, cpt): ...
def ll_pdf_deep_copy_obj(obj): ...
def ll_pdf_delete_annot(page, annot): ...
def ll_pdf_delete_link(page, link): ...
def ll_pdf_delete_object(doc, num): ...
def ll_pdf_delete_page(doc, number): ...
def ll_pdf_delete_page_labels(doc, index): ...
def ll_pdf_delete_page_range(doc, start, end): ...
def ll_pdf_deselect_layer_config_ui(doc, ui): ...
def ll_pdf_deserialise_journal(doc, stm): ...
def ll_pdf_dict_del(dict, key): ...
def ll_pdf_dict_dels(dict, key): ...
def ll_pdf_dict_get(dict, key): ...
def ll_pdf_dict_get_bool(dict, key): ...
def ll_pdf_dict_get_bool_default(dict, key, _def): ...
def ll_pdf_dict_get_date(dict, key): ...
def ll_pdf_dict_get_inheritable(dict, key): ...
def ll_pdf_dict_get_inheritable_bool(dict, key): ...
def ll_pdf_dict_get_inheritable_date(dict, key): ...
def ll_pdf_dict_get_inheritable_int(dict, key): ...
def ll_pdf_dict_get_inheritable_int64(dict, key): ...
def ll_pdf_dict_get_inheritable_matrix(dict, key): ...
def ll_pdf_dict_get_inheritable_name(dict, key): ...
def ll_pdf_dict_get_inheritable_real(dict, key): ...
def ll_pdf_dict_get_inheritable_rect(dict, key): ...
def ll_pdf_dict_get_inheritable_string(dict, key, sizep): ...
def ll_pdf_dict_get_inheritable_text_string(dict, key): ...
def ll_pdf_dict_get_int(dict, key): ...
def ll_pdf_dict_get_int64(dict, key): ...
def ll_pdf_dict_get_int_default(dict, key, _def): ...
def ll_pdf_dict_get_key(dict, idx): ...
def ll_pdf_dict_get_matrix(dict, key): ...
def ll_pdf_dict_get_name(dict, key): ...
def ll_pdf_dict_get_point(dict, key): ...
def ll_pdf_dict_get_put_drop(dict, key, val, old_val): ...
def ll_pdf_dict_get_real(dict, key): ...
def ll_pdf_dict_get_real_default(dict, key, _def): ...
def ll_pdf_dict_get_rect(dict, key): ...
def ll_pdf_dict_get_string(dict, key, sizep): ...
def ll_pdf_dict_get_text_string(dict, key): ...
def ll_pdf_dict_get_text_string_opt(dict, key): ...
def ll_pdf_dict_get_val(dict, idx): ...
def ll_pdf_dict_geta(dict, key, abbrev): ...
def ll_pdf_dict_getp(dict, path): ...
def ll_pdf_dict_getp_inheritable(dict, path): ...
def ll_pdf_dict_gets(dict, key): ...
def ll_pdf_dict_gets_inheritable(dict, key): ...
def ll_pdf_dict_getsa(dict, key, abbrev): ...
def ll_pdf_dict_len(dict): ...
def ll_pdf_dict_put(dict, key, val): ...
def ll_pdf_dict_put_array(dict, key, initial): ...
def ll_pdf_dict_put_bool(dict, key, x): ...
def ll_pdf_dict_put_date(dict, key, time): ...
def ll_pdf_dict_put_dict(dict, key, initial): ...
def ll_pdf_dict_put_drop(dict, key, val): ...
def ll_pdf_dict_put_indirect(dict, key, num): ...
def ll_pdf_dict_put_int(dict, key, x): ...
def ll_pdf_dict_put_matrix(dict, key, x): ...
def ll_pdf_dict_put_name(dict, key, x): ...
def ll_pdf_dict_put_point(dict, key, x): ...
def ll_pdf_dict_put_real(dict, key, x): ...
def ll_pdf_dict_put_rect(dict, key, x): ...
def ll_pdf_dict_put_string(dict, key, x, n): ...
def ll_pdf_dict_put_text_string(dict, key, x): ...
def ll_pdf_dict_put_val_null(obj, idx): ...
def ll_pdf_dict_putp(dict, path, val): ...
def ll_pdf_dict_putp_drop(dict, path, val): ...
def ll_pdf_dict_puts(dict, key, val): ...
def ll_pdf_dict_puts_dict(dict, key, initial): ...
def ll_pdf_dict_puts_drop(dict, key, val): ...
def ll_pdf_dirty_annot(annot): ...
def ll_pdf_dirty_obj(obj): ...
def ll_pdf_disable_js(doc): ...
def ll_pdf_discard_journal(journal): ...
def ll_pdf_doc_was_linearized(doc): ...
def ll_pdf_document_associated_file(doc, idx): ...
def ll_pdf_document_event_did_print(doc): ...
def ll_pdf_document_event_did_save(doc): ...
def ll_pdf_document_event_will_close(doc): ...
def ll_pdf_document_event_will_print(doc): ...
def ll_pdf_document_event_will_save(doc): ...
def ll_pdf_document_from_fz_document(ptr): ...
def ll_pdf_document_language(doc): ...
def ll_pdf_document_output_intent(doc): ...
def ll_pdf_document_permissions(doc): ...
def ll_pdf_drop_annot(annot): ...
def ll_pdf_drop_cmap(cmap): ...
def ll_pdf_drop_cmap_imp(cmap): ...
def ll_pdf_drop_crypt(crypt): ...
def ll_pdf_drop_document(doc): ...
def ll_pdf_drop_font(font): ...
def ll_pdf_drop_function(func): ...
def ll_pdf_drop_graft_map(map): ...
def ll_pdf_drop_journal(journal): ...
def ll_pdf_drop_js(js): ...
def ll_pdf_drop_local_xref(xref): ...
def ll_pdf_drop_local_xref_and_resources(doc): ...
def ll_pdf_drop_locked_fields(locked): ...
def ll_pdf_drop_mark_bits(marks): ...
def ll_pdf_drop_obj(obj): ...
def ll_pdf_drop_ocg(doc): ...
def ll_pdf_drop_page(page): ...
def ll_pdf_drop_page_tree(doc): ...
def ll_pdf_drop_page_tree_internal(doc): ...
def ll_pdf_drop_pattern(pat): ...
def ll_pdf_drop_processor(proc): ...
def ll_pdf_drop_resource_tables(doc): ...
def ll_pdf_drop_signer(signer): ...
def ll_pdf_drop_singleton_obj(obj): ...
def ll_pdf_drop_verifier(verifier): ...
def ll_pdf_drop_widget(widget): ...
def ll_pdf_edit_text_field_value(widget, value, change, selStart, selEnd, newvalue): ...
def ll_pdf_empty_store(doc): ...
def ll_pdf_enable_journal(doc): ...
def ll_pdf_enable_js(doc): ...
def ll_pdf_enable_layer(doc, layer, enabled): ...
def ll_pdf_encrypt_data(crypt, num, gen, fmt_str_out, arg, s, n): ...
def ll_pdf_encrypted_len(crypt, num, gen, len): ...
def ll_pdf_end_hmtx(font): ...
def ll_pdf_end_operation(doc): ...
def ll_pdf_end_vmtx(font): ...
def ll_pdf_ensure_solid_xref(doc, num): ...
def ll_pdf_eval_function(func, _in, inlen, out, outlen): ...
def ll_pdf_event_issue_alert(doc, evt): ...
def ll_pdf_event_issue_exec_menu_item(doc, item): ...
def ll_pdf_event_issue_launch_url(doc, url, new_frame): ...
def ll_pdf_event_issue_mail_doc(doc, evt): ...
def ll_pdf_event_issue_print(doc): ...
def ll_pdf_field_border_style(field): ...
def ll_pdf_field_display(field): ...
def ll_pdf_field_event_calculate(doc, field): ...
def ll_pdf_field_event_format(doc, field): ...
def ll_pdf_field_event_keystroke(doc, field, evt): ...
def ll_pdf_field_event_validate(doc, field, value, newvalue): ...
def ll_pdf_field_flags(field): ...
def ll_pdf_field_label(field): ...
def ll_pdf_field_reset(doc, field): ...
def ll_pdf_field_set_border_style(field, text): ...
def ll_pdf_field_set_button_caption(field, text): ...
def ll_pdf_field_set_display(field, d): ...
def ll_pdf_field_set_fill_color(field, col): ...
def ll_pdf_field_set_text_color(field, col): ...
def ll_pdf_field_type(field): ...
def ll_pdf_field_type_string(field): ...
def ll_pdf_field_value(field): ...
def ll_pdf_filter_annot_contents(doc, annot, options): ...
def ll_pdf_filter_page_contents(doc, page, options): ...
def ll_pdf_filter_xobject_instance(old_xobj, page_res, ctm, options, cycle_up): ...
def ll_pdf_find_font_resource(doc, type, encoding, item, key): ...
def ll_pdf_find_item(drop, key): ...
def ll_pdf_find_locked_fields(doc, version): ...
def ll_pdf_find_locked_fields_for_sig(doc, sig): ...
def ll_pdf_find_version_for_obj(doc, obj): ...
def ll_pdf_first_annot(page): ...
def ll_pdf_first_widget(page): ...
def ll_pdf_flatten_inheritable_page_items(page): ...
def ll_pdf_font_cid_to_gid(fontdesc, cid): ...
def ll_pdf_font_writing_supported(font): ...
def ll_pdf_forget_xref(doc): ...
def ll_pdf_format_date(time, s, n): ...
def ll_pdf_format_write_options(buffer, buffer_len, opts): ...
def ll_pdf_function_size(func): ...
def ll_pdf_get_bound_document(obj): ...
def ll_pdf_get_doc_event_callback_data(doc): ...
def ll_pdf_get_embedded_file_params(fs, out): ...
def ll_pdf_get_filespec_params(fs, out): ...
def ll_pdf_get_incremental_xref_entry(doc, i): ...
def ll_pdf_get_indirect_document(obj): ...
def ll_pdf_get_populating_xref_entry(doc, i): ...
def ll_pdf_get_widget_editing_state(widget): ...
def ll_pdf_get_xref_entry(doc, i): ...
def ll_pdf_get_xref_entry_no_change(doc, i): ...
def ll_pdf_get_xref_entry_no_null(doc, i): ...
def ll_pdf_graft_mapped_object(map, obj): ...
def ll_pdf_graft_mapped_page(map, page_to, src, page_from): ...
def ll_pdf_graft_object(dst, obj): ...
def ll_pdf_graft_page(dst, page_to, src, page_from): ...
def ll_pdf_has_permission(doc, p): ...
def ll_pdf_has_unsaved_changes(doc): ...
def ll_pdf_has_unsaved_sigs(doc): ...
def ll_pdf_incremental_change_since_signing_widget(widget): ...
def ll_pdf_insert_font_resource(doc, key, obj): ...
def ll_pdf_insert_page(doc, at, page): ...
def ll_pdf_intent_from_name(obj): ...
def ll_pdf_intent_from_string(str): ...
def ll_pdf_invalidate_xfa(doc): ...
def ll_pdf_is_array(obj): ...
def ll_pdf_is_bool(obj): ...
def ll_pdf_is_dict(obj): ...
def ll_pdf_is_embedded_file(fs): ...
def ll_pdf_is_field_locked(locked, name): ...
def ll_pdf_is_filespec(fs): ...
def ll_pdf_is_indirect(obj): ...
def ll_pdf_is_int(obj): ...
def ll_pdf_is_jpx_image(dict): ...
def ll_pdf_is_local_object(doc, obj): ...
def ll_pdf_is_name(obj): ...
def ll_pdf_is_null(obj): ...
def ll_pdf_is_number(obj): ...
def ll_pdf_is_ocg_hidden(doc, rdb, usage, ocg): ...
def ll_pdf_is_real(obj): ...
def ll_pdf_is_stream(obj): ...
def ll_pdf_is_string(obj): ...
def ll_pdf_is_tint_colorspace(cs): ...
def ll_pdf_js_event_init(js, target, value, willCommit): ...
def ll_pdf_js_event_init_keystroke(js, target, evt): ...
def ll_pdf_js_event_result(js): ...
def ll_pdf_js_event_result_keystroke(js, evt): ...
def ll_pdf_js_event_result_validate(js, newvalue): ...
def ll_pdf_js_event_value(js): ...
def ll_pdf_js_execute(js, name, code, result): ...
def ll_pdf_js_get_console(doc): ...
def ll_pdf_js_set_console(doc, console, user): ...
def ll_pdf_js_supported(doc): ...
def ll_pdf_keep_annot(annot): ...
def ll_pdf_keep_cmap(cmap): ...
def ll_pdf_keep_document(doc): ...
def ll_pdf_keep_font(fontdesc): ...
def ll_pdf_keep_function(func): ...
def ll_pdf_keep_graft_map(map): ...
def ll_pdf_keep_obj(obj): ...
def ll_pdf_keep_page(page): ...
def ll_pdf_keep_pattern(pat): ...
def ll_pdf_keep_processor(proc): ...
def ll_pdf_keep_widget(widget): ...
def ll_pdf_layer_config_info(doc, config_num, info): ...
def ll_pdf_layer_config_ui_info(doc, ui, info): ...
def ll_pdf_layer_is_enabled(doc, layer): ...
def ll_pdf_layer_name(doc, layer): ...
def ll_pdf_layout_fit_text(font, lang, str, bounds): ...
def ll_pdf_layout_text_widget(annot): ...
def ll_pdf_lex(f, lexbuf): ...
def ll_pdf_lex_no_string(f, lexbuf): ...
def ll_pdf_lexbuf_fin(lexbuf): ...
def ll_pdf_lexbuf_grow(lexbuf): ...
def ll_pdf_lexbuf_init(lexbuf, size): ...
def ll_pdf_line_ending_from_name(end): ...
def ll_pdf_line_ending_from_string(end): ...
def ll_pdf_load_builtin_cmap(name): ...
def ll_pdf_load_cmap(file): ...
def ll_pdf_load_colorspace(obj): ...
def ll_pdf_load_compressed_inline_image(doc, dict, length, cstm, indexed, image): ...
def ll_pdf_load_compressed_stream(doc, num, worst_case): ...
def ll_pdf_load_default_colorspaces(doc, page): ...
def ll_pdf_load_embedded_cmap(doc, ref): ...
def ll_pdf_load_embedded_file_contents(fs): ...
def ll_pdf_load_encoding(estrings, encoding): ...
def ll_pdf_load_field_name(field): ...
def ll_pdf_load_field_name2(field): ...
def ll_pdf_load_font(doc, rdb, obj): ...
def ll_pdf_load_function(ref, _in, out): ...
def ll_pdf_load_hail_mary_font(doc): ...
def ll_pdf_load_image(doc, obj): ...
def ll_pdf_load_inline_image(doc, rdb, dict, file): ...
def ll_pdf_load_journal(doc, filename): ...
def ll_pdf_load_link_annots(arg_1, arg_2, annots, pagenum, page_ctm): ...
def ll_pdf_load_links(page): ...
def ll_pdf_load_name_tree(doc, which): ...
def ll_pdf_load_object(doc, num): ...
def ll_pdf_load_outline(doc): ...
def ll_pdf_load_page(doc, number): ...
def ll_pdf_load_page_imp(doc, chapter, number): ...
def ll_pdf_load_page_tree(doc): ...
def ll_pdf_load_pattern(doc, obj): ...
def ll_pdf_load_raw_stream(ref): ...
def ll_pdf_load_raw_stream_number(doc, num): ...
def ll_pdf_load_shading(doc, obj): ...
def ll_pdf_load_stream(ref): ...
def ll_pdf_load_stream_number(doc, num): ...
def ll_pdf_load_stream_or_string_as_utf8(src): ...
def ll_pdf_load_system_cmap(name): ...
def ll_pdf_load_to_unicode(doc, font, strings, collection, cmapstm): ...
def ll_pdf_load_type3_font(doc, rdb, obj): ...
def ll_pdf_load_type3_glyphs(doc, fontdesc): ...
def ll_pdf_load_unencrypted_object(doc, num): ...
def ll_pdf_lookup_cmap(cmap, cpt): ...
def ll_pdf_lookup_cmap_full(cmap, cpt, out): ...
def ll_pdf_lookup_dest(doc, needle): ...
def ll_pdf_lookup_field(form, name): ...
def ll_pdf_lookup_hmtx(font, cid): ...
def ll_pdf_lookup_metadata(doc, key, ptr, size): ...
def ll_pdf_lookup_metadata2(doc, key): ...
def ll_pdf_lookup_name(doc, which, needle): ...
def ll_pdf_lookup_number(root, needle): ...
def ll_pdf_lookup_page_loc(doc, needle, parentp, indexp): ...
def ll_pdf_lookup_page_number(doc, pageobj): ...
def ll_pdf_lookup_page_obj(doc, needle): ...
def ll_pdf_lookup_substitute_font(mono, serif, bold, italic, len): ...
def ll_pdf_lookup_vmtx(font, cid): ...
def ll_pdf_map_one_to_many(cmap, one, many, len): ...
def ll_pdf_map_range_to_range(cmap, srclo, srchi, dstlo): ...
def ll_pdf_mark_bits_reset(marks): ...
def ll_pdf_mark_bits_set(marks, obj): ...
def ll_pdf_mark_list_check(list, obj): ...
def ll_pdf_mark_list_free(list): ...
def ll_pdf_mark_list_init(list): ...
def ll_pdf_mark_list_pop(list): ...
def ll_pdf_mark_list_push(list, obj): ...
def ll_pdf_mark_obj(obj): ...
def ll_pdf_mark_xref(doc): ...
def ll_pdf_metadata(doc): ...
def ll_pdf_minimize_document(doc): ...
def ll_pdf_name_eq(a, b): ...
def ll_pdf_name_from_intent(intent): ...
def ll_pdf_name_from_line_ending(end): ...
def ll_pdf_needs_password(doc): ...
def ll_pdf_new_action_from_link(doc, uri): ...
def ll_pdf_new_array(doc, initialcap): ...
def ll_pdf_new_buffer_processor(buffer, ahxencode, newlines): ...
def ll_pdf_new_cmap(): ...
def ll_pdf_new_color_filter(doc, chain, struct_parents, transform, options, copts): ...
def ll_pdf_new_crypt(enc, id): ...
def ll_pdf_new_date(doc, time): ...
def ll_pdf_new_dest_from_link(doc, uri, is_remote): ...
def ll_pdf_new_dict(doc, initialcap): ...
def ll_pdf_new_display_list_from_annot(annot): ...
def ll_pdf_new_encrypt(opwd_utf8, upwd_utf8, id, permissions, algorithm): ...
def ll_pdf_new_font_desc(): ...
def ll_pdf_new_graft_map(dst): ...
def ll_pdf_new_identity_cmap(wmode, bytes): ...
def ll_pdf_new_indirect(doc, num, gen): ...
def ll_pdf_new_int(i): ...
def ll_pdf_new_link(page, rect, uri, obj): ...
def ll_pdf_new_local_xref(doc): ...
def ll_pdf_new_mark_bits(doc): ...
def ll_pdf_new_matrix(doc, mtx): ...
def ll_pdf_new_name(str): ...
def ll_pdf_new_outline_iterator(doc): ...
def ll_pdf_new_output_processor(out, ahxencode, newlines): ...
def ll_pdf_new_pdf_device(doc, topctm, resources, contents): ...
def ll_pdf_new_pixmap_from_annot(annot, ctm, cs, seps, alpha): ...
def ll_pdf_new_pixmap_from_page_contents_with_separations_and_usage(page, ctm, cs, seps, alpha, usage, box): ...
def ll_pdf_new_pixmap_from_page_contents_with_usage(page, ctm, cs, alpha, usage, box): ...
def ll_pdf_new_pixmap_from_page_with_separations_and_usage(page, ctm, cs, seps, alpha, usage, box): ...
def ll_pdf_new_pixmap_from_page_with_usage(page, ctm, cs, alpha, usage, box): ...
def ll_pdf_new_point(doc, point): ...
def ll_pdf_new_processor(size): ...
def ll_pdf_new_real(f): ...
def ll_pdf_new_rect(doc, rect): ...
def ll_pdf_new_run_processor(doc, dev, ctm, struct_parent, usage, gstate, default_cs, cookie): ...
def ll_pdf_new_sanitize_filter(doc, chain, struct_parents, transform, options, sopts): ...
def ll_pdf_new_stext_page_from_annot(annot, options): ...
def ll_pdf_new_string(str, len): ...
def ll_pdf_new_text_string(s): ...
def ll_pdf_new_uri_from_explicit_dest(dest): ...
def ll_pdf_new_uri_from_path_and_explicit_dest(path, dest): ...
def ll_pdf_new_uri_from_path_and_named_dest(path, name): ...
def ll_pdf_new_utf8_from_pdf_stream_obj(src): ...
def ll_pdf_new_utf8_from_pdf_string(srcptr, srclen): ...
def ll_pdf_new_utf8_from_pdf_string_obj(src): ...
def ll_pdf_new_xobject(doc, bbox, matrix, res, buffer): ...
def ll_pdf_next_annot(annot): ...
def ll_pdf_next_widget(previous): ...
def ll_pdf_nuke_annots(page): ...
def ll_pdf_nuke_links(page): ...
def ll_pdf_nuke_page(page): ...
def ll_pdf_obj_is_dirty(obj): ...
def ll_pdf_obj_is_incremental(obj): ...
def ll_pdf_obj_marked(obj): ...
def ll_pdf_obj_memo(obj, bit, memo): ...
def ll_pdf_obj_num_is_stream(doc, num): ...
def ll_pdf_obj_parent_num(obj): ...
def ll_pdf_obj_refs(ref): ...
def ll_pdf_objcmp(a, b): ...
def ll_pdf_objcmp_deep(a, b): ...
def ll_pdf_objcmp_resolve(a, b): ...
def ll_pdf_open_contents_stream(doc, obj): ...
def ll_pdf_open_crypt(chain, crypt, num, gen): ...
def ll_pdf_open_crypt_with_filter(chain, crypt, name, num, gen): ...
def ll_pdf_open_document(filename): ...
def ll_pdf_open_document_with_stream(file): ...
def ll_pdf_open_inline_stream(doc, stmobj, length, chain, params): ...
def ll_pdf_open_raw_stream(ref): ...
def ll_pdf_open_raw_stream_number(doc, num): ...
def ll_pdf_open_stream(ref): ...
def ll_pdf_open_stream_number(doc, num): ...
def ll_pdf_open_stream_with_offset(doc, num, dict, stm_ofs): ...
def ll_pdf_page_associated_file(page, idx): ...
def ll_pdf_page_contents(page): ...
def ll_pdf_page_event_close(page): ...
def ll_pdf_page_event_open(page): ...
def ll_pdf_page_from_fz_page(ptr): ...
def ll_pdf_page_group(page): ...
def ll_pdf_page_has_transparency(page): ...
def ll_pdf_page_label(doc, page, buf, size): ...
def ll_pdf_page_label_imp(doc, chapter, page, buf, size): ...
def ll_pdf_page_obj_transform(pageobj, outbox, outctm): ...
def ll_pdf_page_obj_transform_box(pageobj, outbox, out, box): ...
def ll_pdf_page_presentation(page, transition, duration): ...
def ll_pdf_page_resources(page): ...
def ll_pdf_page_separations(page): ...
def ll_pdf_page_transform(page, mediabox, ctm): ...
def ll_pdf_page_transform_box(page, mediabox, ctm, box): ...
def ll_pdf_page_write(doc, mediabox, presources, pcontents): ...
def ll_pdf_parse_array(doc, f, buf): ...
def ll_pdf_parse_date(s): ...
def ll_pdf_parse_default_appearance(da, font, size, n, color): ...
def ll_pdf_parse_default_appearance_unmapped(da, font_name, font_name_len, size, n, color): ...
def ll_pdf_parse_dict(doc, f, buf): ...
def ll_pdf_parse_ind_obj(doc, f, num, gen, stm_ofs, try_repair): ...
def ll_pdf_parse_journal_obj(doc, stm, onum, ostm, newobj): ...
def ll_pdf_parse_stm_obj(doc, f, buf): ...
def ll_pdf_parse_write_options(opts, args): ...
def ll_pdf_pin_document(obj): ...
def ll_pdf_preview_signature_as_display_list(w, h, lang, signer, appearance_flags, graphic, reason, location): ...
def ll_pdf_preview_signature_as_pixmap(w, h, lang, signer, appearance_flags, graphic, reason, location): ...
def ll_pdf_print_crypt(out, crypt): ...
def ll_pdf_print_default_appearance(buf, nbuf, font, size, n, color): ...
def ll_pdf_print_encrypted_obj(out, obj, tight, ascii, crypt, num, gen, sep): ...
def ll_pdf_print_font(out, fontdesc): ...
def ll_pdf_print_obj(out, obj, tight, ascii): ...
def ll_pdf_process_annot(proc, annot, cookie): ...
def ll_pdf_process_contents(proc, doc, res, stm, cookie, out_res): ...
def ll_pdf_process_glyph(proc, doc, resources, contents): ...
def ll_pdf_process_raw_contents(proc, doc, rdb, stmobj, cookie): ...
def ll_pdf_processor_pop_resources(proc): ...
def ll_pdf_processor_push_resources(proc, res): ...
def ll_pdf_progressive_advance(doc, pagenum): ...
def ll_pdf_purge_local_font_resources(doc): ...
def ll_pdf_purge_locals_from_store(doc): ...
def ll_pdf_purge_object_from_store(doc, num): ...
def ll_pdf_read_journal(doc, stm): ...
def ll_pdf_read_ocg(doc): ...
def ll_pdf_rearrange_pages(doc, count, pages, structure): ...
def ll_pdf_rearrange_pages2(doc, pages, structure): ...
def ll_pdf_recolor_page(doc, pagenum, opts): ...
def ll_pdf_recolor_shade(shade, reshade, opaque): ...
def ll_pdf_redact_page(doc, page, opts): ...
def ll_pdf_redo(doc): ...
def ll_pdf_remove_item(drop, key): ...
def ll_pdf_remove_output_intents(doc): ...
def ll_pdf_repair_obj(doc, buf, stmofsp, stmlenp, encrypt, id, page, tmpofs, root): ...
def ll_pdf_repair_obj_stms(doc): ...
def ll_pdf_repair_trailer(doc): ...
def ll_pdf_repair_xref(doc): ...
def ll_pdf_replace_xref(doc, entries, n): ...
def ll_pdf_reset_form(doc, fields, exclude): ...
def ll_pdf_reset_processor(proc): ...
def ll_pdf_resolve_indirect(ref): ...
def ll_pdf_resolve_indirect_chain(ref): ...
def ll_pdf_resolve_link(doc, uri, xp, yp): ...
def ll_pdf_resolve_link_dest(doc, uri): ...
def ll_pdf_rewrite_images(doc, opts): ...
def ll_pdf_run_annot(annot, dev, ctm, cookie): ...
def ll_pdf_run_document_structure(doc, dev, cookie): ...
def ll_pdf_run_glyph(doc, resources, contents, dev, ctm, gstate, default_cs): ...
def ll_pdf_run_page(page, dev, ctm, cookie): ...
def ll_pdf_run_page_annots(page, dev, ctm, cookie): ...
def ll_pdf_run_page_annots_with_usage(page, dev, ctm, usage, cookie): ...
def ll_pdf_run_page_contents(page, dev, ctm, cookie): ...
def ll_pdf_run_page_contents_with_usage(page, dev, ctm, usage, cookie): ...
def ll_pdf_run_page_widgets(page, dev, ctm, cookie): ...
def ll_pdf_run_page_widgets_with_usage(page, dev, ctm, usage, cookie): ...
def ll_pdf_run_page_with_usage(page, dev, ctm, usage, cookie): ...
def ll_pdf_sample_shade_function(samples, n, funcs, func, t0, t1): ...
def ll_pdf_save_document(doc, filename, opts): ...
def ll_pdf_save_journal(doc, filename): ...
def ll_pdf_save_snapshot(doc, filename): ...
def ll_pdf_select_layer_config(doc, config_num): ...
def ll_pdf_select_layer_config_ui(doc, ui): ...
def ll_pdf_serialise_journal(doc, out): ...
def ll_pdf_set_annot_active(annot, active): ...
def ll_pdf_set_annot_appearance(annot, appearance, state, ctm, bbox, res, contents): ...
def ll_pdf_set_annot_appearance_from_display_list(annot, appearance, state, ctm, list): ...
def ll_pdf_set_annot_author(annot, author): ...
def ll_pdf_set_annot_border(annot, width): ...
def ll_pdf_set_annot_border_effect(annot, effect): ...
def ll_pdf_set_annot_border_effect_intensity(annot, intensity): ...
def ll_pdf_set_annot_border_style(annot, style): ...
def ll_pdf_set_annot_border_width(annot, width): ...
def ll_pdf_set_annot_callout_line(annot, callout, n): ...
def ll_pdf_set_annot_callout_line2(annot, callout): ...
def ll_pdf_set_annot_callout_point(annot, p): ...
def ll_pdf_set_annot_callout_style(annot, style): ...
def ll_pdf_set_annot_color(annot, n, color): ...
def ll_pdf_set_annot_contents(annot, text): ...
def ll_pdf_set_annot_creation_date(annot, time): ...
def ll_pdf_set_annot_default_appearance(annot, font, size, n, color): ...
def ll_pdf_set_annot_field_value(doc, widget, text, ignore_trigger_events): ...
def ll_pdf_set_annot_filespec(annot, obj): ...
def ll_pdf_set_annot_flags(annot, flags): ...
def ll_pdf_set_annot_hidden_for_editing(annot, hidden): ...
def ll_pdf_set_annot_hot(annot, hot): ...
def ll_pdf_set_annot_icon_name(annot, name): ...
def ll_pdf_set_annot_ink_list(annot, n, count, v): ...
def ll_pdf_set_annot_intent(annot, it): ...
def ll_pdf_set_annot_interior_color(annot, n, color): ...
def ll_pdf_set_annot_is_open(annot, is_open): ...
def ll_pdf_set_annot_language(annot, lang): ...
def ll_pdf_set_annot_line(annot, a, b): ...
def ll_pdf_set_annot_line_caption(annot, cap): ...
def ll_pdf_set_annot_line_caption_offset(annot, offset): ...
def ll_pdf_set_annot_line_end_style(annot, e): ...
def ll_pdf_set_annot_line_ending_styles(annot, start_style, end_style): ...
def ll_pdf_set_annot_line_leader(annot, ll): ...
def ll_pdf_set_annot_line_leader_extension(annot, lle): ...
def ll_pdf_set_annot_line_leader_offset(annot, llo): ...
def ll_pdf_set_annot_line_start_style(annot, s): ...
def ll_pdf_set_annot_modification_date(annot, time): ...
def ll_pdf_set_annot_opacity(annot, opacity): ...
def ll_pdf_set_annot_popup(annot, rect): ...
def ll_pdf_set_annot_quad_points(annot, n, qv): ...
def ll_pdf_set_annot_quadding(annot, q): ...
def ll_pdf_set_annot_rect(annot, rect): ...
def ll_pdf_set_annot_resynthesised(annot): ...
def ll_pdf_set_annot_stamp_image(annot, image): ...
def ll_pdf_set_annot_vertex(annot, i, p): ...
def ll_pdf_set_annot_vertices(annot, n, v): ...
def ll_pdf_set_choice_field_value(widget, value): ...
def ll_pdf_set_cmap_wmode(cmap, wmode): ...
def ll_pdf_set_default_hmtx(font, w): ...
def ll_pdf_set_default_vmtx(font, y, w): ...
def ll_pdf_set_doc_event_callback(doc, event_cb, free_event_data_cb, data): ...
def ll_pdf_set_document_language(doc, lang): ...
def ll_pdf_set_field_value(doc, field, text, ignore_trigger_events): ...
def ll_pdf_set_font_wmode(font, wmode): ...
def ll_pdf_set_int(obj, i): ...
def ll_pdf_set_layer_config_as_default(doc): ...
def ll_pdf_set_obj_memo(obj, bit, memo): ...
def ll_pdf_set_obj_parent(obj, num): ...
def ll_pdf_set_page_box(page, box, rect): ...
def ll_pdf_set_page_labels(doc, index, style, prefix, start): ...
def ll_pdf_set_populating_xref_trailer(doc, trailer): ...
def ll_pdf_set_str_len(obj, newlen): ...
def ll_pdf_set_text_field_value(widget, value): ...
def ll_pdf_set_usecmap(cmap, usecmap): ...
def ll_pdf_set_widget_editing_state(widget, editing): ...
def ll_pdf_sign_signature(widget, signer, appearance_flags, graphic, reason, location): ...
def ll_pdf_sign_signature_with_appearance(widget, signer, date, disp_list): ...
def ll_pdf_signature_appearance_signed(rect, lang, img, left_text, right_text, include_logo): ...
def ll_pdf_signature_appearance_unsigned(rect, lang): ...
def ll_pdf_signature_byte_range(doc, signature, byte_range): ...
def ll_pdf_signature_contents(doc, signature, contents): ...
def ll_pdf_signature_drop_distinguished_name(name): ...
def ll_pdf_signature_error_description(err): ...
def ll_pdf_signature_format_distinguished_name(name): ...
def ll_pdf_signature_get_signatory(verifier, doc, signature): ...
def ll_pdf_signature_get_widget_signatory(verifier, widget): ...
def ll_pdf_signature_hash_bytes(doc, signature): ...
def ll_pdf_signature_incremental_change_since_signing(doc, signature): ...
def ll_pdf_signature_info(name, dn, reason, location, date, include_labels): ...
def ll_pdf_signature_is_signed(doc, field): ...
def ll_pdf_signature_set_value(doc, field, signer, stime): ...
def ll_pdf_sort_cmap(cmap): ...
def ll_pdf_sort_dict(dict): ...
def ll_pdf_specifics(doc): ...
def ll_pdf_sprint_obj(buf, cap, len, obj, tight, ascii): ...
def ll_pdf_store_item(key, val, itemsize): ...
def ll_pdf_string_from_annot_type(type): ...
def ll_pdf_string_from_intent(intent): ...
def ll_pdf_string_from_line_ending(end): ...
def ll_pdf_structure_type(role_map, tag): ...
def ll_pdf_subset_fonts(doc, pages_len, pages): ...
def ll_pdf_subset_fonts2(doc, pages): ...
def ll_pdf_sync_annots(page): ...
def ll_pdf_sync_links(page): ...
def ll_pdf_sync_open_pages(doc): ...
def ll_pdf_sync_page(page): ...
def ll_pdf_text_widget_format(tw): ...
def ll_pdf_text_widget_max_len(tw): ...
def ll_pdf_to_bool(obj): ...
def ll_pdf_to_bool_default(obj, _def): ...
def ll_pdf_to_date(time): ...
def ll_pdf_to_gen(obj): ...
def ll_pdf_to_int(obj): ...
def ll_pdf_to_int64(obj): ...
def ll_pdf_to_int_default(obj, _def): ...
def ll_pdf_to_matrix(array): ...
def ll_pdf_to_name(obj): ...
def ll_pdf_to_num(obj): ...
def ll_pdf_to_point(array, offset): ...
def ll_pdf_to_quad(array, offset): ...
def ll_pdf_to_real(obj): ...
def ll_pdf_to_real_default(obj, _def): ...
def ll_pdf_to_rect(array): ...
def ll_pdf_to_str_buf(obj): ...
def ll_pdf_to_str_len(obj): ...
def ll_pdf_to_string(obj, sizep): ...
def ll_pdf_to_text_string(obj): ...
def ll_pdf_toggle_layer_config_ui(doc, ui): ...
def ll_pdf_toggle_widget(widget): ...
def ll_pdf_tos_get_text(tos): ...
def ll_pdf_tos_make_trm(tos, text, fontdesc, cid, trm, adv): ...
def ll_pdf_tos_move_after_char(tos): ...
def ll_pdf_tos_newline(tos, leading): ...
def ll_pdf_tos_reset(tos, render): ...
def ll_pdf_tos_restore(tos, save): ...
def ll_pdf_tos_save(tos, save): ...
def ll_pdf_tos_set_matrix(tos, a, b, c, d, e, f): ...
def ll_pdf_tos_translate(tos, tx, ty): ...
def ll_pdf_trailer(doc): ...
def ll_pdf_undo(doc): ...
def ll_pdf_undoredo_state(doc, steps): ...
def ll_pdf_undoredo_step(doc, step): ...
def ll_pdf_unmark_obj(obj): ...
def ll_pdf_update_annot(annot): ...
def ll_pdf_update_default_colorspaces(old_cs, res): ...
def ll_pdf_update_object(doc, num, obj): ...
def ll_pdf_update_page(page): ...
def ll_pdf_update_stream(doc, ref, buf, compressed): ...
def ll_pdf_update_widget(widget): ...
def ll_pdf_update_xobject(doc, xobj, bbox, mat, res, buffer): ...
def ll_pdf_validate_change_history(doc): ...
def ll_pdf_validate_changes(doc, version): ...
def ll_pdf_validate_signature(widget): ...
def ll_pdf_verify_embedded_file_checksum(fs): ...
def ll_pdf_version(doc): ...
def ll_pdf_walk_tree(tree, kid_name, arrive, leave, arg, names, values): ...
def ll_pdf_was_pure_xfa(doc): ...
def ll_pdf_was_repaired(doc): ...
def ll_pdf_widget_is_readonly(widget): ...
def ll_pdf_widget_is_signed(widget): ...
def ll_pdf_widget_type(widget): ...
def ll_pdf_write_digest(out, byte_range, field, digest_offset, digest_length, signer): ...
def ll_pdf_write_document(doc, out, opts): ...
def ll_pdf_write_journal(doc, out): ...
def ll_pdf_write_snapshot(doc, out): ...
def ll_pdf_xobject_bbox(xobj): ...
def ll_pdf_xobject_colorspace(xobj): ...
def ll_pdf_xobject_isolated(xobj): ...
def ll_pdf_xobject_knockout(xobj): ...
def ll_pdf_xobject_matrix(xobj): ...
def ll_pdf_xobject_resources(xobj): ...
def ll_pdf_xobject_transparency(xobj): ...
def ll_pdf_xref_ensure_incremental_object(doc, num): ...
def ll_pdf_xref_ensure_local_object(doc, num): ...
def ll_pdf_xref_entry_map(doc, fn, arg): ...
def ll_pdf_xref_is_incremental(doc, num): ...
def ll_pdf_xref_len(doc): ...
def ll_pdf_xref_obj_is_unsaved_signature(doc, obj): ...
def ll_pdf_xref_remove_unsaved_signature(doc, field): ...
def ll_pdf_xref_store_unsaved_signature(doc, field, signer): ...
def ll_pdf_zugferd_profile(doc, version): ...
def ll_pdf_zugferd_profile_to_string(profile): ...
def ll_pdf_zugferd_xml(doc): ...
def to_string_fz_aa_context(s): ...
def to_string_fz_color_params(s): ...
def to_string_fz_cookie(s): ...
def to_string_fz_draw_options(s): ...
def to_string_fz_install_load_system_font_funcs_args(s): ...
def to_string_fz_irect(s): ...
def to_string_fz_location(s): ...
def to_string_fz_matrix(s): ...
def to_string_fz_md5(s): ...
def to_string_fz_outline_item(s): ...
def to_string_fz_pdfocr_options(s): ...
def to_string_fz_point(s): ...
def to_string_fz_pwg_options(s): ...
def to_string_fz_quad(s): ...
def to_string_fz_rect(s): ...
def to_string_fz_stext_options(s): ...
def to_string_fz_story_element_position(s): ...
def to_string_fz_transition(s): ...
def to_string_pdf_clean_options(s): ...
def to_string_pdf_filter_factory(s): ...
def to_string_pdf_filter_options(s): ...
def to_string_pdf_image_rewriter_options(s): ...
def to_string_pdf_layer_config(s): ...
def to_string_pdf_layer_config_ui(s): ...
def to_string_pdf_recolor_options(s): ...
def to_string_pdf_redact_options(s): ...
def to_string_pdf_sanitize_filter_options(s): ...
def to_string_pdf_write_options(s): ...
def to_string(*args): ...
def reinit_singlethreaded(): ...

class FzAaContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    hscale: Incomplete
    vscale: Incomplete
    scale: Incomplete
    bits: Incomplete
    text_bits: Incomplete
    min_line_width: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

metadata_keys: Incomplete

class FzAes:
    thisown: Incomplete
    def fz_aes_crypt_cbc(self, mode, length, iv, input, output): ...
    def fz_aes_setkey_dec(self, key, keysize): ...
    def fz_aes_setkey_enc(self, key, keysize): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzAllocContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzArc4:
    thisown: Incomplete
    def fz_arc4_encrypt(self, dest, src, len): ...
    def fz_arc4_final(self): ...
    def fz_arc4_init(self, key, len): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzArchive:
    thisown: Incomplete
    def fz_archive_format(self): ...
    def fz_count_archive_entries(self): ...
    def fz_has_archive_entry(self, name): ...
    def fz_list_archive_entry(self, idx): ...
    def fz_mount_multi_archive(self, sub, path): ...
    def fz_open_archive_entry(self, name): ...
    def fz_parse_xml_archive_entry(self, filename, preserve_white): ...
    def fz_read_archive_entry(self, name): ...
    def fz_tree_archive_add_buffer(self, name, buf): ...
    def fz_tree_archive_add_data(self, name, data, size): ...
    def fz_try_open_archive_entry(self, name): ...
    def fz_try_parse_xml_archive_entry(self, filename, preserve_white): ...
    def fz_try_read_archive_entry(self, name): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzArchiveHandler:
    thisown: Incomplete
    def fz_register_archive_handler(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzArchiveHandlerContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzBandWriter:
    thisown: Incomplete
    MONO: Incomplete
    COLOR: Incomplete
    PNG: Incomplete
    PNM: Incomplete
    PAM: Incomplete
    PBM: Incomplete
    PKM: Incomplete
    PS: Incomplete
    PSD: Incomplete
    def fz_close_band_writer(self): ...
    def fz_pdfocr_band_writer_set_progress(self, progress_fn, progress_arg): ...
    def fz_write_band(self, stride, band_height, samples): ...
    def fz_write_header(self, w, h, n, alpha, xres, yres, pagenum, cs, seps): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzBitmap:
    thisown: Incomplete
    def fz_bitmap_details(self, w, h, n, stride): ...
    def fz_clear_bitmap(self): ...
    def fz_invert_bitmap(self): ...
    def fz_save_bitmap_as_pbm(self, filename): ...
    def fz_save_bitmap_as_pcl(self, filename, append, pcl): ...
    def fz_save_bitmap_as_pkm(self, filename): ...
    def fz_save_bitmap_as_pwg(self, filename, append, pwg): ...
    def __init__(self, *args) -> None: ...
    def refs(self): ...
    def w(self): ...
    def h(self): ...
    def stride(self): ...
    def n(self): ...
    def xres(self): ...
    def yres(self): ...
    def samples(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzBuffer:
    thisown: Incomplete
    @staticmethod
    def fz_new_buffer_from_copied_data(data, size): ...
    @staticmethod
    def fz_new_buffer_from_image_as_pnm(image, color_params): ...
    @staticmethod
    def fz_new_buffer_from_image_as_pam(image, color_params): ...
    @staticmethod
    def fz_new_buffer_from_image_as_psd(image, color_params): ...
    @staticmethod
    def fz_new_buffer_from_pixmap_as_pnm(pixmap, color_params): ...
    @staticmethod
    def fz_new_buffer_from_pixmap_as_pam(pixmap, color_params): ...
    @staticmethod
    def fz_new_buffer_from_pixmap_as_psd(pix, color_params): ...
    def fz_append_base64(self, data, size, newline): ...
    def fz_append_base64_buffer(self, data, newline): ...
    def fz_append_bits(self, value, count): ...
    def fz_append_bits_pad(self): ...
    def fz_append_buffer(self, source): ...
    def fz_append_byte(self, c): ...
    def fz_append_data(self, data, len): ...
    def fz_append_image_as_data_uri(self, image): ...
    def fz_append_int16_be(self, x): ...
    def fz_append_int16_le(self, x): ...
    def fz_append_int32_be(self, x): ...
    def fz_append_int32_le(self, x): ...
    def fz_append_pdf_string(self, text): ...
    def fz_append_pixmap_as_data_uri(self, pixmap): ...
    def fz_append_rune(self, c): ...
    def fz_append_string(self, data): ...
    def fz_buffer_extract(self, data): ...
    def fz_buffer_storage(self, datap): ...
    def fz_clear_buffer(self): ...
    def fz_clone_buffer(self): ...
    def fz_grow_buffer(self): ...
    def fz_load_jbig2_globals(self): ...
    def fz_md5_buffer(self, digest): ...
    def fz_new_display_list_from_svg(self, base_uri, dir, w, h): ...
    def fz_new_image_from_buffer(self): ...
    def fz_new_image_from_svg(self, base_uri, dir): ...
    def fz_open_buffer(self): ...
    def fz_parse_xml(self, preserve_white): ...
    def fz_parse_xml_from_html5(self): ...
    def fz_resize_buffer(self, capacity): ...
    def fz_save_buffer(self, filename): ...
    def fz_slice_buffer(self, start, end): ...
    def fz_string_from_buffer(self): ...
    def fz_subset_cff_for_gids(self, gids, num_gids, symbolic, cidfont): ...
    def fz_subset_ttf_for_gids(self, gids, num_gids, symbolic, cidfont): ...
    def fz_terminate_buffer(self): ...
    def fz_trim_buffer(self): ...
    def pdf_append_token(self, tok, lex): ...
    def pdf_new_buffer_processor(self, ahxencode, newlines): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzColorParams:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    ri: Incomplete
    bp: Incomplete
    op: Incomplete
    opm: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzColorspace:
    thisown: Incomplete
    Fixed_GRAY: Incomplete
    Fixed_RGB: Incomplete
    Fixed_BGR: Incomplete
    Fixed_CMYK: Incomplete
    Fixed_LAB: Incomplete
    def fz_base_colorspace(self): ...
    def fz_clamp_color(self, _in, out): ...
    def fz_colorspace_colorant(self, n): ...
    def fz_colorspace_device_n_has_cmyk(self): ...
    def fz_colorspace_device_n_has_only_cmyk(self): ...
    def fz_colorspace_is_cmyk(self): ...
    def fz_colorspace_is_device(self): ...
    def fz_colorspace_is_device_cmyk(self): ...
    def fz_colorspace_is_device_gray(self): ...
    def fz_colorspace_is_device_n(self): ...
    def fz_colorspace_is_gray(self): ...
    def fz_colorspace_is_indexed(self): ...
    def fz_colorspace_is_lab(self): ...
    def fz_colorspace_is_lab_icc(self): ...
    def fz_colorspace_is_rgb(self): ...
    def fz_colorspace_is_subtractive(self): ...
    def fz_colorspace_n(self): ...
    def fz_colorspace_name(self): ...
    def fz_colorspace_name_colorant(self, n, name): ...
    def fz_colorspace_type(self): ...
    def fz_convert_color(self, sv, ds, dv, _is, params): ...
    def fz_convert_separation_colors(self, src_color, dst_seps, dst_cs, dst_color, color_params): ...
    def fz_is_valid_blend_colorspace(self): ...
    def fz_new_indexed_colorspace(self, high, lookup): ...
    def fz_new_pixmap(self, w, h, seps, alpha): ...
    def fz_new_pixmap_with_bbox(self, bbox, seps, alpha): ...
    def fz_new_pixmap_with_bbox_and_data(self, rect, seps, alpha, samples): ...
    def fz_new_pixmap_with_data(self, w, h, seps, alpha, stride, samples): ...
    def pdf_is_tint_colorspace(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzColorspaceContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzCompressedBuffer:
    thisown: Incomplete
    def fz_compressed_buffer_size(self): ...
    def fz_open_compressed_buffer(self): ...
    def fz_open_image_decomp_stream_from_buffer(self, l2factor): ...
    def get_buffer(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzCompressedImage:
    thisown: Incomplete
    def fz_set_compressed_image_buffer(self, buf): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzCompressionParams:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzCookie:
    thisown: Incomplete
    def __init__(self) -> None: ...
    def set_abort(self): ...
    def increment_errors(self, delta): ...
    def abort(self): ...
    def progress(self): ...
    def progress_max(self): ...
    def errors(self): ...
    def incomplete(self): ...
    __swig_destroy__: Incomplete
    m_internal: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzDefaultColorspaces:
    thisown: Incomplete
    def fz_clone_default_colorspaces(self): ...
    def fz_default_cmyk(self): ...
    def fz_default_gray(self): ...
    def fz_default_output_intent(self): ...
    def fz_default_rgb(self): ...
    def fz_set_default_cmyk(self, cs): ...
    def fz_set_default_gray(self, cs): ...
    def fz_set_default_output_intent(self, cs): ...
    def fz_set_default_rgb(self, cs): ...
    def pdf_update_default_colorspaces(self, res): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDevice:
    thisown: Incomplete
    @staticmethod
    def fz_new_xmltext_device(out): ...
    @staticmethod
    def fz_new_draw_device_type3(transform, dest): ...
    def fz_begin_group(self, area, cs, isolated, knockout, blendmode, alpha): ...
    def fz_begin_layer(self, layer_name): ...
    def fz_begin_mask(self, area, luminosity, colorspace, bc, color_params): ...
    def fz_begin_metatext(self, meta, text): ...
    def fz_begin_structure(self, standard, raw, idx): ...
    def fz_begin_tile(self, area, view, xstep, ystep, ctm): ...
    def fz_begin_tile_id(self, area, view, xstep, ystep, ctm, id): ...
    def fz_clip_image_mask(self, image, ctm, scissor): ...
    def fz_clip_path(self, path, even_odd, ctm, scissor): ...
    def fz_clip_stroke_path(self, path, stroke, ctm, scissor): ...
    def fz_clip_stroke_text(self, text, stroke, ctm, scissor): ...
    def fz_clip_text(self, text, ctm, scissor): ...
    def fz_close_device(self): ...
    def fz_device_current_scissor(self): ...
    def fz_disable_device_hints(self, hints): ...
    def fz_enable_device_hints(self, hints): ...
    def fz_end_group(self): ...
    def fz_end_layer(self): ...
    def fz_end_mask(self): ...
    def fz_end_mask_tr(self, fn): ...
    def fz_end_metatext(self): ...
    def fz_end_structure(self): ...
    def fz_end_tile(self): ...
    def fz_fill_image(self, image, ctm, alpha, color_params): ...
    def fz_fill_image_mask(self, image, ctm, colorspace, color, alpha, color_params): ...
    def fz_fill_path(self, path, even_odd, ctm, colorspace, color, alpha, color_params): ...
    def fz_fill_shade(self, shade, ctm, alpha, color_params): ...
    def fz_fill_text(self, text, ctm, colorspace, color, alpha, color_params): ...
    def fz_ignore_text(self, text, ctm): ...
    def fz_new_ocr_device(self, ctm, mediabox, with_list, language, datadir, progress, progress_arg): ...
    def fz_pop_clip(self): ...
    def fz_render_flags(self, set, clear): ...
    def fz_render_t3_glyph_direct(self, font, gid, trm, gstate, def_cs): ...
    def fz_set_default_colorspaces(self, default_cs): ...
    def fz_stroke_path(self, path, stroke, ctm, colorspace, color, alpha, color_params): ...
    def fz_stroke_text(self, text, stroke, ctm, colorspace, color, alpha, color_params): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDevice2(FzDevice):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_close_device(self, use: bool = True): ...
    def use_virtual_drop_device(self, use: bool = True): ...
    def use_virtual_fill_path(self, use: bool = True): ...
    def use_virtual_stroke_path(self, use: bool = True): ...
    def use_virtual_clip_path(self, use: bool = True): ...
    def use_virtual_clip_stroke_path(self, use: bool = True): ...
    def use_virtual_fill_text(self, use: bool = True): ...
    def use_virtual_stroke_text(self, use: bool = True): ...
    def use_virtual_clip_text(self, use: bool = True): ...
    def use_virtual_clip_stroke_text(self, use: bool = True): ...
    def use_virtual_ignore_text(self, use: bool = True): ...
    def use_virtual_fill_shade(self, use: bool = True): ...
    def use_virtual_fill_image(self, use: bool = True): ...
    def use_virtual_fill_image_mask(self, use: bool = True): ...
    def use_virtual_clip_image_mask(self, use: bool = True): ...
    def use_virtual_pop_clip(self, use: bool = True): ...
    def use_virtual_begin_mask(self, use: bool = True): ...
    def use_virtual_end_mask(self, use: bool = True): ...
    def use_virtual_begin_group(self, use: bool = True): ...
    def use_virtual_end_group(self, use: bool = True): ...
    def use_virtual_begin_tile(self, use: bool = True): ...
    def use_virtual_end_tile(self, use: bool = True): ...
    def use_virtual_render_flags(self, use: bool = True): ...
    def use_virtual_set_default_colorspaces(self, use: bool = True): ...
    def use_virtual_begin_layer(self, use: bool = True): ...
    def use_virtual_end_layer(self, use: bool = True): ...
    def use_virtual_begin_structure(self, use: bool = True): ...
    def use_virtual_end_structure(self, use: bool = True): ...
    def use_virtual_begin_metatext(self, use: bool = True): ...
    def use_virtual_end_metatext(self, use: bool = True): ...
    def close_device(self, arg_0): ...
    def drop_device(self, arg_0): ...
    def fill_path(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8): ...
    def stroke_path(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8): ...
    def clip_path(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def clip_stroke_path(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def fill_text(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def stroke_text(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8): ...
    def clip_text(self, arg_0, arg_2, arg_3, arg_4): ...
    def clip_stroke_text(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def ignore_text(self, arg_0, arg_2, arg_3): ...
    def fill_shade(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def fill_image(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def fill_image_mask(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def clip_image_mask(self, arg_0, arg_2, arg_3, arg_4): ...
    def pop_clip(self, arg_0): ...
    def begin_mask(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6): ...
    def end_mask(self, arg_0, arg_2): ...
    def begin_group(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def end_group(self, arg_0): ...
    def begin_tile(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def end_tile(self, arg_0): ...
    def render_flags(self, arg_0, arg_2, arg_3): ...
    def set_default_colorspaces(self, arg_0, arg_2): ...
    def begin_layer(self, arg_0, arg_2): ...
    def end_layer(self, arg_0): ...
    def begin_structure(self, arg_0, arg_2, arg_3, arg_4): ...
    def end_structure(self, arg_0): ...
    def begin_metatext(self, arg_0, arg_2, arg_3): ...
    def end_metatext(self, arg_0): ...
    def __disown__(self): ...

class FzDeviceContainerStack:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDisplayList:
    thisown: Incomplete
    @staticmethod
    def fz_new_display_list_from_page_contents(page): ...
    def fz_bound_display_list(self): ...
    def fz_display_list_is_empty(self): ...
    def fz_fill_pixmap_from_display_list(self, ctm, pix): ...
    def fz_new_buffer_from_display_list(self, options): ...
    def fz_new_list_device(self): ...
    def fz_new_pixmap_from_display_list(self, ctm, cs, alpha): ...
    def fz_new_pixmap_from_display_list_with_separations(self, ctm, cs, seps, alpha): ...
    def fz_run_display_list(self, dev, ctm, scissor, cookie): ...
    def fz_search_display_list(self, needle, hit_mark, hit_bbox, hit_max): ...
    def fz_search_display_list_cb(self, needle, cb, opaque): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDocument:
    thisown: Incomplete
    def fz_authenticate_password(self, password): ...
    def fz_clamp_location(self, loc): ...
    def fz_count_chapter_pages(self, chapter): ...
    def fz_count_chapters(self): ...
    def fz_count_pages(self): ...
    def fz_document_output_intent(self): ...
    def fz_document_supports_accelerator(self): ...
    def fz_format_link_uri(self, dest): ...
    def fz_has_permission(self, p): ...
    def fz_is_document_reflowable(self): ...
    def fz_last_page(self): ...
    def fz_layout_document(self, w, h, em): ...
    def fz_load_chapter_page(self, chapter, page): ...
    def fz_load_outline(self): ...
    def fz_load_page(self, number): ...
    def fz_location_from_page_number(self, number): ...
    def fz_lookup_bookmark(self, mark): ...
    def fz_lookup_metadata(self, key, buf, size): ...
    def fz_lookup_metadata2(self, key): ...
    def fz_needs_password(self): ...
    def fz_new_buffer_from_page_number(self, number, options): ...
    def fz_new_display_list_from_page_number(self, number): ...
    def fz_new_pdf_document_from_fz_document(self): ...
    def fz_new_pixmap_from_page_number(self, number, ctm, cs, alpha): ...
    def fz_new_pixmap_from_page_number_with_separations(self, number, ctm, cs, seps, alpha): ...
    def fz_new_xhtml_document_from_document(self, *args): ...
    def fz_next_page(self, loc): ...
    def fz_open_reflowed_document(self, opts): ...
    def fz_output_accelerator(self, accel): ...
    def fz_page_number_from_location(self, loc): ...
    def fz_previous_page(self, loc): ...
    def fz_process_opened_pages(self, process_openend_page, state): ...
    def fz_resolve_link(self, uri, xp, yp): ...
    def fz_run_document_structure(self, dev, cookie): ...
    def fz_save_accelerator(self, accel): ...
    def fz_search_chapter_page_number(self, chapter, page, needle, hit_mark, hit_bbox, hit_max): ...
    def fz_search_chapter_page_number_cb(self, chapter, page, needle, cb, opaque): ...
    def fz_search_page2(self, number, needle, hit_max): ...
    def fz_search_page_number(self, number, needle, hit_mark, hit_bbox, hit_max): ...
    def fz_search_page_number_cb(self, number, needle, cb, opaque): ...
    def fz_set_metadata(self, key, value): ...
    def pdf_count_pages_imp(self, chapter): ...
    def pdf_document_from_fz_document(self): ...
    def pdf_load_page_imp(self, chapter, number): ...
    def pdf_page_label_imp(self, chapter, page, buf, size): ...
    def pdf_specifics(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDocumentHandler:
    thisown: Incomplete
    def fz_document_handler_open(self, stream, accel, dir, recognize_state): ...
    def fz_document_handler_recognize(self, magic): ...
    def fz_register_document_handler(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDocumentHandlerContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDocumentWriter:
    thisown: Incomplete
    PathType_CBZ: Incomplete
    PathType_DOCX: Incomplete
    PathType_ODT: Incomplete
    PathType_PAM_PIXMAP: Incomplete
    PathType_PBM_PIXMAP: Incomplete
    PathType_PCL: Incomplete
    PathType_PCLM: Incomplete
    PathType_PDF: Incomplete
    PathType_PDFOCR: Incomplete
    PathType_PGM_PIXMAP: Incomplete
    PathType_PKM_PIXMAP: Incomplete
    PathType_PNG_PIXMAP: Incomplete
    PathType_PNM_PIXMAP: Incomplete
    PathType_PPM_PIXMAP: Incomplete
    PathType_PS: Incomplete
    PathType_PWG: Incomplete
    PathType_SVG: Incomplete
    OutputType_CBZ: Incomplete
    OutputType_DOCX: Incomplete
    OutputType_ODT: Incomplete
    OutputType_PCL: Incomplete
    OutputType_PCLM: Incomplete
    OutputType_PDF: Incomplete
    OutputType_PDFOCR: Incomplete
    OutputType_PS: Incomplete
    OutputType_PWG: Incomplete
    FormatPathType_DOCUMENT: Incomplete
    FormatPathType_TEXT: Incomplete
    def fz_begin_page(self, mediabox): ...
    def fz_close_document_writer(self): ...
    def fz_end_page(self): ...
    def fz_pdfocr_writer_set_progress(self, progress, arg_2): ...
    def fz_write_document(self, doc): ...
    def fz_write_stabilized_story(self, user_css, em, contentfn, contentfn_ref, rectfn, rectfn_ref, pagefn, pagefn_ref, dir): ...
    def fz_write_story(self, story, rectfn, rectfn_ref, positionfn, positionfn_ref, pagefn, pagefn_ref): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzDrawOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    rotate: Incomplete
    x_resolution: Incomplete
    y_resolution: Incomplete
    width: Incomplete
    height: Incomplete
    colorspace: Incomplete
    alpha: Incomplete
    graphics: Incomplete
    text: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzErrorContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzErrorStackSlot:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzFont:
    thisown: Incomplete
    def fz_advance_glyph(self, glyph, wmode): ...
    def fz_bound_glyph(self, gid, trm): ...
    def fz_decouple_type3_font(self, t3doc): ...
    def fz_encode_character(self, unicode): ...
    def fz_encode_character_by_glyph_name(self, glyphname): ...
    def fz_encode_character_sc(self, unicode): ...
    def fz_encode_character_with_fallback(self, unicode, script, language, out_font): ...
    def fz_enumerate_font_cmap(self, cb, opaque): ...
    def fz_enumerate_font_cmap2(self): ...
    def fz_extract_ttf_from_ttc(self): ...
    def fz_font_ascender(self): ...
    def fz_font_bbox(self): ...
    def fz_font_descender(self): ...
    def fz_font_digest(self, digest): ...
    def fz_font_ft_face(self): ...
    def fz_font_is_bold(self): ...
    def fz_font_is_italic(self): ...
    def fz_font_is_monospaced(self): ...
    def fz_font_is_serif(self): ...
    def fz_font_name(self): ...
    def fz_font_t3_procs(self): ...
    def fz_get_glyph_name(self, glyph, buf, size): ...
    def fz_get_glyph_name2(self, glyph): ...
    def fz_glyph_cacheable(self, gid): ...
    def fz_measure_string(self, trm, s, wmode, bidi_level, markup_dir, language): ...
    def fz_outline_glyph(self, gid, ctm): ...
    def fz_prepare_t3_glyph(self, gid): ...
    def fz_render_glyph_pixmap(self, gid, ctm, scissor, aa): ...
    def fz_run_t3_glyph(self, gid, trm, dev): ...
    def fz_set_font_bbox(self, xmin, ymin, xmax, ymax): ...
    def fz_set_font_embedding(self, embed): ...
    def pdf_font_writing_supported(self): ...
    def pdf_layout_fit_text(self, lang, str, bounds): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzFontContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzFontFlagsT:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzFunction:
    thisown: Incomplete
    def fz_eval_function(self, _in, inlen, out, outlen): ...
    def fz_function_size(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzGetoptLongOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzGlyph:
    thisown: Incomplete
    def fz_glyph_bbox(self): ...
    def fz_glyph_bbox_no_ctx(self): ...
    def fz_glyph_height(self): ...
    def fz_glyph_width(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzGlyphCache:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzHalftone:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzHashTable:
    thisown: Incomplete
    def fz_hash_filter(self, state, callback): ...
    def fz_hash_find(self, key): ...
    def fz_hash_for_each(self, state, callback): ...
    def fz_hash_insert(self, key, val): ...
    def fz_hash_remove(self, key): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzIccProfile:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzImage:
    thisown: Incomplete
    def fz_compressed_image_buffer(self): ...
    def fz_compressed_image_type(self): ...
    def fz_get_pixmap_from_image(self, subarea, ctm, w, h): ...
    def fz_get_unscaled_pixmap_from_image(self): ...
    def fz_image_orientation(self): ...
    def fz_image_orientation_matrix(self): ...
    def fz_image_resolution(self, xres, yres): ...
    def fz_image_size(self): ...
    def fz_new_buffer_from_image_as_jpeg(self, color_params, quality, invert_cmyk): ...
    def fz_new_buffer_from_image_as_jpx(self, color_params, quality): ...
    def fz_new_buffer_from_image_as_pam(self, color_params): ...
    def fz_new_buffer_from_image_as_png(self, color_params): ...
    def fz_new_buffer_from_image_as_pnm(self, color_params): ...
    def fz_new_buffer_from_image_as_psd(self, color_params): ...
    def __init__(self, *args) -> None: ...
    def key_storable(self): ...
    def w(self): ...
    def h(self): ...
    def n(self): ...
    def bpc(self): ...
    def imagemask(self): ...
    def interpolate(self): ...
    def use_colorkey(self): ...
    def use_decode(self): ...
    def decoded(self): ...
    def scalable(self): ...
    def orientation(self): ...
    def mask(self): ...
    def xres(self): ...
    def yres(self): ...
    def colorspace(self): ...
    def colorkey(self): ...
    def decode(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzInstallLoadSystemFontFuncsArgs:
    thisown: Incomplete
    def fz_install_load_system_font_funcs2(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    m_internal: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzInstallLoadSystemFontFuncsArgs2(FzInstallLoadSystemFontFuncsArgs):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_f(self, use: bool = True): ...
    def use_virtual_f_cjk(self, use: bool = True): ...
    def use_virtual_f_fallback(self, use: bool = True): ...
    def f(self, arg_0, arg_1, arg_2, arg_3, arg_4): ...
    def f_cjk(self, arg_0, arg_1, arg_2, arg_3): ...
    def f_fallback(self, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5): ...
    def __disown__(self): ...

class FzInt2:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzInt2Heap:
    thisown: Incomplete
    def fz_int2_heap_insert(self, v): ...
    def fz_int2_heap_sort(self): ...
    def fz_int2_heap_uniq(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzIntHeap:
    thisown: Incomplete
    def fz_int_heap_insert(self, v): ...
    def fz_int_heap_sort(self): ...
    def fz_int_heap_uniq(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzIntptr:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzIntptrHeap:
    thisown: Incomplete
    def fz_intptr_heap_insert(self, v): ...
    def fz_intptr_heap_sort(self): ...
    def fz_intptr_heap_uniq(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzIrect:
    thisown: Incomplete
    def fz_expand_irect(self, expand): ...
    def fz_intersect_irect(self, b): ...
    def fz_irect_height(self): ...
    def fz_irect_width(self): ...
    def fz_is_empty_irect(self): ...
    def fz_is_infinite_irect(self): ...
    def fz_is_valid_irect(self): ...
    def fz_rect_from_irect(self): ...
    def fz_translate_irect(self, xoff, yoff): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    x0: Incomplete
    y0: Incomplete
    x1: Incomplete
    y1: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzJbig2Globals:
    thisown: Incomplete
    def fz_jbig2_globals_data(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzKeyStorable:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLayoutBlock:
    thisown: Incomplete
    def fz_add_layout_char(self, x, w, p): ...
    def fz_add_layout_line(self, x, y, h, p): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLayoutChar:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLayoutLine:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLink:
    thisown: Incomplete
    def fz_set_link_rect(self, rect): ...
    def fz_set_link_uri(self, uri): ...
    def begin(self): ...
    def end(self): ...
    def __init__(self, *args) -> None: ...
    def refs(self): ...
    def next(self): ...
    def rect(self): ...
    def uri(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLinkDest:
    thisown: Incomplete
    def pdf_new_uri_from_explicit_dest(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzLocation:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    chapter: Incomplete
    page: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzLocksContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzMatrix:
    thisown: Incomplete
    @staticmethod
    def fz_scale(sx, sy): ...
    @staticmethod
    def fz_shear(sx, sy): ...
    @staticmethod
    def fz_rotate(degrees): ...
    @staticmethod
    def fz_translate(tx, ty): ...
    @staticmethod
    def fz_transform_page(mediabox, resolution, rotate): ...
    def fz_concat(self, *args): ...
    def fz_invert_matrix(self): ...
    def fz_is_identity(self): ...
    def fz_is_rectilinear(self): ...
    def fz_matrix_expansion(self): ...
    def fz_matrix_max_expansion(self): ...
    def fz_post_scale(self, sx, sy): ...
    def fz_pre_rotate(self, degrees): ...
    def fz_pre_scale(self, sx, sy): ...
    def fz_pre_shear(self, sx, sy): ...
    def fz_pre_translate(self, tx, ty): ...
    def fz_subpixel_adjust(self, subpix_ctm, qe, qf): ...
    def fz_try_invert_matrix(self, src): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    a: Incomplete
    b: Incomplete
    c: Incomplete
    d: Incomplete
    e: Incomplete
    f: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzMd5:
    thisown: Incomplete
    def fz_md5_final(self, digest): ...
    def fz_md5_final2(self): ...
    def fz_md5_init(self): ...
    def fz_md5_update(self, input, inlen): ...
    def fz_md5_update_int64(self, i): ...
    def __init__(self, *args) -> None: ...
    def lo(self): ...
    def hi(self): ...
    def a(self): ...
    def b(self): ...
    def c(self): ...
    def d(self): ...
    def buffer(self): ...
    __swig_destroy__: Incomplete
    m_internal: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzOutline:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def refs(self): ...
    def title(self): ...
    def uri(self): ...
    def page(self): ...
    def x(self): ...
    def y(self): ...
    def next(self): ...
    def down(self): ...
    def is_open(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzOutlineItem:
    thisown: Incomplete
    def valid(self): ...
    def title(self): ...
    def uri(self): ...
    def is_open(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    s_num_instances: Incomplete

class FzOutlineIterator:
    thisown: Incomplete
    def fz_load_outline_from_iterator(self): ...
    def fz_outline_iterator_delete(self): ...
    def fz_outline_iterator_down(self): ...
    def fz_outline_iterator_item(self): ...
    def fz_outline_iterator_next(self): ...
    def fz_outline_iterator_prev(self): ...
    def fz_outline_iterator_up(self): ...
    def fz_outline_iterator_insert(self, item): ...
    def fz_outline_iterator_update(self, item): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzOutput:
    thisown: Incomplete
    Fixed_STDOUT: Incomplete
    Fixed_STDERR: Incomplete
    Filter_HEX: Incomplete
    Filter_85: Incomplete
    Filter_RLE: Incomplete
    def fz_close_output(self): ...
    def fz_debug_store(self): ...
    def fz_dump_glyph_cache_stats(self): ...
    def fz_flush_output(self): ...
    def fz_new_svg_device(self, page_width, page_height, text_format, reuse_images): ...
    def fz_new_svg_device_with_id(self, page_width, page_height, text_format, reuse_images, id): ...
    def fz_new_trace_device(self): ...
    def fz_new_xmltext_device(self): ...
    def fz_output_supports_stream(self): ...
    def fz_output_xml(self, item, level): ...
    def fz_print_stext_header_as_html(self): ...
    def fz_print_stext_header_as_xhtml(self): ...
    def fz_print_stext_page_as_html(self, page, id): ...
    def fz_print_stext_page_as_json(self, page, scale): ...
    def fz_print_stext_page_as_text(self, page): ...
    def fz_print_stext_page_as_xhtml(self, page, id): ...
    def fz_print_stext_page_as_xml(self, page, id): ...
    def fz_print_stext_trailer_as_html(self): ...
    def fz_print_stext_trailer_as_xhtml(self): ...
    def fz_reset_output(self): ...
    def fz_seek_output(self, off, whence): ...
    def fz_set_stddbg(self): ...
    def fz_stream_from_output(self): ...
    def fz_tell_output(self): ...
    def fz_truncate_output(self): ...
    def fz_write_base64(self, data, size, newline): ...
    def fz_write_base64_buffer(self, data, newline): ...
    def fz_write_bitmap_as_pbm(self, bitmap): ...
    def fz_write_bitmap_as_pcl(self, bitmap, pcl): ...
    def fz_write_bitmap_as_pkm(self, bitmap): ...
    def fz_write_bitmap_as_pwg(self, bitmap, pwg): ...
    def fz_write_bitmap_as_pwg_page(self, bitmap, pwg): ...
    def fz_write_bits(self, data, num_bits): ...
    def fz_write_bits_sync(self): ...
    def fz_write_buffer(self, data): ...
    def fz_write_byte(self, x): ...
    def fz_write_char(self, x): ...
    def fz_write_data(self, data, size): ...
    def fz_write_float_be(self, f): ...
    def fz_write_float_le(self, f): ...
    def fz_write_image_as_data_uri(self, image): ...
    def fz_write_int16_be(self, x): ...
    def fz_write_int16_le(self, x): ...
    def fz_write_int32_be(self, x): ...
    def fz_write_int32_le(self, x): ...
    def fz_write_pixmap_as_data_uri(self, pixmap): ...
    def fz_write_pixmap_as_jpeg(self, pix, quality, invert_cmyk): ...
    def fz_write_pixmap_as_jpx(self, pix, quality): ...
    def fz_write_pixmap_as_pam(self, pixmap): ...
    def fz_write_pixmap_as_pcl(self, pixmap, pcl): ...
    def fz_write_pixmap_as_pclm(self, pixmap, options): ...
    def fz_write_pixmap_as_pdfocr(self, pixmap, options): ...
    def fz_write_pixmap_as_png(self, pixmap): ...
    def fz_write_pixmap_as_pnm(self, pixmap): ...
    def fz_write_pixmap_as_ps(self, pixmap): ...
    def fz_write_pixmap_as_psd(self, pixmap): ...
    def fz_write_pixmap_as_pwg(self, pixmap, pwg): ...
    def fz_write_pixmap_as_pwg_page(self, pixmap, pwg): ...
    def fz_write_ps_file_header(self): ...
    def fz_write_ps_file_trailer(self, pages): ...
    def fz_write_pwg_file_header(self): ...
    def fz_write_rune(self, rune): ...
    def fz_write_stream(self, _in): ...
    def fz_write_string(self, s): ...
    def fz_write_uint16_be(self, x): ...
    def fz_write_uint16_le(self, x): ...
    def fz_write_uint32_be(self, x): ...
    def fz_write_uint32_le(self, x): ...
    def pdf_new_output_processor(self, ahxencode, newlines): ...
    def pdf_print_crypt(self, crypt): ...
    def pdf_print_encrypted_obj(self, obj, tight, ascii, crypt, num, gen, sep): ...
    def pdf_print_font(self, fontdesc): ...
    def pdf_print_obj(self, obj, tight, ascii): ...
    def pdf_write_digest(self, byte_range, field, digest_offset, digest_length, signer): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzOutput2(FzOutput):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_write(self, use: bool = True): ...
    def use_virtual_seek(self, use: bool = True): ...
    def use_virtual_tell(self, use: bool = True): ...
    def use_virtual_close(self, use: bool = True): ...
    def use_virtual_drop(self, use: bool = True): ...
    def use_virtual_reset(self, use: bool = True): ...
    def use_virtual_as_stream(self, use: bool = True): ...
    def use_virtual_truncate(self, use: bool = True): ...
    def write(self, arg_0, arg_2, arg_3): ...
    def seek(self, arg_0, arg_2, arg_3): ...
    def tell(self, arg_0): ...
    def close(self, arg_0): ...
    def drop(self, arg_0): ...
    def reset(self, arg_0): ...
    def as_stream(self, arg_0): ...
    def truncate(self, arg_0): ...
    def __disown__(self): ...

class FzOverprint:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPage:
    thisown: Incomplete
    def fz_bound_page(self): ...
    def fz_bound_page_box(self, box): ...
    def fz_create_link(self, bbox, uri): ...
    def fz_delete_link(self, link): ...
    def fz_load_links(self): ...
    def fz_new_buffer_from_page(self, options): ...
    def fz_new_buffer_from_page_with_format(self, format, options, transform, cookie): ...
    def fz_new_display_list_from_page(self): ...
    def fz_new_display_list_from_page_contents(self): ...
    def fz_new_pixmap_from_page(self, ctm, cs, alpha): ...
    def fz_new_pixmap_from_page_contents(self, ctm, cs, alpha): ...
    def fz_new_pixmap_from_page_contents_with_separations(self, ctm, cs, seps, alpha): ...
    def fz_new_pixmap_from_page_with_separations(self, ctm, cs, seps, alpha): ...
    def fz_page_label(self, buf, size): ...
    def fz_page_presentation(self, transition, duration): ...
    def fz_page_separations(self): ...
    def fz_page_uses_overprint(self): ...
    def fz_run_page(self, dev, transform, cookie): ...
    def fz_run_page_annots(self, dev, transform, cookie): ...
    def fz_run_page_contents(self, dev, transform, cookie): ...
    def fz_run_page_widgets(self, dev, transform, cookie): ...
    def fz_search_page(self, needle, hit_mark, hit_bbox, hit_max): ...
    def fz_search_page_cb(self, needle, cb, opaque): ...
    def pdf_page_from_fz_page(self): ...
    def doc(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPath:
    thisown: Incomplete
    def fz_bound_path(self, stroke, ctm): ...
    def fz_clone_path(self): ...
    def fz_closepath(self): ...
    def fz_currentpoint(self): ...
    def fz_curveto(self, x0, y0, x1, y1, x2, y2): ...
    def fz_curvetov(self, x1, y1, x2, y2): ...
    def fz_curvetoy(self, x0, y0, x2, y2): ...
    def fz_lineto(self, x, y): ...
    def fz_moveto(self, x, y): ...
    def fz_packed_path_size(self): ...
    def fz_quadto(self, x0, y0, x1, y1): ...
    def fz_rectto(self, x0, y0, x1, y1): ...
    def fz_transform_path(self, transform): ...
    def fz_trim_path(self): ...
    def fz_walk_path(self, walker, arg): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPathWalker:
    thisown: Incomplete
    def __init__(self, internal: Incomplete | None = None) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPathWalker2(FzPathWalker):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_moveto(self, use: bool = True): ...
    def use_virtual_lineto(self, use: bool = True): ...
    def use_virtual_curveto(self, use: bool = True): ...
    def use_virtual_closepath(self, use: bool = True): ...
    def use_virtual_quadto(self, use: bool = True): ...
    def use_virtual_curvetov(self, use: bool = True): ...
    def use_virtual_curvetoy(self, use: bool = True): ...
    def use_virtual_rectto(self, use: bool = True): ...
    def moveto(self, arg_0, arg_2, arg_3): ...
    def lineto(self, arg_0, arg_2, arg_3): ...
    def curveto(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def closepath(self, arg_0): ...
    def quadto(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def curvetov(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def curvetoy(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def rectto(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def __disown__(self): ...

class FzPclOptions:
    thisown: Incomplete
    def fz_pcl_preset(self, preset): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPclmOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPdfocrOptions:
    thisown: Incomplete
    def fz_parse_pdfocr_options(self, args): ...
    def language_set2(self, language): ...
    def datadir_set2(self, datadir): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    compress: Incomplete
    strip_height: Incomplete
    language: Incomplete
    datadir: Incomplete
    skew_correct: Incomplete
    skew_angle: Incomplete
    skew_border: Incomplete
    page_count: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzPixmap:
    thisown: Incomplete
    @staticmethod
    def pdf_new_pixmap_from_page_with_usage(page, ctm, cs, alpha, usage, box): ...
    @staticmethod
    def pdf_new_pixmap_from_page_with_separations_and_usage(page, ctm, cs, seps, alpha, usage, box): ...
    @staticmethod
    def fz_new_pixmap_from_page_contents(page, ctm, cs, alpha): ...
    @staticmethod
    def fz_new_pixmap_from_page_contents_with_separations(page, ctm, cs, seps, alpha): ...
    def fz_alpha_from_gray(self): ...
    def fz_clear_pixmap(self): ...
    def fz_clear_pixmap_rect_with_value(self, value, r): ...
    def fz_clear_pixmap_with_value(self, value): ...
    def fz_clone_pixmap(self): ...
    def fz_clone_pixmap_area_with_different_seps(self, bbox, dcs, seps, color_params, default_cs): ...
    def fz_convert_indexed_pixmap_to_base(self): ...
    def fz_convert_pixmap(self, cs_des, prf, default_cs, color_params, keep_alpha): ...
    def fz_convert_separation_pixmap_to_base(self): ...
    def fz_copy_pixmap_rect(self, src, r, default_cs): ...
    def fz_decode_tile(self, decode): ...
    def fz_deskew_pixmap(self, degrees, border): ...
    def fz_fill_pixmap_with_color(self, colorspace, color, color_params): ...
    def fz_gamma_pixmap(self, gamma): ...
    def fz_generate_transition(self, opix, npix, time, trans): ...
    def fz_invert_pixmap(self): ...
    def fz_invert_pixmap_alpha(self): ...
    def fz_invert_pixmap_luminance(self): ...
    def fz_invert_pixmap_raw(self): ...
    def fz_invert_pixmap_rect(self, rect): ...
    def fz_is_pixmap_monochrome(self): ...
    def fz_md5_pixmap(self, digest): ...
    def fz_md5_pixmap2(self): ...
    def fz_new_bitmap_from_pixmap(self, ht): ...
    def fz_new_bitmap_from_pixmap_band(self, ht, band_start): ...
    def fz_new_buffer_from_pixmap_as_jpeg(self, color_params, quality, invert_cmyk): ...
    def fz_new_buffer_from_pixmap_as_jpx(self, color_params, quality): ...
    def fz_new_buffer_from_pixmap_as_pam(self, color_params): ...
    def fz_new_buffer_from_pixmap_as_png(self, color_params): ...
    def fz_new_buffer_from_pixmap_as_pnm(self, color_params): ...
    def fz_new_buffer_from_pixmap_as_psd(self, color_params): ...
    def fz_new_image_from_pixmap(self, mask): ...
    def fz_new_pixmap_from_alpha_channel(self): ...
    def fz_new_pixmap_from_color_and_mask(self, mask): ...
    def fz_new_pixmap_from_pixmap(self, rect): ...
    def fz_pixmap_alpha(self): ...
    def fz_pixmap_bbox(self): ...
    def fz_pixmap_colorants(self): ...
    def fz_pixmap_colorspace(self): ...
    def fz_pixmap_components(self): ...
    def fz_pixmap_height(self): ...
    def fz_pixmap_samples(self): ...
    def fz_pixmap_samples_int(self): ...
    def fz_pixmap_size(self): ...
    def fz_pixmap_spots(self): ...
    def fz_pixmap_stride(self): ...
    def fz_pixmap_width(self): ...
    def fz_pixmap_x(self): ...
    def fz_pixmap_y(self): ...
    def fz_samples_get(self, offset): ...
    def fz_samples_set(self, offset, value): ...
    def fz_save_pixmap_as_jpeg(self, filename, quality): ...
    def fz_save_pixmap_as_jpx(self, filename, q): ...
    def fz_save_pixmap_as_pam(self, filename): ...
    def fz_save_pixmap_as_pbm(self, filename): ...
    def fz_save_pixmap_as_pcl(self, filename, append, pcl): ...
    def fz_save_pixmap_as_pclm(self, filename, append, options): ...
    def fz_save_pixmap_as_pdfocr(self, filename, append, options): ...
    def fz_save_pixmap_as_pkm(self, filename): ...
    def fz_save_pixmap_as_png(self, filename): ...
    def fz_save_pixmap_as_pnm(self, filename): ...
    def fz_save_pixmap_as_ps(self, filename, append): ...
    def fz_save_pixmap_as_psd(self, filename): ...
    def fz_save_pixmap_as_pwg(self, filename, append, pwg): ...
    def fz_scale_pixmap(self, x, y, w, h, clip): ...
    def fz_set_pixmap_resolution(self, xres, yres): ...
    def fz_skew_detect(self): ...
    def fz_subsample_pixmap(self, factor): ...
    def fz_tint_pixmap(self, black, white): ...
    def __init__(self, *args) -> None: ...
    def storable(self): ...
    def x(self): ...
    def y(self): ...
    def w(self): ...
    def h(self): ...
    def n(self): ...
    def s(self): ...
    def alpha(self): ...
    def flags(self): ...
    def stride(self): ...
    def seps(self): ...
    def xres(self): ...
    def yres(self): ...
    def colorspace(self): ...
    def samples(self): ...
    def underlying(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPixmapImage:
    thisown: Incomplete
    def fz_pixmap_image_tile(self): ...
    def fz_set_pixmap_image_tile(self, pix): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPoint:
    thisown: Incomplete
    @staticmethod
    def fz_transform_point_xy(x, y, m): ...
    def fz_detect_document(self, src): ...
    def fz_is_point_inside_quad(self, q): ...
    def fz_is_point_inside_rect(self, r): ...
    def fz_normalize_vector(self): ...
    def fz_transform_point(self, *args): ...
    def fz_transform_vector(self, *args): ...
    def transform(self, m): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    x: Incomplete
    y: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzPool:
    thisown: Incomplete
    def fz_pool_alloc(self, size): ...
    def fz_pool_size(self): ...
    def fz_pool_strdup(self, s): ...
    def fz_xml_add_att(self, node, key, val): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPtrHeap:
    thisown: Incomplete
    def fz_ptr_heap_insert(self, v, HEAP_CMP): ...
    def fz_ptr_heap_sort(self, HEAP_CMP): ...
    def fz_ptr_heap_uniq(self, HEAP_CMP): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzPwgOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def media_class(self): ...
    def media_color(self): ...
    def media_type(self): ...
    def output_type(self): ...
    def advance_distance(self): ...
    def advance_media(self): ...
    def collate(self): ...
    def cut_media(self): ...
    def duplex(self): ...
    def insert_sheet(self): ...
    def jog(self): ...
    def leading_edge(self): ...
    def manual_feed(self): ...
    def media_position(self): ...
    def media_weight(self): ...
    def mirror_print(self): ...
    def negative_print(self): ...
    def num_copies(self): ...
    def orientation(self): ...
    def output_face_up(self): ...
    def PageSize(self): ...
    def separations(self): ...
    def tray_switch(self): ...
    def tumble(self): ...
    def media_type_num(self): ...
    def compression(self): ...
    def row_count(self): ...
    def row_feed(self): ...
    def row_step(self): ...
    def rendering_intent(self): ...
    def page_size_name(self): ...
    __swig_destroy__: Incomplete
    m_internal: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzQuad:
    thisown: Incomplete
    def fz_is_empty_quad(self): ...
    def fz_is_infinite_quad(self): ...
    def fz_is_quad_inside_quad(self, haystack): ...
    def fz_is_quad_intersecting_quad(self, b): ...
    def fz_is_valid_quad(self): ...
    def fz_rect_from_quad(self): ...
    def fz_transform_quad(self, m): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    ul: Incomplete
    ur: Incomplete
    ll: Incomplete
    lr: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzRange:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzRect:
    thisown: Incomplete
    Fixed_UNIT: Incomplete
    Fixed_EMPTY: Incomplete
    Fixed_INFINITE: Incomplete
    def fz_adjust_rect_for_stroke(self, stroke, ctm): ...
    def fz_contains_rect(self, b): ...
    def fz_expand_rect(self, expand): ...
    def fz_include_point_in_rect(self, p): ...
    def fz_intersect_rect(self, *args): ...
    def fz_irect_from_rect(self): ...
    def fz_is_empty_rect(self): ...
    def fz_is_infinite_rect(self): ...
    def fz_is_valid_rect(self): ...
    def fz_new_bbox_device(self): ...
    def fz_new_display_list(self): ...
    def fz_quad_from_rect(self): ...
    def fz_round_rect(self): ...
    def fz_transform_page(self, resolution, rotate): ...
    def fz_transform_rect(self, m): ...
    def fz_translate_rect(self, xoff, yoff): ...
    def fz_union_rect(self, *args): ...
    def pdf_signature_appearance_signed(self, lang, img, left_text, right_text, include_logo): ...
    def pdf_signature_appearance_unsigned(self, lang): ...
    def transform(self, m): ...
    def contains(self, *args): ...
    def is_empty(self): ...
    def union_(self, rhs): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    x0: Incomplete
    y0: Incomplete
    x1: Incomplete
    y1: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzSeparations:
    thisown: Incomplete
    def fz_add_separation(self, name, cs, cs_channel): ...
    def fz_add_separation_equivalents(self, rgba, cmyk, name): ...
    def fz_clone_separations_for_overprint(self): ...
    def fz_compare_separations(self, sep2): ...
    def fz_count_active_separations(self): ...
    def fz_count_separations(self): ...
    def fz_separation_equivalent(self, idx, dst_cs, dst_color, prf, color_params): ...
    def fz_separation_name(self, separation): ...
    def fz_set_separation_behavior(self, separation, behavior): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzSha256:
    thisown: Incomplete
    def fz_sha256_final(self, digest): ...
    def fz_sha256_init(self): ...
    def fz_sha256_update(self, input, inlen): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzSha384:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzSha512:
    thisown: Incomplete
    def fz_sha384_final(self, digest): ...
    def fz_sha384_init(self): ...
    def fz_sha384_update(self, input, inlen): ...
    def fz_sha512_final(self, digest): ...
    def fz_sha512_init(self): ...
    def fz_sha512_update(self, input, inlen): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzShade:
    thisown: Incomplete
    def fz_bound_shade(self, ctm): ...
    def fz_paint_shade(self, override_cs, ctm, dest, color_params, bbox, eop, cache): ...
    def fz_process_shade(self, ctm, scissor, prepare, process, process_arg): ...
    def fz_paint_shade_no_cache(self, override_cs, ctm, dest, color_params, bbox, eop): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzShadeColorCache:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzShaperDataT:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextBlock:
    thisown: Incomplete
    def i_transform(self): ...
    def i_image(self): ...
    def begin(self): ...
    def end(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextChar:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextGridPositions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextLine:
    thisown: Incomplete
    def begin(self): ...
    def end(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextOptions:
    thisown: Incomplete
    def fz_parse_stext_options(self, string): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    flags: Incomplete
    scale: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzStextPage:
    thisown: Incomplete
    def fz_highlight_selection(self, a, b, quads, max_quads): ...
    def fz_highlight_selection2(self, a, b, max_quads): ...
    def fz_new_buffer_from_stext_page(self): ...
    def fz_new_stext_device(self, options): ...
    def fz_search_stext_page(self, needle, hit_mark, hit_bbox, hit_max): ...
    def fz_search_stext_page_cb(self, needle, cb, opaque): ...
    def fz_segment_stext_page(self): ...
    def fz_snap_selection(self, ap, bp, mode): ...
    def fz_copy_selection(self, a, b, crlf): ...
    def fz_copy_rectangle(self, area, crlf): ...
    def search_stext_page(self, needle, hit_mark, max_quads): ...
    def begin(self): ...
    def end(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextStruct:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStorable:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStore:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStoreHash:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStoreType:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStory:
    thisown: Incomplete
    def fz_draw_story(self, dev, ctm): ...
    def fz_place_story(self, where, filled): ...
    def fz_place_story_flags(self, where, filled, flags): ...
    def fz_reset_story(self): ...
    def fz_story_document(self): ...
    def fz_story_positions(self, cb, arg): ...
    def fz_story_warnings(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStoryElementPosition:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    depth: Incomplete
    heading: Incomplete
    id: Incomplete
    href: Incomplete
    rect: Incomplete
    text: Incomplete
    open_close: Incomplete
    rectangle_num: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzStream:
    thisown: Incomplete
    @staticmethod
    def fz_open_file_autodelete(filename): ...
    def fz_available(self, max): ...
    def fz_decomp_image_from_stream(self, image, subarea, indexed, l2factor, l2extra): ...
    def fz_is_cfb_archive(self): ...
    def fz_is_eof(self): ...
    def fz_is_eof_bits(self): ...
    def fz_is_libarchive_archive(self): ...
    def fz_is_tar_archive(self): ...
    def fz_is_zip_archive(self): ...
    def fz_new_archive_of_size(self, size): ...
    def fz_open_a85d(self): ...
    def fz_open_aesd(self, key, keylen): ...
    def fz_open_ahxd(self): ...
    def fz_open_arc4(self, key, keylen): ...
    def fz_open_archive_with_stream(self): ...
    def fz_open_cfb_archive_with_stream(self): ...
    def fz_open_dctd(self, color_transform, invert_cmyk, l2factor, jpegtables): ...
    def fz_open_endstream_filter(self, len, offset): ...
    def fz_open_faxd(self, k, end_of_line, encoded_byte_align, columns, rows, end_of_block, black_is_1): ...
    def fz_open_flated(self, window_bits): ...
    def fz_open_image_decomp_stream(self, arg_1, l2factor): ...
    def fz_open_jbig2d(self, globals, embedded): ...
    def fz_open_leecher(self, buf): ...
    def fz_open_libarchive_archive_with_stream(self): ...
    def fz_open_libarchived(self): ...
    def fz_open_lzwd(self, early_change, min_bits, reverse_bits, old_tiff): ...
    def fz_open_null_filter(self, len, offset): ...
    def fz_open_predict(self, predictor, columns, colors, bpc): ...
    def fz_open_range_filter(self, ranges, nranges): ...
    def fz_open_rld(self): ...
    def fz_open_sgilog16(self, w): ...
    def fz_open_sgilog24(self, w): ...
    def fz_open_sgilog32(self, w): ...
    def fz_open_tar_archive_with_stream(self): ...
    def fz_open_thunder(self, w): ...
    def fz_open_zip_archive_with_stream(self): ...
    def fz_parse_xml_stream(self, preserve_white): ...
    def fz_peek_byte(self): ...
    def fz_read(self, data, len): ...
    def fz_read_all(self, initial): ...
    def fz_read_best(self, initial, truncated, worst_case): ...
    def fz_read_bits(self, n): ...
    def fz_read_byte(self): ...
    def fz_read_float(self): ...
    def fz_read_float_le(self): ...
    def fz_read_int16(self): ...
    def fz_read_int16_le(self): ...
    def fz_read_int32(self): ...
    def fz_read_int32_le(self): ...
    def fz_read_int64(self): ...
    def fz_read_int64_le(self): ...
    def fz_read_line(self, buf, max): ...
    def fz_read_rbits(self, n): ...
    def fz_read_rune(self): ...
    def fz_read_string(self, buffer, len): ...
    def fz_read_uint16(self): ...
    def fz_read_uint16_le(self): ...
    def fz_read_uint24(self): ...
    def fz_read_uint24_le(self): ...
    def fz_read_uint32(self): ...
    def fz_read_uint32_le(self): ...
    def fz_read_uint64(self): ...
    def fz_read_uint64_le(self): ...
    def fz_read_utf16_be(self): ...
    def fz_read_utf16_le(self): ...
    def fz_seek(self, offset, whence): ...
    def fz_skip(self, len): ...
    def fz_skip_space(self): ...
    def fz_skip_string(self, str): ...
    def fz_stream_filename(self): ...
    def fz_sync_bits(self): ...
    def fz_tell(self): ...
    def fz_try_open_archive_with_stream(self): ...
    def fz_unpack_stream(self, depth, w, h, n, indexed, pad, skip): ...
    def fz_unread_byte(self): ...
    def pdf_load_cmap(self): ...
    def pdf_open_crypt(self, crypt, num, gen): ...
    def pdf_open_crypt_with_filter(self, crypt, name, num, gen): ...
    def pdf_open_document_with_stream(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzString:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStrokeState:
    thisown: Incomplete
    def fz_clone_stroke_state(self): ...
    def fz_unshare_stroke_state(self): ...
    def fz_unshare_stroke_state_with_dash_len(self, len): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStyleContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzText:
    thisown: Incomplete
    def fz_bound_text(self, stroke, ctm): ...
    def fz_show_glyph(self, font, trm, glyph, unicode, wmode, bidi_level, markup_dir, language): ...
    def fz_show_glyph_aux(self, font, trm, adv, glyph, unicode, cid, wmode, bidi_level, markup_dir, lang): ...
    def fz_show_string(self, font, trm, s, wmode, bidi_level, markup_dir, language): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzTextDecoder:
    thisown: Incomplete
    def fz_init_text_decoder(self, encoding): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzTextItem:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzTextSpan:
    thisown: Incomplete
    def font(self): ...
    def trm(self): ...
    def items(self, i): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzTransition:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    type: Incomplete
    duration: Incomplete
    vertical: Incomplete
    outwards: Incomplete
    direction: Incomplete
    state0: Incomplete
    state1: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class FzTree:
    thisown: Incomplete
    def fz_new_tree_archive(self): ...
    def fz_tree_lookup(self, key): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzTuningContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzVertex:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzWarnContext:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzWriteStoryPosition:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzWriteStoryPositions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzXml:
    thisown: Incomplete
    def fz_debug_xml(self, level): ...
    def fz_detach_xml(self): ...
    def fz_dom_add_attribute(self, att, value): ...
    def fz_dom_append_child(self, child): ...
    def fz_dom_attribute(self, att): ...
    def fz_dom_body(self): ...
    def fz_dom_clone(self): ...
    def fz_dom_create_element(self, tag): ...
    def fz_dom_create_text_node(self, text): ...
    def fz_dom_document_element(self): ...
    def fz_dom_find(self, tag, att, match): ...
    def fz_dom_find_next(self, tag, att, match): ...
    def fz_dom_first_child(self): ...
    def fz_dom_get_attribute(self, i, att): ...
    def fz_dom_insert_after(self, new_elt): ...
    def fz_dom_insert_before(self, new_elt): ...
    def fz_dom_next(self): ...
    def fz_dom_parent(self): ...
    def fz_dom_previous(self): ...
    def fz_dom_remove(self): ...
    def fz_dom_remove_attribute(self, att): ...
    def fz_new_display_list_from_svg_xml(self, xml, base_uri, dir, w, h): ...
    def fz_new_dom_node(self, tag): ...
    def fz_new_dom_text_node(self, *args): ...
    def fz_new_image_from_svg_xml(self, xml, base_uri, dir): ...
    def fz_save_xml(self, path, indented): ...
    def fz_write_xml(self, out, indented): ...
    def fz_xml_att(self, att): ...
    def fz_xml_att_alt(self, one, two): ...
    def fz_xml_att_eq(self, name, match): ...
    def fz_xml_down(self): ...
    def fz_xml_find(self, tag): ...
    def fz_xml_find_dfs(self, tag, att, match): ...
    def fz_xml_find_dfs_top(self, tag, att, match, top): ...
    def fz_xml_find_down(self, tag): ...
    def fz_xml_find_down_match(self, tag, att, match): ...
    def fz_xml_find_match(self, tag, att, match): ...
    def fz_xml_find_next(self, tag): ...
    def fz_xml_find_next_dfs(self, tag, att, match): ...
    def fz_xml_find_next_dfs_top(self, tag, att, match, top): ...
    def fz_xml_find_next_match(self, tag, att, match): ...
    def fz_xml_is_tag(self, name): ...
    def fz_xml_next(self): ...
    def fz_xml_prev(self): ...
    def fz_xml_root(self): ...
    def fz_xml_tag(self): ...
    def fz_xml_text(self): ...
    def fz_xml_up(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzXmlDoc:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzZipWriter:
    thisown: Incomplete
    def fz_close_zip_writer(self): ...
    def fz_write_zip_entry(self, name, buf, compress): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfAlertEvent:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfAnnot:
    thisown: Incomplete
    def pdf_add_annot_border_dash_item(self, length): ...
    def pdf_add_annot_ink_list_stroke(self): ...
    def pdf_add_annot_ink_list_stroke_vertex(self, p): ...
    def pdf_add_annot_quad_point(self, quad): ...
    def pdf_add_annot_vertex(self, p): ...
    def pdf_annot_MK_BC(self, n, color): ...
    def pdf_annot_MK_BC_rgb(self, rgb): ...
    def pdf_annot_MK_BG(self, n, color): ...
    def pdf_annot_MK_BG_rgb(self, rgb): ...
    def pdf_annot_active(self): ...
    def pdf_annot_ap(self): ...
    def pdf_annot_author(self): ...
    def pdf_annot_border(self): ...
    def pdf_annot_border_dash_count(self): ...
    def pdf_annot_border_dash_item(self, i): ...
    def pdf_annot_border_effect(self): ...
    def pdf_annot_border_effect_intensity(self): ...
    def pdf_annot_border_style(self): ...
    def pdf_annot_border_width(self): ...
    def pdf_annot_callout_point(self): ...
    def pdf_annot_callout_style(self): ...
    def pdf_annot_color(self, n, color): ...
    def pdf_annot_contents(self): ...
    def pdf_annot_creation_date(self): ...
    def pdf_annot_default_appearance(self, font, size, n, color): ...
    def pdf_annot_default_appearance_unmapped(self, font_name, font_name_len, size, n, color): ...
    def pdf_annot_ensure_local_xref(self): ...
    def pdf_annot_event_blur(self): ...
    def pdf_annot_event_down(self): ...
    def pdf_annot_event_enter(self): ...
    def pdf_annot_event_exit(self): ...
    def pdf_annot_event_focus(self): ...
    def pdf_annot_event_page_close(self): ...
    def pdf_annot_event_page_invisible(self): ...
    def pdf_annot_event_page_open(self): ...
    def pdf_annot_event_page_visible(self): ...
    def pdf_annot_event_up(self): ...
    def pdf_annot_field_flags(self): ...
    def pdf_annot_field_label(self): ...
    def pdf_annot_field_value(self): ...
    def pdf_annot_filespec(self): ...
    def pdf_annot_flags(self): ...
    def pdf_annot_has_author(self): ...
    def pdf_annot_has_border(self): ...
    def pdf_annot_has_border_effect(self): ...
    def pdf_annot_has_callout(self): ...
    def pdf_annot_has_filespec(self): ...
    def pdf_annot_has_icon_name(self): ...
    def pdf_annot_has_ink_list(self): ...
    def pdf_annot_has_intent(self): ...
    def pdf_annot_has_interior_color(self): ...
    def pdf_annot_has_line(self): ...
    def pdf_annot_has_line_ending_styles(self): ...
    def pdf_annot_has_open(self): ...
    def pdf_annot_has_popup(self): ...
    def pdf_annot_has_quad_points(self): ...
    def pdf_annot_has_quadding(self): ...
    def pdf_annot_has_rect(self): ...
    def pdf_annot_has_vertices(self): ...
    def pdf_annot_hidden_for_editing(self): ...
    def pdf_annot_hot(self): ...
    def pdf_annot_icon_name(self): ...
    def pdf_annot_ink_list_count(self): ...
    def pdf_annot_ink_list_stroke_count(self, i): ...
    def pdf_annot_ink_list_stroke_vertex(self, i, k): ...
    def pdf_annot_intent(self): ...
    def pdf_annot_interior_color(self, n, color): ...
    def pdf_annot_is_open(self): ...
    def pdf_annot_is_standard_stamp(self): ...
    def pdf_annot_line(self, a, b): ...
    def pdf_annot_line_caption(self): ...
    def pdf_annot_line_caption_offset(self): ...
    def pdf_annot_line_end_style(self): ...
    def pdf_annot_line_ending_styles(self, start_style, end_style): ...
    def pdf_annot_line_leader(self): ...
    def pdf_annot_line_leader_extension(self): ...
    def pdf_annot_line_leader_offset(self): ...
    def pdf_annot_line_start_style(self): ...
    def pdf_annot_modification_date(self): ...
    def pdf_annot_needs_resynthesis(self): ...
    def pdf_annot_obj(self): ...
    def pdf_annot_opacity(self): ...
    def pdf_annot_page(self): ...
    def pdf_annot_pop_and_discard_local_xref(self): ...
    def pdf_annot_pop_local_xref(self): ...
    def pdf_annot_popup(self): ...
    def pdf_annot_push_local_xref(self): ...
    def pdf_annot_quad_point(self, i): ...
    def pdf_annot_quad_point_count(self): ...
    def pdf_annot_quadding(self): ...
    def pdf_annot_rect(self): ...
    def pdf_annot_request_resynthesis(self): ...
    def pdf_annot_request_synthesis(self): ...
    def pdf_annot_transform(self): ...
    def pdf_annot_type(self): ...
    def pdf_annot_vertex(self, i): ...
    def pdf_annot_vertex_count(self): ...
    def pdf_apply_redaction(self, opts): ...
    def pdf_bound_annot(self): ...
    def pdf_bound_widget(self): ...
    def pdf_choice_widget_is_multiselect(self): ...
    def pdf_choice_widget_options(self, exportval, opts): ...
    def pdf_choice_widget_options2(self, exportval): ...
    def pdf_choice_widget_set_value(self, n, opts): ...
    def pdf_choice_widget_value(self, opts): ...
    def pdf_clear_annot_border_dash(self): ...
    def pdf_clear_annot_ink_list(self): ...
    def pdf_clear_annot_quad_points(self): ...
    def pdf_clear_annot_vertices(self): ...
    def pdf_clear_signature(self): ...
    def pdf_dirty_annot(self): ...
    def pdf_edit_text_field_value(self, value, change, selStart, selEnd, newvalue): ...
    def pdf_get_widget_editing_state(self): ...
    def pdf_incremental_change_since_signing_widget(self): ...
    def pdf_new_display_list_from_annot(self): ...
    def pdf_new_pixmap_from_annot(self, ctm, cs, seps, alpha): ...
    def pdf_next_annot(self): ...
    def pdf_next_widget(self): ...
    def pdf_run_annot(self, dev, ctm, cookie): ...
    def pdf_set_annot_active(self, active): ...
    def pdf_set_annot_appearance(self, appearance, state, ctm, bbox, res, contents): ...
    def pdf_set_annot_appearance_from_display_list(self, appearance, state, ctm, list): ...
    def pdf_set_annot_author(self, author): ...
    def pdf_set_annot_border(self, width): ...
    def pdf_set_annot_border_effect(self, effect): ...
    def pdf_set_annot_border_effect_intensity(self, intensity): ...
    def pdf_set_annot_border_style(self, style): ...
    def pdf_set_annot_border_width(self, width): ...
    def pdf_set_annot_callout_line2(self, callout): ...
    def pdf_set_annot_callout_point(self, p): ...
    def pdf_set_annot_callout_style(self, style): ...
    def pdf_set_annot_color(self, n, color): ...
    def pdf_set_annot_contents(self, text): ...
    def pdf_set_annot_creation_date(self, time): ...
    def pdf_set_annot_default_appearance(self, font, size, n, color): ...
    def pdf_set_annot_filespec(self, obj): ...
    def pdf_set_annot_flags(self, flags): ...
    def pdf_set_annot_hidden_for_editing(self, hidden): ...
    def pdf_set_annot_hot(self, hot): ...
    def pdf_set_annot_icon_name(self, name): ...
    def pdf_set_annot_ink_list(self, n, count, v): ...
    def pdf_set_annot_intent(self, it): ...
    def pdf_set_annot_interior_color(self, n, color): ...
    def pdf_set_annot_is_open(self, is_open): ...
    def pdf_set_annot_language(self, lang): ...
    def pdf_set_annot_line(self, a, b): ...
    def pdf_set_annot_line_caption(self, cap): ...
    def pdf_set_annot_line_caption_offset(self, offset): ...
    def pdf_set_annot_line_end_style(self, e): ...
    def pdf_set_annot_line_ending_styles(self, start_style, end_style): ...
    def pdf_set_annot_line_leader(self, ll): ...
    def pdf_set_annot_line_leader_extension(self, lle): ...
    def pdf_set_annot_line_leader_offset(self, llo): ...
    def pdf_set_annot_line_start_style(self, s): ...
    def pdf_set_annot_modification_date(self, time): ...
    def pdf_set_annot_opacity(self, opacity): ...
    def pdf_set_annot_popup(self, rect): ...
    def pdf_set_annot_quad_points(self, n, qv): ...
    def pdf_set_annot_quadding(self, q): ...
    def pdf_set_annot_rect(self, rect): ...
    def pdf_set_annot_resynthesised(self): ...
    def pdf_set_annot_stamp_image(self, image): ...
    def pdf_set_annot_vertex(self, i, p): ...
    def pdf_set_annot_vertices(self, n, v): ...
    def pdf_set_choice_field_value(self, value): ...
    def pdf_set_text_field_value(self, value): ...
    def pdf_set_widget_editing_state(self, editing): ...
    def pdf_sign_signature(self, signer, appearance_flags, graphic, reason, location): ...
    def pdf_sign_signature_with_appearance(self, signer, date, disp_list): ...
    def pdf_text_widget_format(self): ...
    def pdf_text_widget_max_len(self): ...
    def pdf_toggle_widget(self): ...
    def pdf_update_annot(self): ...
    def pdf_update_widget(self): ...
    def pdf_validate_signature(self): ...
    def pdf_widget_is_readonly(self): ...
    def pdf_widget_is_signed(self): ...
    def pdf_widget_type(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfCleanOptions:
    thisown: Incomplete
    def write_opwd_utf8_set(self, text): ...
    def write_upwd_utf8_set(self, text): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    write: Incomplete
    image: Incomplete
    subset_fonts: Incomplete
    structure: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfCmap:
    thisown: Incomplete
    def pdf_add_codespace(self, low, high, n): ...
    def pdf_cmap_size(self): ...
    def pdf_cmap_wmode(self): ...
    def pdf_decode_cmap(self, s, e, cpt): ...
    def pdf_lookup_cmap(self, cpt): ...
    def pdf_lookup_cmap_full(self, cpt, out): ...
    def pdf_map_one_to_many(self, one, many, len): ...
    def pdf_map_range_to_range(self, srclo, srchi, dstlo): ...
    def pdf_set_cmap_wmode(self, wmode): ...
    def pdf_set_usecmap(self, usecmap): ...
    def pdf_sort_cmap(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfColorFilterOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfCrypt:
    thisown: Incomplete
    def pdf_crypt_encrypt_metadata(self): ...
    def pdf_crypt_key(self): ...
    def pdf_crypt_length(self): ...
    def pdf_crypt_method(self): ...
    def pdf_crypt_obj(self, obj, num, gen): ...
    def pdf_crypt_owner_encryption(self): ...
    def pdf_crypt_owner_password(self): ...
    def pdf_crypt_permissions(self): ...
    def pdf_crypt_permissions_encryption(self): ...
    def pdf_crypt_revision(self): ...
    def pdf_crypt_stream_method(self): ...
    def pdf_crypt_string_method(self): ...
    def pdf_crypt_user_encryption(self): ...
    def pdf_crypt_user_password(self): ...
    def pdf_crypt_version(self): ...
    def pdf_encrypt_data(self, num, gen, fmt_str_out, arg, s, n): ...
    def pdf_encrypted_len(self, num, gen, len): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfCsi:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfCycleList:
    thisown: Incomplete
    def pdf_cycle(self, prev, obj): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfDocEvent:
    thisown: Incomplete
    def pdf_access_exec_menu_item_event(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfDocument:
    thisown: Incomplete
    def pdf_abandon_operation(self): ...
    def pdf_add_cid_font(self, font): ...
    def pdf_add_cjk_font(self, font, script, wmode, serif): ...
    def pdf_add_embedded_file(self, filename, mimetype, contents, created, modifed, add_checksum): ...
    def pdf_add_image(self, image): ...
    def pdf_add_journal_fragment(self, parent, copy, copy_stream, newobj): ...
    def pdf_add_new_array(self, initial): ...
    def pdf_add_new_dict(self, initial): ...
    def pdf_add_object(self, obj): ...
    def pdf_add_page(self, mediabox, rotate, resources, contents): ...
    def pdf_add_simple_font(self, font, encoding): ...
    def pdf_add_stream(self, buf, obj, compressed): ...
    def pdf_add_substitute_font(self, font): ...
    def pdf_annot_field_event_keystroke(self, annot, evt): ...
    def pdf_authenticate_password(self, pw): ...
    def pdf_bake_document(self, bake_annots, bake_widgets): ...
    def pdf_begin_implicit_operation(self): ...
    def pdf_begin_operation(self, operation): ...
    def pdf_calculate_form(self): ...
    def pdf_can_be_saved_incrementally(self): ...
    def pdf_can_redo(self): ...
    def pdf_can_undo(self): ...
    def pdf_clear_xref(self): ...
    def pdf_clear_xref_to_mark(self): ...
    def pdf_count_document_associated_files(self): ...
    def pdf_count_layer_config_ui(self): ...
    def pdf_count_layer_configs(self): ...
    def pdf_count_layers(self): ...
    def pdf_count_objects(self): ...
    def pdf_count_pages(self): ...
    def pdf_count_q_balance(self, res, stm, prepend, append): ...
    def pdf_count_signatures(self): ...
    def pdf_count_unsaved_versions(self): ...
    def pdf_count_versions(self): ...
    def pdf_create_field_name(self, prefix, buf, len): ...
    def pdf_create_object(self): ...
    def pdf_debug_doc_changes(self): ...
    def pdf_delete_object(self, num): ...
    def pdf_delete_page(self, number): ...
    def pdf_delete_page_labels(self, index): ...
    def pdf_delete_page_range(self, start, end): ...
    def pdf_deselect_layer_config_ui(self, ui): ...
    def pdf_deserialise_journal(self, stm): ...
    def pdf_disable_js(self): ...
    def pdf_doc_was_linearized(self): ...
    def pdf_document_associated_file(self, idx): ...
    def pdf_document_event_did_print(self): ...
    def pdf_document_event_did_save(self): ...
    def pdf_document_event_will_close(self): ...
    def pdf_document_event_will_print(self): ...
    def pdf_document_event_will_save(self): ...
    def pdf_document_output_intent(self): ...
    def pdf_document_permissions(self): ...
    def pdf_empty_store(self): ...
    def pdf_enable_journal(self): ...
    def pdf_enable_js(self): ...
    def pdf_enable_layer(self, layer, enabled): ...
    def pdf_end_operation(self): ...
    def pdf_ensure_solid_xref(self, num): ...
    def pdf_event_issue_alert(self, evt): ...
    def pdf_event_issue_exec_menu_item(self, item): ...
    def pdf_event_issue_launch_url(self, url, new_frame): ...
    def pdf_event_issue_mail_doc(self, evt): ...
    def pdf_event_issue_print(self): ...
    def pdf_field_event_calculate(self, field): ...
    def pdf_field_event_format(self, field): ...
    def pdf_field_event_keystroke(self, field, evt): ...
    def pdf_field_event_validate(self, field, value, newvalue): ...
    def pdf_field_reset(self, field): ...
    def pdf_filter_annot_contents(self, annot, options): ...
    def pdf_filter_page_contents(self, page, options): ...
    def pdf_find_font_resource(self, type, encoding, item, key): ...
    def pdf_find_version_for_obj(self, obj): ...
    def pdf_forget_xref(self): ...
    def pdf_get_doc_event_callback_data(self): ...
    def pdf_graft_object(self, obj): ...
    def pdf_graft_page(self, page_to, src, page_from): ...
    def pdf_has_permission(self, p): ...
    def pdf_has_unsaved_changes(self): ...
    def pdf_has_unsaved_sigs(self): ...
    def pdf_insert_font_resource(self, key, obj): ...
    def pdf_insert_page(self, at, page): ...
    def pdf_invalidate_xfa(self): ...
    def pdf_is_local_object(self, obj): ...
    def pdf_is_ocg_hidden(self, rdb, usage, ocg): ...
    def pdf_js_set_console(self, console, user): ...
    def pdf_js_supported(self): ...
    def pdf_layer_config_info(self, config_num, info): ...
    def pdf_layer_config_ui_info(self, ui, info): ...
    def pdf_layer_is_enabled(self, layer): ...
    def pdf_layer_name(self, layer): ...
    def pdf_load_compressed_inline_image(self, dict, length, cstm, indexed, image): ...
    def pdf_load_compressed_stream(self, num, worst_case): ...
    def pdf_load_default_colorspaces(self, page): ...
    def pdf_load_embedded_cmap(self, ref): ...
    def pdf_load_image(self, obj): ...
    def pdf_load_inline_image(self, rdb, dict, file): ...
    def pdf_load_journal(self, filename): ...
    def pdf_load_link_annots(self, arg_1, annots, pagenum, page_ctm): ...
    def pdf_load_name_tree(self, which): ...
    def pdf_load_object(self, num): ...
    def pdf_load_outline(self): ...
    def pdf_load_page(self, number): ...
    def pdf_load_page_tree(self): ...
    def pdf_load_pattern(self, obj): ...
    def pdf_load_raw_stream_number(self, num): ...
    def pdf_load_shading(self, obj): ...
    def pdf_load_stream_number(self, num): ...
    def pdf_load_to_unicode(self, font, strings, collection, cmapstm): ...
    def pdf_load_type3_glyphs(self, fontdesc): ...
    def pdf_load_unencrypted_object(self, num): ...
    def pdf_lookup_dest(self, needle): ...
    def pdf_lookup_metadata(self, key, ptr, size): ...
    def pdf_lookup_metadata2(self, key): ...
    def pdf_lookup_name(self, which, needle): ...
    def pdf_lookup_page_loc(self, needle, parentp, indexp): ...
    def pdf_lookup_page_number(self, pageobj): ...
    def pdf_lookup_page_obj(self, needle): ...
    def pdf_mark_xref(self): ...
    def pdf_metadata(self): ...
    def pdf_minimize_document(self): ...
    def pdf_needs_password(self): ...
    def pdf_new_action_from_link(self, uri): ...
    def pdf_new_array(self, initialcap): ...
    def pdf_new_color_filter(self, chain, struct_parents, transform, options, copts): ...
    def pdf_new_date(self, time): ...
    def pdf_new_dest_from_link(self, uri, is_remote): ...
    def pdf_new_dict(self, initialcap): ...
    def pdf_new_graft_map(self): ...
    def pdf_new_indirect(self, num, gen): ...
    def pdf_new_matrix(self, mtx): ...
    def pdf_new_pdf_device(self, topctm, resources, contents): ...
    def pdf_new_point(self, point): ...
    def pdf_new_rect(self, rect): ...
    def pdf_new_run_processor(self, dev, ctm, struct_parent, usage, gstate, default_cs, cookie): ...
    def pdf_new_sanitize_filter(self, chain, struct_parents, transform, options, sopts): ...
    def pdf_new_xobject(self, bbox, matrix, res, buffer): ...
    def pdf_obj_num_is_stream(self, num): ...
    def pdf_open_contents_stream(self, obj): ...
    def pdf_open_inline_stream(self, stmobj, length, chain, params): ...
    def pdf_open_raw_stream_number(self, num): ...
    def pdf_open_stream_number(self, num): ...
    def pdf_open_stream_with_offset(self, num, dict, stm_ofs): ...
    def pdf_page_label(self, page, buf, size): ...
    def pdf_page_write(self, mediabox, presources, pcontents): ...
    def pdf_parse_array(self, f, buf): ...
    def pdf_parse_dict(self, f, buf): ...
    def pdf_parse_ind_obj(self, f, num, gen, stm_ofs, try_repair): ...
    def pdf_parse_journal_obj(self, stm, onum, ostm, newobj): ...
    def pdf_parse_stm_obj(self, f, buf): ...
    def pdf_progressive_advance(self, pagenum): ...
    def pdf_purge_local_font_resources(self): ...
    def pdf_purge_locals_from_store(self): ...
    def pdf_purge_object_from_store(self, num): ...
    def pdf_read_journal(self, stm): ...
    def pdf_rearrange_pages(self, count, pages, structure): ...
    def pdf_rearrange_pages2(self, pages, structure): ...
    def pdf_recolor_page(self, pagenum, opts): ...
    def pdf_redact_page(self, page, opts): ...
    def pdf_redo(self): ...
    def pdf_remove_output_intents(self): ...
    def pdf_repair_obj(self, buf, stmofsp, stmlenp, encrypt, id, page, tmpofs, root): ...
    def pdf_repair_obj_stms(self): ...
    def pdf_repair_trailer(self): ...
    def pdf_repair_xref(self): ...
    def pdf_replace_xref(self, entries, n): ...
    def pdf_reset_form(self, fields, exclude): ...
    def pdf_resolve_link(self, uri, xp, yp): ...
    def pdf_rewrite_images(self, opts): ...
    def pdf_run_document_structure(self, dev, cookie): ...
    def pdf_run_glyph(self, resources, contents, dev, ctm, gstate, default_cs): ...
    def pdf_save_document(self, filename, opts): ...
    def pdf_save_journal(self, filename): ...
    def pdf_save_snapshot(self, filename): ...
    def pdf_select_layer_config(self, config_num): ...
    def pdf_select_layer_config_ui(self, ui): ...
    def pdf_serialise_journal(self, out): ...
    def pdf_set_annot_field_value(self, widget, text, ignore_trigger_events): ...
    def pdf_set_doc_event_callback(self, event_cb, free_event_data_cb, data): ...
    def pdf_set_document_language(self, lang): ...
    def pdf_set_field_value(self, field, text, ignore_trigger_events): ...
    def pdf_set_layer_config_as_default(self): ...
    def pdf_set_page_labels(self, index, style, prefix, start): ...
    def pdf_set_populating_xref_trailer(self, trailer): ...
    def pdf_signature_byte_range(self, signature, byte_range): ...
    def pdf_signature_contents(self, signature, contents): ...
    def pdf_signature_hash_bytes(self, signature): ...
    def pdf_signature_incremental_change_since_signing(self, signature): ...
    def pdf_signature_is_signed(self, field): ...
    def pdf_signature_set_value(self, field, signer, stime): ...
    def pdf_subset_fonts(self, pages_len, pages): ...
    def pdf_subset_fonts2(self, pages): ...
    def pdf_sync_open_pages(self): ...
    def pdf_toggle_layer_config_ui(self, ui): ...
    def pdf_trailer(self): ...
    def pdf_undo(self): ...
    def pdf_undoredo_state(self, steps): ...
    def pdf_undoredo_step(self, step): ...
    def pdf_update_object(self, num, obj): ...
    def pdf_update_stream(self, ref, buf, compressed): ...
    def pdf_update_xobject(self, xobj, bbox, mat, res, buffer): ...
    def pdf_validate_change_history(self): ...
    def pdf_validate_changes(self, version): ...
    def pdf_version(self): ...
    def pdf_was_pure_xfa(self): ...
    def pdf_was_repaired(self): ...
    def pdf_write_document(self, out, opts): ...
    def pdf_write_journal(self, out): ...
    def pdf_write_snapshot(self, out): ...
    def pdf_xref_ensure_incremental_object(self, num): ...
    def pdf_xref_ensure_local_object(self, num): ...
    def pdf_xref_entry_map(self, fn, arg): ...
    def pdf_xref_is_incremental(self, num): ...
    def pdf_xref_len(self): ...
    def pdf_xref_obj_is_unsaved_signature(self, obj): ...
    def pdf_xref_remove_unsaved_signature(self, field): ...
    def pdf_xref_store_unsaved_signature(self, field, signer): ...
    def pdf_zugferd_profile(self, version): ...
    def pdf_zugferd_xml(self): ...
    def super(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfEmbeddedFileParams:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfFilespecParams:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfFilterFactory:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    filter: Incomplete
    options: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfFilterFactory2(PdfFilterFactory):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_filter(self, use: bool = True): ...
    def filter(self, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5): ...
    def __disown__(self): ...

class PdfFilterOptions:
    thisown: Incomplete
    def add_factory(self, factory): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    recurse: Incomplete
    instance_forms: Incomplete
    ascii: Incomplete
    no_update: Incomplete
    opaque: Incomplete
    complete: Incomplete
    filters: Incomplete
    newlines: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    m_filters: Incomplete

class PdfFilterOptions2(PdfFilterOptions):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_complete(self, use: bool = True): ...
    def complete(self, arg_0, arg_1): ...
    def __disown__(self): ...

class PdfFontDesc:
    thisown: Incomplete
    def pdf_add_hmtx(self, lo, hi, w): ...
    def pdf_add_vmtx(self, lo, hi, x, y, w): ...
    def pdf_end_hmtx(self): ...
    def pdf_end_vmtx(self): ...
    def pdf_font_cid_to_gid(self, cid): ...
    def pdf_set_default_hmtx(self, w): ...
    def pdf_set_default_vmtx(self, y, w): ...
    def pdf_set_font_wmode(self, wmode): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfFontResourceKey:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfFunction:
    thisown: Incomplete
    def pdf_eval_function(self, _in, inlen, out, outlen): ...
    def pdf_function_size(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfGraftMap:
    thisown: Incomplete
    def pdf_graft_mapped_object(self, obj): ...
    def pdf_graft_mapped_page(self, page_to, src, page_from): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfGstate:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfHintPage:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfHintShared:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfHmtx:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfImageRewriterOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    color_lossless_image_subsample_method: Incomplete
    color_lossy_image_subsample_method: Incomplete
    color_lossless_image_subsample_threshold: Incomplete
    color_lossless_image_subsample_to: Incomplete
    color_lossy_image_subsample_threshold: Incomplete
    color_lossy_image_subsample_to: Incomplete
    color_lossless_image_recompress_method: Incomplete
    color_lossy_image_recompress_method: Incomplete
    color_lossy_image_recompress_quality: Incomplete
    color_lossless_image_recompress_quality: Incomplete
    gray_lossless_image_subsample_method: Incomplete
    gray_lossy_image_subsample_method: Incomplete
    gray_lossless_image_subsample_threshold: Incomplete
    gray_lossless_image_subsample_to: Incomplete
    gray_lossy_image_subsample_threshold: Incomplete
    gray_lossy_image_subsample_to: Incomplete
    gray_lossless_image_recompress_method: Incomplete
    gray_lossy_image_recompress_method: Incomplete
    gray_lossy_image_recompress_quality: Incomplete
    gray_lossless_image_recompress_quality: Incomplete
    bitonal_image_subsample_method: Incomplete
    bitonal_image_subsample_threshold: Incomplete
    bitonal_image_subsample_to: Incomplete
    bitonal_image_recompress_method: Incomplete
    bitonal_image_recompress_quality: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfJournal:
    thisown: Incomplete
    def pdf_discard_journal(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfJs:
    thisown: Incomplete
    def pdf_js_event_init(self, target, value, willCommit): ...
    def pdf_js_event_init_keystroke(self, target, evt): ...
    def pdf_js_event_result(self): ...
    def pdf_js_event_result_keystroke(self, evt): ...
    def pdf_js_event_result_validate(self, newvalue): ...
    def pdf_js_event_value(self): ...
    def pdf_js_execute(self, name, code, result): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfJsConsole:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfKeystrokeEvent:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfLaunchUrlEvent:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfLayerConfig:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    name: Incomplete
    creator: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfLayerConfigUi:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    text: Incomplete
    depth: Incomplete
    type: Incomplete
    selected: Incomplete
    locked: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfLexbuf:
    thisown: Incomplete
    def pdf_lexbuf_fin(self): ...
    def pdf_lexbuf_grow(self): ...
    def pdf_lexbuf_init(self, size): ...
    __swig_destroy__: Incomplete
    def __init__(self, *args) -> None: ...
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfLexbufLarge:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfLockedFields:
    thisown: Incomplete
    def pdf_is_field_locked(self, name): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfMailDocEvent:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfMarkBits:
    thisown: Incomplete
    def pdf_mark_bits_reset(self): ...
    def pdf_mark_bits_set(self, obj): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfMarkList:
    thisown: Incomplete
    def pdf_mark_list_check(self, obj): ...
    def pdf_mark_list_free(self): ...
    def pdf_mark_list_init(self): ...
    def pdf_mark_list_pop(self): ...
    def pdf_mark_list_push(self, obj): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfMrange:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfObj:
    thisown: Incomplete
    @staticmethod
    def pdf_new_text_string(s): ...
    @staticmethod
    def pdf_new_dict(doc, initialcap): ...
    def pdf_array_contains(self, obj): ...
    def pdf_array_delete(self, index): ...
    def pdf_array_find(self, obj): ...
    def pdf_array_get(self, i): ...
    def pdf_array_get_bool(self, index): ...
    def pdf_array_get_int(self, index): ...
    def pdf_array_get_matrix(self, index): ...
    def pdf_array_get_name(self, index): ...
    def pdf_array_get_real(self, index): ...
    def pdf_array_get_rect(self, index): ...
    def pdf_array_get_string(self, index, sizep): ...
    def pdf_array_get_text_string(self, index): ...
    def pdf_array_insert(self, obj, index): ...
    def pdf_array_len(self): ...
    def pdf_array_push(self, obj): ...
    def pdf_array_push_array(self, initial): ...
    def pdf_array_push_bool(self, x): ...
    def pdf_array_push_dict(self, initial): ...
    def pdf_array_push_int(self, x): ...
    def pdf_array_push_name(self, x): ...
    def pdf_array_push_real(self, x): ...
    def pdf_array_push_string(self, x, n): ...
    def pdf_array_push_text_string(self, x): ...
    def pdf_array_put(self, i, obj): ...
    def pdf_array_put_array(self, i, initial): ...
    def pdf_array_put_bool(self, i, x): ...
    def pdf_array_put_dict(self, i, initial): ...
    def pdf_array_put_int(self, i, x): ...
    def pdf_array_put_name(self, i, x): ...
    def pdf_array_put_real(self, i, x): ...
    def pdf_array_put_string(self, i, x, n): ...
    def pdf_array_put_text_string(self, i, x): ...
    def pdf_button_field_on_state(self): ...
    def pdf_choice_field_option(self, exportval, i): ...
    def pdf_choice_field_option_count(self): ...
    def pdf_clean_obj(self): ...
    def pdf_copy_array(self): ...
    def pdf_copy_dict(self): ...
    def pdf_debug_obj(self): ...
    def pdf_debug_ref(self): ...
    def pdf_deep_copy_obj(self): ...
    def pdf_dict_del(self, key): ...
    def pdf_dict_dels(self, key): ...
    def pdf_dict_get_bool(self, key): ...
    def pdf_dict_get_bool_default(self, key, _def): ...
    def pdf_dict_get_date(self, key): ...
    def pdf_dict_get_inheritable(self, key): ...
    def pdf_dict_get_inheritable_bool(self, key): ...
    def pdf_dict_get_inheritable_date(self, key): ...
    def pdf_dict_get_inheritable_int(self, key): ...
    def pdf_dict_get_inheritable_int64(self, key): ...
    def pdf_dict_get_inheritable_matrix(self, key): ...
    def pdf_dict_get_inheritable_name(self, key): ...
    def pdf_dict_get_inheritable_real(self, key): ...
    def pdf_dict_get_inheritable_rect(self, key): ...
    def pdf_dict_get_inheritable_string(self, key, sizep): ...
    def pdf_dict_get_inheritable_text_string(self, key): ...
    def pdf_dict_get_int(self, key): ...
    def pdf_dict_get_int64(self, key): ...
    def pdf_dict_get_int_default(self, key, _def): ...
    def pdf_dict_get_key(self, idx): ...
    def pdf_dict_get_matrix(self, key): ...
    def pdf_dict_get_name(self, key): ...
    def pdf_dict_get_point(self, key): ...
    def pdf_dict_get_real(self, key): ...
    def pdf_dict_get_real_default(self, key, _def): ...
    def pdf_dict_get_rect(self, key): ...
    def pdf_dict_get_string(self, key, sizep): ...
    def pdf_dict_get_text_string(self, key): ...
    def pdf_dict_get_text_string_opt(self, key): ...
    def pdf_dict_get_val(self, idx): ...
    def pdf_dict_geta(self, key, abbrev): ...
    def pdf_dict_getp(self, path): ...
    def pdf_dict_getp_inheritable(self, path): ...
    def pdf_dict_gets(self, key): ...
    def pdf_dict_gets_inheritable(self, key): ...
    def pdf_dict_getsa(self, key, abbrev): ...
    def pdf_dict_len(self): ...
    def pdf_dict_put(self, key, val): ...
    def pdf_dict_put_array(self, key, initial): ...
    def pdf_dict_put_bool(self, key, x): ...
    def pdf_dict_put_date(self, key, time): ...
    def pdf_dict_put_dict(self, key, initial): ...
    def pdf_dict_put_indirect(self, key, num): ...
    def pdf_dict_put_int(self, key, x): ...
    def pdf_dict_put_matrix(self, key, x): ...
    def pdf_dict_put_name(self, key, x): ...
    def pdf_dict_put_point(self, key, x): ...
    def pdf_dict_put_real(self, key, x): ...
    def pdf_dict_put_rect(self, key, x): ...
    def pdf_dict_put_string(self, key, x, n): ...
    def pdf_dict_put_text_string(self, key, x): ...
    def pdf_dict_put_val_null(self, idx): ...
    def pdf_dict_putp(self, path, val): ...
    def pdf_dict_puts(self, key, val): ...
    def pdf_dict_puts_dict(self, key, initial): ...
    def pdf_dirty_obj(self): ...
    def pdf_field_border_style(self): ...
    def pdf_field_display(self): ...
    def pdf_field_flags(self): ...
    def pdf_field_label(self): ...
    def pdf_field_set_border_style(self, text): ...
    def pdf_field_set_button_caption(self, text): ...
    def pdf_field_set_display(self, d): ...
    def pdf_field_set_fill_color(self, col): ...
    def pdf_field_set_text_color(self, col): ...
    def pdf_field_type(self): ...
    def pdf_field_type_string(self): ...
    def pdf_field_value(self): ...
    def pdf_filter_xobject_instance(self, page_res, ctm, options, cycle_up): ...
    def pdf_flatten_inheritable_page_items(self): ...
    def pdf_get_bound_document(self): ...
    def pdf_get_embedded_file_params(self, out): ...
    def pdf_get_filespec_params(self, out): ...
    def pdf_get_indirect_document(self): ...
    def pdf_intent_from_name(self): ...
    def pdf_is_array(self): ...
    def pdf_is_bool(self): ...
    def pdf_is_dict(self): ...
    def pdf_is_embedded_file(self): ...
    def pdf_is_filespec(self): ...
    def pdf_is_indirect(self): ...
    def pdf_is_int(self): ...
    def pdf_is_jpx_image(self): ...
    def pdf_is_name(self): ...
    def pdf_is_null(self): ...
    def pdf_is_number(self): ...
    def pdf_is_real(self): ...
    def pdf_is_stream(self): ...
    def pdf_is_string(self): ...
    def pdf_line_ending_from_name(self): ...
    def pdf_load_colorspace(self): ...
    def pdf_load_embedded_file_contents(self): ...
    def pdf_load_field_name(self): ...
    def pdf_load_function(self, _in, out): ...
    def pdf_load_raw_stream(self): ...
    def pdf_load_stream(self): ...
    def pdf_load_stream_or_string_as_utf8(self): ...
    def pdf_lookup_field(self, name): ...
    def pdf_lookup_number(self, needle): ...
    def pdf_mark_obj(self): ...
    def pdf_name_eq(self, b): ...
    def pdf_new_utf8_from_pdf_stream_obj(self): ...
    def pdf_new_utf8_from_pdf_string_obj(self): ...
    def pdf_obj_is_dirty(self): ...
    def pdf_obj_is_incremental(self): ...
    def pdf_obj_marked(self): ...
    def pdf_obj_memo(self, bit, memo): ...
    def pdf_obj_parent_num(self): ...
    def pdf_obj_refs(self): ...
    def pdf_objcmp(self, b): ...
    def pdf_objcmp_deep(self, b): ...
    def pdf_objcmp_resolve(self, b): ...
    def pdf_open_raw_stream(self): ...
    def pdf_open_stream(self): ...
    def pdf_page_obj_transform(self, outbox, outctm): ...
    def pdf_page_obj_transform_box(self, outbox, out, box): ...
    def pdf_pin_document(self): ...
    def pdf_recolor_shade(self, reshade, opaque): ...
    def pdf_resolve_indirect(self): ...
    def pdf_resolve_indirect_chain(self): ...
    def pdf_set_int(self, i): ...
    def pdf_set_obj_memo(self, bit, memo): ...
    def pdf_set_obj_parent(self, num): ...
    def pdf_set_str_len(self, newlen): ...
    def pdf_sort_dict(self): ...
    def pdf_store_item(self, val, itemsize): ...
    def pdf_to_bool(self): ...
    def pdf_to_bool_default(self, _def): ...
    def pdf_to_date(self): ...
    def pdf_to_gen(self): ...
    def pdf_to_int(self): ...
    def pdf_to_int64(self): ...
    def pdf_to_int_default(self, _def): ...
    def pdf_to_matrix(self): ...
    def pdf_to_name(self): ...
    def pdf_to_num(self): ...
    def pdf_to_point(self, offset): ...
    def pdf_to_quad(self, offset): ...
    def pdf_to_real(self): ...
    def pdf_to_real_default(self, _def): ...
    def pdf_to_rect(self): ...
    def pdf_to_str_buf(self): ...
    def pdf_to_str_len(self): ...
    def pdf_to_string(self, sizep): ...
    def pdf_to_text_string(self): ...
    def pdf_unmark_obj(self): ...
    def pdf_verify_embedded_file_checksum(self): ...
    def pdf_walk_tree(self, kid_name, arrive, leave, arg, names, values): ...
    def pdf_xobject_bbox(self): ...
    def pdf_xobject_colorspace(self): ...
    def pdf_xobject_isolated(self): ...
    def pdf_xobject_knockout(self): ...
    def pdf_xobject_matrix(self): ...
    def pdf_xobject_resources(self): ...
    def pdf_xobject_transparency(self): ...
    def pdf_dict_get(self, *args): ...
    def pdf_load_field_name2(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfOcgDescriptor:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfPage:
    thisown: Incomplete
    def pdf_bound_page(self, box): ...
    def pdf_count_page_associated_files(self): ...
    def pdf_create_annot(self, type): ...
    def pdf_create_annot_raw(self, type): ...
    def pdf_create_link(self, bbox, uri): ...
    def pdf_create_signature_widget(self, name): ...
    def pdf_delete_annot(self, annot): ...
    def pdf_delete_link(self, link): ...
    def pdf_first_annot(self): ...
    def pdf_first_widget(self): ...
    def pdf_load_links(self): ...
    def pdf_new_link(self, rect, uri, obj): ...
    def pdf_new_pixmap_from_page_contents_with_separations_and_usage(self, ctm, cs, seps, alpha, usage, box): ...
    def pdf_new_pixmap_from_page_contents_with_usage(self, ctm, cs, alpha, usage, box): ...
    def pdf_new_pixmap_from_page_with_separations_and_usage(self, ctm, cs, seps, alpha, usage, box): ...
    def pdf_new_pixmap_from_page_with_usage(self, ctm, cs, alpha, usage, box): ...
    def pdf_nuke_annots(self): ...
    def pdf_nuke_links(self): ...
    def pdf_nuke_page(self): ...
    def pdf_page_associated_file(self, idx): ...
    def pdf_page_contents(self): ...
    def pdf_page_event_close(self): ...
    def pdf_page_event_open(self): ...
    def pdf_page_group(self): ...
    def pdf_page_has_transparency(self): ...
    def pdf_page_presentation(self, transition, duration): ...
    def pdf_page_resources(self): ...
    def pdf_page_separations(self): ...
    def pdf_page_transform(self, mediabox, ctm): ...
    def pdf_page_transform_box(self, mediabox, ctm, box): ...
    def pdf_run_page(self, dev, ctm, cookie): ...
    def pdf_run_page_annots(self, dev, ctm, cookie): ...
    def pdf_run_page_annots_with_usage(self, dev, ctm, usage, cookie): ...
    def pdf_run_page_contents(self, dev, ctm, cookie): ...
    def pdf_run_page_contents_with_usage(self, dev, ctm, usage, cookie): ...
    def pdf_run_page_widgets(self, dev, ctm, cookie): ...
    def pdf_run_page_widgets_with_usage(self, dev, ctm, usage, cookie): ...
    def pdf_run_page_with_usage(self, dev, ctm, usage, cookie): ...
    def pdf_set_page_box(self, box, rect): ...
    def pdf_sync_annots(self): ...
    def pdf_sync_links(self): ...
    def pdf_sync_page(self): ...
    def pdf_update_page(self): ...
    def super(self): ...
    def doc(self): ...
    def obj(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfPattern:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfPkcs7DistinguishedName:
    thisown: Incomplete
    def pdf_signature_drop_distinguished_name(self): ...
    def pdf_signature_format_distinguished_name(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfPkcs7Signer:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfPkcs7Verifier:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfProcessor:
    thisown: Incomplete
    @staticmethod
    def pdf_new_color_filter(doc, chain, struct_parents, transform, options, copts): ...
    def pdf_close_processor(self): ...
    def pdf_process_annot(self, annot, cookie): ...
    def pdf_process_contents(self, doc, res, stm, cookie, out_res): ...
    def pdf_process_glyph(self, doc, resources, contents): ...
    def pdf_process_raw_contents(self, doc, rdb, stmobj, cookie): ...
    def pdf_processor_pop_resources(self): ...
    def pdf_processor_push_resources(self, res): ...
    def pdf_reset_processor(self): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfProcessor2(PdfProcessor):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_close_processor(self, use: bool = True): ...
    def use_virtual_drop_processor(self, use: bool = True): ...
    def use_virtual_reset_processor(self, use: bool = True): ...
    def use_virtual_push_resources(self, use: bool = True): ...
    def use_virtual_pop_resources(self, use: bool = True): ...
    def use_virtual_op_w(self, use: bool = True): ...
    def use_virtual_op_j(self, use: bool = True): ...
    def use_virtual_op_J(self, use: bool = True): ...
    def use_virtual_op_M(self, use: bool = True): ...
    def use_virtual_op_d(self, use: bool = True): ...
    def use_virtual_op_ri(self, use: bool = True): ...
    def use_virtual_op_i(self, use: bool = True): ...
    def use_virtual_op_gs_begin(self, use: bool = True): ...
    def use_virtual_op_gs_BM(self, use: bool = True): ...
    def use_virtual_op_gs_ca(self, use: bool = True): ...
    def use_virtual_op_gs_CA(self, use: bool = True): ...
    def use_virtual_op_gs_SMask(self, use: bool = True): ...
    def use_virtual_op_gs_end(self, use: bool = True): ...
    def use_virtual_op_q(self, use: bool = True): ...
    def use_virtual_op_Q(self, use: bool = True): ...
    def use_virtual_op_cm(self, use: bool = True): ...
    def use_virtual_op_m(self, use: bool = True): ...
    def use_virtual_op_l(self, use: bool = True): ...
    def use_virtual_op_c(self, use: bool = True): ...
    def use_virtual_op_v(self, use: bool = True): ...
    def use_virtual_op_y(self, use: bool = True): ...
    def use_virtual_op_h(self, use: bool = True): ...
    def use_virtual_op_re(self, use: bool = True): ...
    def use_virtual_op_S(self, use: bool = True): ...
    def use_virtual_op_s(self, use: bool = True): ...
    def use_virtual_op_F(self, use: bool = True): ...
    def use_virtual_op_f(self, use: bool = True): ...
    def use_virtual_op_fstar(self, use: bool = True): ...
    def use_virtual_op_B(self, use: bool = True): ...
    def use_virtual_op_Bstar(self, use: bool = True): ...
    def use_virtual_op_b(self, use: bool = True): ...
    def use_virtual_op_bstar(self, use: bool = True): ...
    def use_virtual_op_n(self, use: bool = True): ...
    def use_virtual_op_W(self, use: bool = True): ...
    def use_virtual_op_Wstar(self, use: bool = True): ...
    def use_virtual_op_BT(self, use: bool = True): ...
    def use_virtual_op_ET(self, use: bool = True): ...
    def use_virtual_op_Tc(self, use: bool = True): ...
    def use_virtual_op_Tw(self, use: bool = True): ...
    def use_virtual_op_Tz(self, use: bool = True): ...
    def use_virtual_op_TL(self, use: bool = True): ...
    def use_virtual_op_Tf(self, use: bool = True): ...
    def use_virtual_op_Tr(self, use: bool = True): ...
    def use_virtual_op_Ts(self, use: bool = True): ...
    def use_virtual_op_Td(self, use: bool = True): ...
    def use_virtual_op_TD(self, use: bool = True): ...
    def use_virtual_op_Tm(self, use: bool = True): ...
    def use_virtual_op_Tstar(self, use: bool = True): ...
    def use_virtual_op_TJ(self, use: bool = True): ...
    def use_virtual_op_Tj(self, use: bool = True): ...
    def use_virtual_op_squote(self, use: bool = True): ...
    def use_virtual_op_dquote(self, use: bool = True): ...
    def use_virtual_op_d0(self, use: bool = True): ...
    def use_virtual_op_d1(self, use: bool = True): ...
    def use_virtual_op_CS(self, use: bool = True): ...
    def use_virtual_op_cs(self, use: bool = True): ...
    def use_virtual_op_SC_pattern(self, use: bool = True): ...
    def use_virtual_op_sc_pattern(self, use: bool = True): ...
    def use_virtual_op_SC_shade(self, use: bool = True): ...
    def use_virtual_op_sc_shade(self, use: bool = True): ...
    def use_virtual_op_SC_color(self, use: bool = True): ...
    def use_virtual_op_sc_color(self, use: bool = True): ...
    def use_virtual_op_G(self, use: bool = True): ...
    def use_virtual_op_g(self, use: bool = True): ...
    def use_virtual_op_RG(self, use: bool = True): ...
    def use_virtual_op_rg(self, use: bool = True): ...
    def use_virtual_op_K(self, use: bool = True): ...
    def use_virtual_op_k(self, use: bool = True): ...
    def use_virtual_op_BI(self, use: bool = True): ...
    def use_virtual_op_sh(self, use: bool = True): ...
    def use_virtual_op_Do_image(self, use: bool = True): ...
    def use_virtual_op_Do_form(self, use: bool = True): ...
    def use_virtual_op_MP(self, use: bool = True): ...
    def use_virtual_op_DP(self, use: bool = True): ...
    def use_virtual_op_BMC(self, use: bool = True): ...
    def use_virtual_op_BDC(self, use: bool = True): ...
    def use_virtual_op_EMC(self, use: bool = True): ...
    def use_virtual_op_BX(self, use: bool = True): ...
    def use_virtual_op_EX(self, use: bool = True): ...
    def use_virtual_op_gs_OP(self, use: bool = True): ...
    def use_virtual_op_gs_op(self, use: bool = True): ...
    def use_virtual_op_gs_OPM(self, use: bool = True): ...
    def use_virtual_op_gs_UseBlackPtComp(self, use: bool = True): ...
    def use_virtual_op_END(self, use: bool = True): ...
    def close_processor(self, arg_0): ...
    def drop_processor(self, arg_0): ...
    def reset_processor(self, arg_0): ...
    def push_resources(self, arg_0, arg_2): ...
    def pop_resources(self, arg_0): ...
    def op_w(self, arg_0, arg_2): ...
    def op_j(self, arg_0, arg_2): ...
    def op_J(self, arg_0, arg_2): ...
    def op_M(self, arg_0, arg_2): ...
    def op_d(self, arg_0, arg_2, arg_3): ...
    def op_ri(self, arg_0, arg_2): ...
    def op_i(self, arg_0, arg_2): ...
    def op_gs_begin(self, arg_0, arg_2, arg_3): ...
    def op_gs_BM(self, arg_0, arg_2): ...
    def op_gs_ca(self, arg_0, arg_2): ...
    def op_gs_CA(self, arg_0, arg_2): ...
    def op_gs_SMask(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6): ...
    def op_gs_end(self, arg_0): ...
    def op_q(self, arg_0): ...
    def op_Q(self, arg_0): ...
    def op_cm(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def op_m(self, arg_0, arg_2, arg_3): ...
    def op_l(self, arg_0, arg_2, arg_3): ...
    def op_c(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def op_v(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_y(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_h(self, arg_0): ...
    def op_re(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_S(self, arg_0): ...
    def op_s(self, arg_0): ...
    def op_F(self, arg_0): ...
    def op_f(self, arg_0): ...
    def op_fstar(self, arg_0): ...
    def op_B(self, arg_0): ...
    def op_Bstar(self, arg_0): ...
    def op_b(self, arg_0): ...
    def op_bstar(self, arg_0): ...
    def op_n(self, arg_0): ...
    def op_W(self, arg_0): ...
    def op_Wstar(self, arg_0): ...
    def op_BT(self, arg_0): ...
    def op_ET(self, arg_0): ...
    def op_Tc(self, arg_0, arg_2): ...
    def op_Tw(self, arg_0, arg_2): ...
    def op_Tz(self, arg_0, arg_2): ...
    def op_TL(self, arg_0, arg_2): ...
    def op_Tf(self, arg_0, arg_2, arg_3, arg_4): ...
    def op_Tr(self, arg_0, arg_2): ...
    def op_Ts(self, arg_0, arg_2): ...
    def op_Td(self, arg_0, arg_2, arg_3): ...
    def op_TD(self, arg_0, arg_2, arg_3): ...
    def op_Tm(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def op_Tstar(self, arg_0): ...
    def op_TJ(self, arg_0, arg_2): ...
    def op_Tj(self, arg_0, arg_2, arg_3): ...
    def op_squote(self, arg_0, arg_2, arg_3): ...
    def op_dquote(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_d0(self, arg_0, arg_2, arg_3): ...
    def op_d1(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7): ...
    def op_CS(self, arg_0, arg_2, arg_3): ...
    def op_cs(self, arg_0, arg_2, arg_3): ...
    def op_SC_pattern(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_sc_pattern(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_SC_shade(self, arg_0, arg_2, arg_3): ...
    def op_sc_shade(self, arg_0, arg_2, arg_3): ...
    def op_SC_color(self, arg_0, arg_2, arg_3): ...
    def op_sc_color(self, arg_0, arg_2, arg_3): ...
    def op_G(self, arg_0, arg_2): ...
    def op_g(self, arg_0, arg_2): ...
    def op_RG(self, arg_0, arg_2, arg_3, arg_4): ...
    def op_rg(self, arg_0, arg_2, arg_3, arg_4): ...
    def op_K(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_k(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def op_BI(self, arg_0, arg_2, arg_3): ...
    def op_sh(self, arg_0, arg_2, arg_3): ...
    def op_Do_image(self, arg_0, arg_2, arg_3): ...
    def op_Do_form(self, arg_0, arg_2, arg_3): ...
    def op_MP(self, arg_0, arg_2): ...
    def op_DP(self, arg_0, arg_2, arg_3, arg_4): ...
    def op_BMC(self, arg_0, arg_2): ...
    def op_BDC(self, arg_0, arg_2, arg_3, arg_4): ...
    def op_EMC(self, arg_0): ...
    def op_BX(self, arg_0): ...
    def op_EX(self, arg_0): ...
    def op_gs_OP(self, arg_0, arg_2): ...
    def op_gs_op(self, arg_0, arg_2): ...
    def op_gs_OPM(self, arg_0, arg_2): ...
    def op_gs_UseBlackPtComp(self, arg_0, arg_2): ...
    def op_END(self, arg_0): ...
    def __disown__(self): ...

class PdfRange:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfRecolorOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    num_comp: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfRedactOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    black_boxes: Incomplete
    image_method: Incomplete
    line_art: Incomplete
    text: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfRevPageMap:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfSanitizeFilterOptions:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    opaque: Incomplete
    image_filter: Incomplete
    text_filter: Incomplete
    after_text_object: Incomplete
    culler: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfSanitizeFilterOptions2(PdfSanitizeFilterOptions):
    thisown: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete
    def use_virtual_image_filter(self, use: bool = True): ...
    def use_virtual_text_filter(self, use: bool = True): ...
    def use_virtual_after_text_object(self, use: bool = True): ...
    def use_virtual_culler(self, use: bool = True): ...
    def image_filter(self, arg_0, arg_2, arg_3, arg_4, arg_5): ...
    def text_filter(self, arg_0, arg_2, arg_3, arg_4, arg_5, arg_6): ...
    def after_text_object(self, arg_0, arg_2, arg_3, arg_4): ...
    def culler(self, arg_0, arg_2, arg_3): ...
    def __disown__(self): ...

class PdfTextObjectState:
    thisown: Incomplete
    def pdf_tos_get_text(self): ...
    def pdf_tos_make_trm(self, text, fontdesc, cid, trm, adv): ...
    def pdf_tos_move_after_char(self): ...
    def pdf_tos_newline(self, leading): ...
    def pdf_tos_reset(self, render): ...
    def pdf_tos_set_matrix(self, a, b, c, d, e, f): ...
    def pdf_tos_translate(self, tx, ty): ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfTextState:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfUnsavedSig:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfVmtx:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfWriteOptions:
    thisown: Incomplete
    def pdf_parse_write_options(self, args): ...
    def opwd_utf8_set_value(self, text): ...
    def upwd_utf8_set_value(self, text): ...
    def __init__(self, *args) -> None: ...
    def internal(self, *args): ...
    __swig_destroy__: Incomplete
    do_incremental: Incomplete
    do_pretty: Incomplete
    do_ascii: Incomplete
    do_compress: Incomplete
    do_compress_images: Incomplete
    do_compress_fonts: Incomplete
    do_decompress: Incomplete
    do_garbage: Incomplete
    do_linear: Incomplete
    do_clean: Incomplete
    do_sanitize: Incomplete
    do_appearance: Incomplete
    do_encrypt: Incomplete
    dont_regenerate_id: Incomplete
    permissions: Incomplete
    opwd_utf8: Incomplete
    upwd_utf8: Incomplete
    do_snapshot: Incomplete
    do_preserve_metadata: Incomplete
    do_use_objstms: Incomplete
    compression_effort: Incomplete
    s_num_instances: Incomplete
    def to_string(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...

class PdfXrange:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfXref:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfXrefEntry:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class PdfXrefSubsec:
    thisown: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

def num_instances(): ...

class FzLinkIterator:
    thisown: Incomplete
    def __init__(self, item) -> None: ...
    def __increment__(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    def __ref__(self): ...
    def __deref__(self): ...
    __swig_destroy__: Incomplete
    def fz_set_link_rect(self, rect): ...
    def fz_set_link_uri(self, uri): ...
    def begin(self): ...
    def end(self): ...
    def refs(self): ...
    def next(self): ...
    def rect(self): ...
    def uri(self): ...
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextBlockIterator:
    thisown: Incomplete
    def __init__(self, item) -> None: ...
    def __increment__(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    def __ref__(self): ...
    def __deref__(self): ...
    __swig_destroy__: Incomplete
    def begin(self): ...
    def end(self): ...
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextLineIterator:
    thisown: Incomplete
    def __init__(self, item) -> None: ...
    def __increment__(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    def __ref__(self): ...
    def __deref__(self): ...
    __swig_destroy__: Incomplete
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

class FzStextPageIterator:
    thisown: Incomplete
    def __init__(self, item) -> None: ...
    def __increment__(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    def __ref__(self): ...
    def __deref__(self): ...
    __swig_destroy__: Incomplete
    def i_transform(self): ...
    def i_image(self): ...
    def begin(self): ...
    def end(self): ...
    def m_internal_value(self): ...
    def __nonzero__(self): ...
    __bool__ = __nonzero__
    m_internal: Incomplete
    s_num_instances: Incomplete

def fz_aa_level(): ...
def fz_abs(f): ...
def fz_absi(i): ...
def fz_add_layout_char(block, x, w, p): ...
def fz_add_layout_line(block, x, y, h, p): ...
def fz_add_separation(sep, name, cs, cs_channel): ...
def fz_add_separation_equivalents(sep, rgba, cmyk, name): ...
def fz_adjust_rect_for_stroke(rect, stroke, ctm): ...
def fz_advance_glyph(font, glyph, wmode): ...
def fz_aes_crypt_cbc(ctx, mode, length, iv, input, output): ...
def fz_aes_setkey_dec(ctx, key, keysize): ...
def fz_aes_setkey_enc(ctx, key, keysize): ...
def fz_alpha_from_gray(gray): ...
def fz_append_base64(out, data, size, newline): ...
def fz_append_base64_buffer(out, data, newline): ...
def fz_append_bits(buf, value, count): ...
def fz_append_bits_pad(buf): ...
def fz_append_buffer(destination, source): ...
def fz_append_byte(buf, c): ...
def fz_append_data(buf, data, len): ...
def fz_append_image_as_data_uri(out, image): ...
def fz_append_int16_be(buf, x): ...
def fz_append_int16_le(buf, x): ...
def fz_append_int32_be(buf, x): ...
def fz_append_int32_le(buf, x): ...
def fz_append_pdf_string(buffer, text): ...
def fz_append_pixmap_as_data_uri(out, pixmap): ...
def fz_append_rune(buf, c): ...
def fz_append_string(buf, data): ...
def fz_arc4_encrypt(state, dest, src, len): ...
def fz_arc4_final(state): ...
def fz_arc4_init(state, key, len): ...
def fz_archive_format(arch): ...
def fz_atof(s): ...
def fz_atoi(s): ...
def fz_atoi64(s): ...
def fz_atoz(s): ...
def fz_authenticate_password(doc, password): ...
def fz_autowarp_pixmap(src, points): ...
def fz_available(stm, max): ...
def fz_base_colorspace(cs): ...
def fz_basename(path): ...
def fz_begin_group(dev, area, cs, isolated, knockout, blendmode, alpha): ...
def fz_begin_layer(dev, layer_name): ...
def fz_begin_mask(dev, area, luminosity, colorspace, bc, color_params): ...
def fz_begin_metatext(dev, meta, text): ...
def fz_begin_page(wri, mediabox): ...
def fz_begin_structure(dev, standard, raw, idx): ...
def fz_begin_tile(dev, area, view, xstep, ystep, ctm): ...
def fz_begin_tile_id(dev, area, view, xstep, ystep, ctm, id): ...
def fz_bidi_fragment_text(text, textlen, baseDir, callback, arg, flags): ...
def fz_bitmap_details(bitmap, w, h, n, stride): ...
def fz_blendmode_name(blendmode): ...
def fz_bound_display_list(list): ...
def fz_bound_glyph(font, gid, trm): ...
def fz_bound_page(page): ...
def fz_bound_page_box(page, box): ...
def fz_bound_path(path, stroke, ctm): ...
def fz_bound_shade(shade, ctm): ...
def fz_bound_text(text, stroke, ctm): ...
def fz_box_type_from_string(name): ...
def fz_buffer_extract(buf, data): ...
def fz_buffer_storage(buf, datap): ...
def fz_calloc(count, size): ...
def fz_calloc_no_throw(count, size): ...
def fz_caught(): ...
def fz_caught_errno(): ...
def fz_caught_message(): ...
def fz_chartorune(rune, str): ...
def fz_clamp(x, min, max): ...
def fz_clamp64(x, min, max): ...
def fz_clamp_color(cs, _in, out): ...
def fz_clamp_location(doc, loc): ...
def fz_clampd(x, min, max): ...
def fz_clampi(x, min, max): ...
def fz_clampp(x, min, max): ...
def fz_cleanname(name): ...
def fz_cleanname_strdup(name): ...
def fz_clear_bitmap(bit): ...
def fz_clear_buffer(buf): ...
def fz_clear_pixmap(pix): ...
def fz_clear_pixmap_rect_with_value(pix, value, r): ...
def fz_clear_pixmap_with_value(pix, value): ...
def fz_clip_image_mask(dev, image, ctm, scissor): ...
def fz_clip_path(dev, path, even_odd, ctm, scissor): ...
def fz_clip_stroke_path(dev, path, stroke, ctm, scissor): ...
def fz_clip_stroke_text(dev, text, stroke, ctm, scissor): ...
def fz_clip_text(dev, text, ctm, scissor): ...
def fz_clone_buffer(buf): ...
def fz_clone_default_colorspaces(base): ...
def fz_clone_path(path): ...
def fz_clone_pixmap(old): ...
def fz_clone_pixmap_area_with_different_seps(src, bbox, dcs, seps, color_params, default_cs): ...
def fz_clone_separations_for_overprint(seps): ...
def fz_clone_stroke_state(stroke): ...
def fz_close_band_writer(writer): ...
def fz_close_device(dev): ...
def fz_close_document_writer(wri): ...
def fz_close_output(arg_0): ...
def fz_close_zip_writer(zip): ...
def fz_closepath(path): ...
def fz_colorspace_colorant(cs, n): ...
def fz_colorspace_device_n_has_cmyk(cs): ...
def fz_colorspace_device_n_has_only_cmyk(cs): ...
def fz_colorspace_is_cmyk(cs): ...
def fz_colorspace_is_device(cs): ...
def fz_colorspace_is_device_cmyk(cs): ...
def fz_colorspace_is_device_gray(cs): ...
def fz_colorspace_is_device_n(cs): ...
def fz_colorspace_is_gray(cs): ...
def fz_colorspace_is_indexed(cs): ...
def fz_colorspace_is_lab(cs): ...
def fz_colorspace_is_lab_icc(cs): ...
def fz_colorspace_is_rgb(cs): ...
def fz_colorspace_is_subtractive(cs): ...
def fz_colorspace_n(cs): ...
def fz_colorspace_name(cs): ...
def fz_colorspace_name_colorant(cs, n, name): ...
def fz_colorspace_type(cs): ...
def fz_compare_separations(sep1, sep2): ...
def fz_compress_ccitt_fax_g3(data, columns, rows, stride): ...
def fz_compress_ccitt_fax_g4(data, columns, rows, stride): ...
def fz_compressed_buffer_size(buffer): ...
def fz_compressed_image_buffer(image): ...
def fz_compressed_image_type(image): ...
def fz_concat(left, right): ...
def fz_contains_rect(a, b): ...
def fz_convert_color(ss, sv, ds, dv, _is, params): ...
def fz_convert_error(code): ...
def fz_convert_indexed_pixmap_to_base(src): ...
def fz_convert_pixmap(pix, cs_des, prf, default_cs, color_params, keep_alpha): ...
def fz_convert_separation_colors(src_cs, src_color, dst_seps, dst_cs, dst_color, color_params): ...
def fz_convert_separation_pixmap_to_base(src): ...
def fz_copy_option(val, dest, maxlen): ...
def fz_copy_pixmap_rect(dest, src, r, default_cs): ...
def fz_copy_rectangle(page, area, crlf): ...
def fz_copy_selection(page, a, b, crlf): ...
def fz_count_active_separations(seps): ...
def fz_count_archive_entries(arch): ...
def fz_count_chapter_pages(doc, chapter): ...
def fz_count_chapters(doc): ...
def fz_count_pages(doc): ...
def fz_count_separations(sep): ...
def fz_create_link(page, bbox, uri): ...
def fz_currentpoint(path): ...
def fz_curveto(path, x0, y0, x1, y1, x2, y2): ...
def fz_curvetov(path, x1, y1, x2, y2): ...
def fz_curvetoy(path, x0, y0, x2, y2): ...
def fz_debug_store(out): ...
def fz_debug_xml(item, level): ...
def fz_decode_tile(pix, decode): ...
def fz_decode_uri(s): ...
def fz_decode_uri_component(s): ...
def fz_decomp_image_from_stream(stm, image, subarea, indexed, l2factor, l2extra): ...
def fz_decouple_type3_font(font, t3doc): ...
def fz_default_cmyk(default_cs): ...
def fz_default_error_callback(user, message): ...
def fz_default_gray(default_cs): ...
def fz_default_halftone(num_comps): ...
def fz_default_output_intent(default_cs): ...
def fz_default_rgb(default_cs): ...
def fz_default_warning_callback(user, message): ...
def fz_defer_reap_end(): ...
def fz_defer_reap_start(): ...
def fz_deflate(dest, compressed_length, source, source_length, level): ...
def fz_deflate_bound(size): ...
def fz_delete_link(page, link): ...
def fz_deskew_pixmap(src, degrees, border): ...
def fz_detach_xml(node): ...
def fz_detect_document(points, src): ...
def fz_device_bgr(): ...
def fz_device_cmyk(): ...
def fz_device_current_scissor(dev): ...
def fz_device_gray(): ...
def fz_device_lab(): ...
def fz_device_rgb(): ...
def fz_dirname(dir, path, dirsize): ...
def fz_disable_device_hints(dev, hints): ...
def fz_disable_icc(): ...
def fz_display_list_is_empty(list): ...
def fz_div255(c, a): ...
def fz_do_always(): ...
def fz_do_catch(): ...
def fz_do_try(): ...
def fz_document_handler_open(handler, stream, accel, dir, recognize_state): ...
def fz_document_handler_recognize(handler, magic): ...
def fz_document_output_intent(doc): ...
def fz_document_supports_accelerator(doc): ...
def fz_dom_add_attribute(elt, att, value): ...
def fz_dom_append_child(parent, child): ...
def fz_dom_attribute(elt, att): ...
def fz_dom_body(dom): ...
def fz_dom_clone(elt): ...
def fz_dom_create_element(dom, tag): ...
def fz_dom_create_text_node(dom, text): ...
def fz_dom_document_element(dom): ...
def fz_dom_find(elt, tag, att, match): ...
def fz_dom_find_next(elt, tag, att, match): ...
def fz_dom_first_child(elt): ...
def fz_dom_get_attribute(elt, i, att): ...
def fz_dom_insert_after(node, new_elt): ...
def fz_dom_insert_before(node, new_elt): ...
def fz_dom_next(elt): ...
def fz_dom_parent(elt): ...
def fz_dom_previous(elt): ...
def fz_dom_remove(elt): ...
def fz_dom_remove_attribute(elt, att): ...
def fz_draw_story(story, dev, ctm): ...
def fz_dump_glyph_cache_stats(out): ...
def fz_duplicate_glyph_names_from_unicode(unicode): ...
def fz_empty_store(): ...
def fz_enable_device_hints(dev, hints): ...
def fz_enable_icc(): ...
def fz_encode_character(font, unicode): ...
def fz_encode_character_by_glyph_name(font, glyphname): ...
def fz_encode_character_sc(font, unicode): ...
def fz_encode_character_with_fallback(font, unicode, script, language, out_font): ...
def fz_encode_uri(s): ...
def fz_encode_uri_component(s): ...
def fz_encode_uri_pathname(s): ...
def fz_end_group(dev): ...
def fz_end_layer(dev): ...
def fz_end_mask(dev): ...
def fz_end_mask_tr(dev, fn): ...
def fz_end_metatext(dev): ...
def fz_end_page(wri): ...
def fz_end_structure(dev): ...
def fz_end_throw_on_repair(): ...
def fz_end_tile(dev): ...
def fz_enumerate_font_cmap(font, cb, opaque): ...
def fz_enumerate_font_cmap2(font): ...
def fz_error_callback(user): ...
def fz_eval_function(func, _in, inlen, out, outlen): ...
def fz_expand_irect(a, expand): ...
def fz_expand_rect(b, expand): ...
def fz_extract_ttf_from_ttc(font): ...
def fz_file_exists(path): ...
def fz_fill_image(dev, image, ctm, alpha, color_params): ...
def fz_fill_image_mask(dev, image, ctm, colorspace, color, alpha, color_params): ...
def fz_fill_path(dev, path, even_odd, ctm, colorspace, color, alpha, color_params): ...
def fz_fill_pixmap_from_display_list(list, ctm, pix): ...
def fz_fill_pixmap_with_color(pix, colorspace, color, color_params): ...
def fz_fill_shade(dev, shade, ctm, alpha, color_params): ...
def fz_fill_text(dev, text, ctm, colorspace, color, alpha, color_params): ...
def fz_filter_store(fn, arg, type): ...
def fz_find_item(drop, key, type): ...
def fz_flush_output(out): ...
def fz_flush_warnings(): ...
def fz_font_ascender(font): ...
def fz_font_bbox(font): ...
def fz_font_descender(font): ...
def fz_font_digest(font, digest): ...
def fz_font_ft_face(font): ...
def fz_font_is_bold(font): ...
def fz_font_is_italic(font): ...
def fz_font_is_monospaced(font): ...
def fz_font_is_serif(font): ...
def fz_font_name(font): ...
def fz_font_t3_procs(font): ...
def fz_format_double(fmt, value): ...
def fz_format_link_uri(doc, dest): ...
def fz_format_output_path(path, size, fmt, page): ...
def fz_free(p): ...
def fz_free_aligned(p): ...
def fz_ft_lock(): ...
def fz_ft_lock_held(): ...
def fz_ft_unlock(): ...
def fz_function_size(func): ...
def fz_gamma_pixmap(pix, gamma): ...
def fz_generate_transition(tpix, opix, npix, time, trans): ...
def fz_get_glyph_name(font, glyph, buf, size): ...
def fz_get_glyph_name2(font, glyph): ...
def fz_get_pixmap_from_image(image, subarea, ctm, w, h): ...
def fz_get_unscaled_pixmap_from_image(image): ...
def fz_getopt(nargc, nargv, ostr): ...
def fz_getopt_long(nargc, nargv, ostr, longopts): ...
def fz_glyph_bbox(glyph): ...
def fz_glyph_bbox_no_ctx(src): ...
def fz_glyph_cacheable(font, gid): ...
def fz_glyph_height(glyph): ...
def fz_glyph_name_from_unicode_sc(unicode): ...
def fz_glyph_width(glyph): ...
def fz_graphics_aa_level(): ...
def fz_graphics_min_line_width(): ...
def fz_gridfit_matrix(as_tiled, m): ...
def fz_grisu(f, s, exp): ...
def fz_grow_buffer(buf): ...
def fz_has_archive_entry(arch, name): ...
def fz_has_option(opts, key, val): ...
def fz_has_permission(doc, p): ...
def fz_hash_filter(table, state, callback): ...
def fz_hash_find(table, key): ...
def fz_hash_for_each(table, state, callback): ...
def fz_hash_insert(table, key, val): ...
def fz_hash_remove(table, key): ...
def fz_hb_lock(): ...
def fz_hb_unlock(): ...
def fz_highlight_selection(page, a, b, quads, max_quads): ...
def fz_highlight_selection2(page, a, b, max_quads): ...
def fz_ignore_error(): ...
def fz_ignore_text(dev, text, ctm): ...
def fz_image_orientation(image): ...
def fz_image_orientation_matrix(image): ...
def fz_image_resolution(image, xres, yres): ...
def fz_image_size(im): ...
def fz_image_type_name(type): ...
def fz_include_point_in_rect(r, p): ...
def fz_init_text_decoder(dec, encoding): ...
def fz_install_load_system_font_funcs(f, f_cjk, f_fallback): ...
def fz_install_load_system_font_funcs2(args): ...
def fz_int2_heap_insert(heap, v): ...
def fz_int2_heap_sort(heap): ...
def fz_int2_heap_uniq(heap): ...
def fz_int_heap_insert(heap, v): ...
def fz_int_heap_sort(heap): ...
def fz_int_heap_uniq(heap): ...
def fz_intersect_irect(a, b): ...
def fz_intersect_rect(a, b): ...
def fz_intptr_heap_insert(heap, v): ...
def fz_intptr_heap_sort(heap): ...
def fz_intptr_heap_uniq(heap): ...
def fz_invert_bitmap(bmp): ...
def fz_invert_matrix(matrix): ...
def fz_invert_pixmap(pix): ...
def fz_invert_pixmap_alpha(pix): ...
def fz_invert_pixmap_luminance(pix): ...
def fz_invert_pixmap_raw(pix): ...
def fz_invert_pixmap_rect(image, rect): ...
def fz_irect_from_rect(rect): ...
def fz_irect_height(r): ...
def fz_irect_width(r): ...
def fz_is_cfb_archive(file): ...
def fz_is_directory(path): ...
def fz_is_document_reflowable(doc): ...
def fz_is_empty_irect(r): ...
def fz_is_empty_quad(q): ...
def fz_is_empty_rect(r): ...
def fz_is_eof(stm): ...
def fz_is_eof_bits(stm): ...
def fz_is_external_link(uri): ...
def fz_is_identity(m): ...
def fz_is_infinite_irect(r): ...
def fz_is_infinite_quad(q): ...
def fz_is_infinite_rect(r): ...
def fz_is_libarchive_archive(file): ...
def fz_is_page_range(s): ...
def fz_is_pixmap_monochrome(pixmap): ...
def fz_is_point_inside_irect(x, y, r): ...
def fz_is_point_inside_quad(p, q): ...
def fz_is_point_inside_rect(p, r): ...
def fz_is_pow2(a): ...
def fz_is_quad_inside_quad(needle, haystack): ...
def fz_is_quad_intersecting_quad(a, b): ...
def fz_is_rectilinear(m): ...
def fz_is_tar_archive(file): ...
def fz_is_valid_blend_colorspace(cs): ...
def fz_is_valid_irect(r): ...
def fz_is_valid_quad(q): ...
def fz_is_valid_rect(r): ...
def fz_is_zip_archive(file): ...
def fz_iso8859_1_from_unicode(u): ...
def fz_iso8859_7_from_unicode(u): ...
def fz_jbig2_globals_data(globals): ...
def fz_koi8u_from_unicode(u): ...
def fz_last_page(doc): ...
def fz_layout_document(doc, w, h, em): ...
def fz_lineto(path, x, y): ...
def fz_list_archive_entry(arch, idx): ...
def fz_load_bmp_subimage(buf, len, subimage): ...
def fz_load_bmp_subimage_count(buf, len): ...
def fz_load_chapter_page(doc, chapter, page): ...
def fz_load_fallback_font(script, language, serif, bold, italic): ...
def fz_load_jbig2_globals(buf): ...
def fz_load_jbig2_subimage(buf, len, subimage): ...
def fz_load_jbig2_subimage_count(buf, len): ...
def fz_load_jpx(data, size, cs): ...
def fz_load_links(page): ...
def fz_load_outline(doc): ...
def fz_load_outline_from_iterator(iter): ...
def fz_load_page(doc, number): ...
def fz_load_pnm_subimage(buf, len, subimage): ...
def fz_load_pnm_subimage_count(buf, len): ...
def fz_load_system_cjk_font(name, ordering, serif): ...
def fz_load_system_font(name, bold, italic, needs_exact_metrics): ...
def fz_load_tiff_subimage(buf, len, subimage): ...
def fz_load_tiff_subimage_count(buf, len): ...
def fz_load_user_css(filename): ...
def fz_location_from_page_number(doc, number): ...
def fz_lock(lock): ...
def fz_log_error(str): ...
def fz_lookup_base14_font(name, len): ...
def fz_lookup_blendmode(name): ...
def fz_lookup_bookmark(doc, mark): ...
def fz_lookup_builtin_font(name, bold, italic, len): ...
def fz_lookup_cjk_font(ordering, len, index): ...
def fz_lookup_cjk_font_by_language(lang, len, subfont): ...
def fz_lookup_cjk_ordering_by_language(name): ...
def fz_lookup_image_type(type): ...
def fz_lookup_metadata(doc, key, buf, size): ...
def fz_lookup_metadata2(doc, key): ...
def fz_lookup_noto_boxes_font(len): ...
def fz_lookup_noto_emoji_font(len): ...
def fz_lookup_noto_font(script, lang, len, subfont): ...
def fz_lookup_noto_math_font(len): ...
def fz_lookup_noto_music_font(len): ...
def fz_lookup_noto_stem_from_script(script, language): ...
def fz_lookup_noto_symbol1_font(len): ...
def fz_lookup_noto_symbol2_font(len): ...
def fz_lookup_rendering_intent(name): ...
def fz_make_bookmark(doc, loc): ...
def fz_make_irect(x0, y0, x1, y1): ...
def fz_make_location(chapter, page): ...
def fz_make_matrix(a, b, c, d, e, f): ...
def fz_make_point(x, y): ...
def fz_make_quad(ul_x, ul_y, ur_x, ur_y, ll_x, ll_y, lr_x, lr_y): ...
def fz_make_rect(x0, y0, x1, y1): ...
def fz_malloc(size): ...
def fz_malloc_aligned(size, align): ...
def fz_malloc_no_throw(size): ...
def fz_matrix_expansion(m): ...
def fz_matrix_max_expansion(m): ...
def fz_max(a, b): ...
def fz_maxi(a, b): ...
def fz_maxi64(a, b): ...
def fz_maxz(a, b): ...
def fz_md5_buffer(buffer, digest): ...
def fz_md5_final(state, digest): ...
def fz_md5_final2(md5): ...
def fz_md5_init(state): ...
def fz_md5_pixmap(pixmap, digest): ...
def fz_md5_pixmap2(pixmap): ...
def fz_md5_update(state, input, inlen): ...
def fz_md5_update_int64(state, i): ...
def fz_measure_string(user_font, trm, s, wmode, bidi_level, markup_dir, language): ...
def fz_memmem(haystack, haystacklen, needle, needlelen): ...
def fz_memrnd(block, len): ...
def fz_min(a, b): ...
def fz_mini(a, b): ...
def fz_mini64(a, b): ...
def fz_minz(a, b): ...
def fz_mkdir(path): ...
def fz_morph_error(fromcode, tocode): ...
def fz_mount_multi_archive(arch_, sub, path): ...
def fz_moveto(path, x, y): ...
def fz_mul255(a, b): ...
def fz_needs_password(doc): ...
def fz_new_archive_of_size(file, size): ...
def fz_new_base14_font(name): ...
def fz_new_bbox_device(rectp): ...
def fz_new_bitmap(w, h, n, xres, yres): ...
def fz_new_bitmap_from_pixmap(pix, ht): ...
def fz_new_bitmap_from_pixmap_band(pix, ht, band_start): ...
def fz_new_buffer(capacity): ...
def fz_new_buffer_from_base64(data, size): ...
def fz_new_buffer_from_copied_data(data, size): ...
def fz_new_buffer_from_data(data, size): ...
def fz_new_buffer_from_display_list(list, options): ...
def fz_new_buffer_from_image_as_jpeg(image, color_params, quality, invert_cmyk): ...
def fz_new_buffer_from_image_as_jpx(image, color_params, quality): ...
def fz_new_buffer_from_image_as_pam(image, color_params): ...
def fz_new_buffer_from_image_as_png(image, color_params): ...
def fz_new_buffer_from_image_as_pnm(image, color_params): ...
def fz_new_buffer_from_image_as_psd(image, color_params): ...
def fz_new_buffer_from_page(page, options): ...
def fz_new_buffer_from_page_number(doc, number, options): ...
def fz_new_buffer_from_page_with_format(page, format, options, transform, cookie): ...
def fz_new_buffer_from_pixmap_as_jpeg(pixmap, color_params, quality, invert_cmyk): ...
def fz_new_buffer_from_pixmap_as_jpx(pix, color_params, quality): ...
def fz_new_buffer_from_pixmap_as_pam(pixmap, color_params): ...
def fz_new_buffer_from_pixmap_as_png(pixmap, color_params): ...
def fz_new_buffer_from_pixmap_as_pnm(pixmap, color_params): ...
def fz_new_buffer_from_pixmap_as_psd(pix, color_params): ...
def fz_new_buffer_from_shared_data(data, size): ...
def fz_new_buffer_from_stext_page(text): ...
def fz_new_builtin_font(name, is_bold, is_italic): ...
def fz_new_cal_gray_colorspace(wp, bp, gamma): ...
def fz_new_cal_rgb_colorspace(wp, bp, gamma, matrix): ...
def fz_new_cjk_font(ordering): ...
def fz_new_colorspace(type, flags, n, name): ...
def fz_new_compressed_buffer(): ...
def fz_new_default_colorspaces(): ...
def fz_new_deflated_data(compressed_length, source, source_length, level): ...
def fz_new_deflated_data_from_buffer(compressed_length, buffer, level): ...
def fz_new_device_of_size(size): ...
def fz_new_display_list(mediabox): ...
def fz_new_display_list_from_page(page): ...
def fz_new_display_list_from_page_contents(page): ...
def fz_new_display_list_from_page_number(doc, number): ...
def fz_new_display_list_from_svg(buf, base_uri, dir, w, h): ...
def fz_new_display_list_from_svg_xml(xmldoc, xml, base_uri, dir, w, h): ...
def fz_new_document_of_size(size): ...
def fz_new_dom(tag): ...
def fz_new_dom_node(dom, tag): ...
def fz_new_dom_text_node(dom, text): ...
def fz_new_draw_device(transform, dest): ...
def fz_new_draw_device_type3(transform, dest): ...
def fz_new_draw_device_with_bbox(transform, dest, clip): ...
def fz_new_draw_device_with_bbox_proof(transform, dest, clip, cs): ...
def fz_new_draw_device_with_options(options, mediabox, pixmap): ...
def fz_new_draw_device_with_proof(transform, dest, proof_cs): ...
def fz_new_font_from_buffer(name, buffer, index, use_glyph_bbox): ...
def fz_new_font_from_file(name, path, index, use_glyph_bbox): ...
def fz_new_font_from_memory(name, data, len, index, use_glyph_bbox): ...
def fz_new_function_of_size(size, size2, m, n, eval, drop): ...
def fz_new_icc_colorspace(type, flags, name, buf): ...
def fz_new_image_from_buffer(buffer): ...
def fz_new_image_from_compressed_buffer(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, buffer, mask): ...
def fz_new_image_from_compressed_buffer2(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, buffer, mask): ...
def fz_new_image_from_display_list(w, h, list): ...
def fz_new_image_from_file(path): ...
def fz_new_image_from_pixmap(pixmap, mask): ...
def fz_new_image_from_svg(buf, base_uri, dir): ...
def fz_new_image_from_svg_xml(xmldoc, xml, base_uri, dir): ...
def fz_new_image_of_size(w, h, bpc, colorspace, xres, yres, interpolate, imagemask, decode, colorkey, mask, size, get_pixmap, get_size, drop): ...
def fz_new_indexed_colorspace(base, high, lookup): ...
def fz_new_link_of_size(size, rect, uri): ...
def fz_new_list_device(list): ...
def fz_new_multi_archive(): ...
def fz_new_ocr_device(target, ctm, mediabox, with_list, language, datadir, progress, progress_arg): ...
def fz_new_outline(): ...
def fz_new_page_of_size(size, doc): ...
def fz_new_path(): ...
def fz_new_pdf_document_from_fz_document(ptr): ...
def fz_new_pixmap(cs, w, h, seps, alpha): ...
def fz_new_pixmap_from_alpha_channel(src): ...
def fz_new_pixmap_from_color_and_mask(color, mask): ...
def fz_new_pixmap_from_display_list(list, ctm, cs, alpha): ...
def fz_new_pixmap_from_display_list_with_separations(list, ctm, cs, seps, alpha): ...
def fz_new_pixmap_from_page(page, ctm, cs, alpha): ...
def fz_new_pixmap_from_page_contents(page, ctm, cs, alpha): ...
def fz_new_pixmap_from_page_contents_with_separations(page, ctm, cs, seps, alpha): ...
def fz_new_pixmap_from_page_number(doc, number, ctm, cs, alpha): ...
def fz_new_pixmap_from_page_number_with_separations(doc, number, ctm, cs, seps, alpha): ...
def fz_new_pixmap_from_page_with_separations(page, ctm, cs, seps, alpha): ...
def fz_new_pixmap_from_pixmap(pixmap, rect): ...
def fz_new_pixmap_with_bbox(colorspace, bbox, seps, alpha): ...
def fz_new_pixmap_with_bbox_and_data(colorspace, rect, seps, alpha, samples): ...
def fz_new_pixmap_with_data(colorspace, w, h, seps, alpha, stride, samples): ...
def fz_new_separations(controllable): ...
def fz_new_stext_device(page, options): ...
def fz_new_store_context(max): ...
def fz_new_stream(state, next, drop): ...
def fz_new_string(str): ...
def fz_new_stroke_state(): ...
def fz_new_stroke_state_with_dash_len(len): ...
def fz_new_svg_device(out, page_width, page_height, text_format, reuse_images): ...
def fz_new_svg_device_with_id(out, page_width, page_height, text_format, reuse_images, id): ...
def fz_new_test_device(is_color, threshold, options, passthrough): ...
def fz_new_text(): ...
def fz_new_trace_device(out): ...
def fz_new_tree_archive(tree): ...
def fz_new_type3_font(name, matrix): ...
def fz_new_xhtml_document_from_document(old_doc, opts): ...
def fz_new_xmltext_device(out): ...
def fz_next_page(doc, loc): ...
def fz_normalize_vector(p): ...
def fz_open_a85d(chain): ...
def fz_open_accelerated_document(filename, accel): ...
def fz_open_accelerated_document_with_stream(magic, stream, accel): ...
def fz_open_accelerated_document_with_stream_and_dir(magic, stream, accel, dir): ...
def fz_open_aesd(chain, key, keylen): ...
def fz_open_ahxd(chain): ...
def fz_open_arc4(chain, key, keylen): ...
def fz_open_archive(filename): ...
def fz_open_archive_entry(arch, name): ...
def fz_open_archive_with_stream(file): ...
def fz_open_buffer(buf): ...
def fz_open_cfb_archive(filename): ...
def fz_open_cfb_archive_with_stream(file): ...
def fz_open_compressed_buffer(arg_0): ...
def fz_open_concat(max, pad): ...
def fz_open_dctd(chain, color_transform, invert_cmyk, l2factor, jpegtables): ...
def fz_open_directory(path): ...
def fz_open_document(filename): ...
def fz_open_document_with_buffer(magic, buffer): ...
def fz_open_document_with_stream(magic, stream): ...
def fz_open_document_with_stream_and_dir(magic, stream, dir): ...
def fz_open_endstream_filter(chain, len, offset): ...
def fz_open_faxd(chain, k, end_of_line, encoded_byte_align, columns, rows, end_of_block, black_is_1): ...
def fz_open_file(filename): ...
def fz_open_file_autodelete(filename): ...
def fz_open_file_ptr_no_close(file): ...
def fz_open_flated(chain, window_bits): ...
def fz_open_image_decomp_stream(arg_0, arg_1, l2factor): ...
def fz_open_image_decomp_stream_from_buffer(arg_0, l2factor): ...
def fz_open_jbig2d(chain, globals, embedded): ...
def fz_open_leecher(chain, buf): ...
def fz_open_libarchive_archive(filename): ...
def fz_open_libarchive_archive_with_stream(file): ...
def fz_open_libarchived(chain): ...
def fz_open_lzwd(chain, early_change, min_bits, reverse_bits, old_tiff): ...
def fz_open_memory(data, len): ...
def fz_open_null_filter(chain, len, offset): ...
def fz_open_predict(chain, predictor, columns, colors, bpc): ...
def fz_open_range_filter(chain, ranges, nranges): ...
def fz_open_reflowed_document(underdoc, opts): ...
def fz_open_rld(chain): ...
def fz_open_sgilog16(chain, w): ...
def fz_open_sgilog24(chain, w): ...
def fz_open_sgilog32(chain, w): ...
def fz_open_tar_archive(filename): ...
def fz_open_tar_archive_with_stream(file): ...
def fz_open_thunder(chain, w): ...
def fz_open_zip_archive(path): ...
def fz_open_zip_archive_with_stream(file): ...
def fz_opt_from_list(opt, optlist): ...
def fz_option_eq(a, b): ...
def fz_outline_glyph(font, gid, ctm): ...
def fz_outline_iterator_delete(iter): ...
def fz_outline_iterator_down(iter): ...
def fz_outline_iterator_item(iter): ...
def fz_outline_iterator_next(iter): ...
def fz_outline_iterator_prev(iter): ...
def fz_outline_iterator_up(iter): ...
def fz_output_accelerator(doc, accel): ...
def fz_output_supports_stream(out): ...
def fz_output_xml(out, item, level): ...
def fz_pack_path(pack, path): ...
def fz_packed_path_size(path): ...
def fz_page_label(page, buf, size): ...
def fz_page_number_from_location(doc, loc): ...
def fz_page_presentation(page, transition, duration): ...
def fz_page_separations(page): ...
def fz_page_uses_overprint(page): ...
def fz_paint_shade(shade, override_cs, ctm, dest, color_params, bbox, eop, cache): ...
def fz_parse_page_range(s, a, b, n): ...
def fz_parse_pdfocr_options(opts, args): ...
def fz_parse_stext_options(opts, string): ...
def fz_parse_xml(buf, preserve_white): ...
def fz_parse_xml_archive_entry(dir, filename, preserve_white): ...
def fz_parse_xml_from_html5(buf): ...
def fz_parse_xml_stream(stream, preserve_white): ...
def fz_pcl_preset(opts, preset): ...
def fz_pdfocr_band_writer_set_progress(writer, progress_fn, progress_arg): ...
def fz_pdfocr_writer_set_progress(writer, progress, arg_2): ...
def fz_peek_byte(stm): ...
def fz_pixmap_alpha(pix): ...
def fz_pixmap_bbox(pix): ...
def fz_pixmap_colorants(pix): ...
def fz_pixmap_colorspace(pix): ...
def fz_pixmap_components(pix): ...
def fz_pixmap_height(pix): ...
def fz_pixmap_image_tile(cimg): ...
def fz_pixmap_samples(pix): ...
def fz_pixmap_samples_int(pixmap): ...
def fz_pixmap_size(pix): ...
def fz_pixmap_spots(pix): ...
def fz_pixmap_stride(pix): ...
def fz_pixmap_width(pix): ...
def fz_pixmap_x(pix): ...
def fz_pixmap_y(pix): ...
def fz_place_story(story, where, filled): ...
def fz_place_story_flags(story, where, filled, flags): ...
def fz_pool_alloc(pool, size): ...
def fz_pool_size(pool): ...
def fz_pool_strdup(pool, s): ...
def fz_pop_clip(dev): ...
def fz_post_scale(m, sx, sy): ...
def fz_pre_rotate(m, degrees): ...
def fz_pre_scale(m, sx, sy): ...
def fz_pre_shear(m, sx, sy): ...
def fz_pre_translate(m, tx, ty): ...
def fz_prepare_t3_glyph(font, gid): ...
def fz_previous_page(doc, loc): ...
def fz_print_stext_header_as_html(out): ...
def fz_print_stext_header_as_xhtml(out): ...
def fz_print_stext_page_as_html(out, page, id): ...
def fz_print_stext_page_as_json(out, page, scale): ...
def fz_print_stext_page_as_text(out, page): ...
def fz_print_stext_page_as_xhtml(out, page, id): ...
def fz_print_stext_page_as_xml(out, page, id): ...
def fz_print_stext_trailer_as_html(out): ...
def fz_print_stext_trailer_as_xhtml(out): ...
def fz_process_opened_pages(doc, process_openend_page, state): ...
def fz_process_shade(shade, ctm, scissor, prepare, process, process_arg): ...
def fz_ptr_heap_insert(heap, v, HEAP_CMP): ...
def fz_ptr_heap_sort(heap, HEAP_CMP): ...
def fz_ptr_heap_uniq(heap, HEAP_CMP): ...
def fz_purge_glyph_cache(): ...
def fz_quad_from_rect(r): ...
def fz_quadto(path, x0, y0, x1, y1): ...
def fz_read(stm, data, len): ...
def fz_read_all(stm, initial): ...
def fz_read_archive_entry(arch, name): ...
def fz_read_best(stm, initial, truncated, worst_case): ...
def fz_read_bits(stm, n): ...
def fz_read_byte(stm): ...
def fz_read_file(filename): ...
def fz_read_float(stm): ...
def fz_read_float_le(stm): ...
def fz_read_int16(stm): ...
def fz_read_int16_le(stm): ...
def fz_read_int32(stm): ...
def fz_read_int32_le(stm): ...
def fz_read_int64(stm): ...
def fz_read_int64_le(stm): ...
def fz_read_line(stm, buf, max): ...
def fz_read_rbits(stm, n): ...
def fz_read_rune(_in): ...
def fz_read_string(stm, buffer, len): ...
def fz_read_uint16(stm): ...
def fz_read_uint16_le(stm): ...
def fz_read_uint24(stm): ...
def fz_read_uint24_le(stm): ...
def fz_read_uint32(stm): ...
def fz_read_uint32_le(stm): ...
def fz_read_uint64(stm): ...
def fz_read_uint64_le(stm): ...
def fz_read_utf16_be(stm): ...
def fz_read_utf16_le(stm): ...
def fz_realloc(p, size): ...
def fz_realloc_no_throw(p, size): ...
def fz_realpath(path, resolved_path): ...
def fz_recognize_image_format(p): ...
def fz_rect_from_irect(bbox): ...
def fz_rect_from_quad(q): ...
def fz_rectto(path, x0, y0, x1, y1): ...
def fz_register_archive_handler(handler): ...
def fz_register_document_handler(handler): ...
def fz_register_document_handlers(): ...
def fz_remove_item(drop, key, type): ...
def fz_render_flags(dev, set, clear): ...
def fz_render_glyph_pixmap(font, gid, ctm, scissor, aa): ...
def fz_render_t3_glyph_direct(dev, font, gid, trm, gstate, def_cs): ...
def fz_rendering_intent_name(ri): ...
def fz_report_error(): ...
def fz_reset_output(arg_0): ...
def fz_reset_story(story): ...
def fz_resize_buffer(buf, capacity): ...
def fz_resolve_link(doc, uri, xp, yp): ...
def fz_rethrow(): ...
def fz_rethrow_if(errcode): ...
def fz_rethrow_unless(errcode): ...
def fz_rotate(degrees): ...
def fz_round_rect(rect): ...
def fz_run_display_list(list, dev, ctm, scissor, cookie): ...
def fz_run_document_structure(doc, dev, cookie): ...
def fz_run_page(page, dev, transform, cookie): ...
def fz_run_page_annots(page, dev, transform, cookie): ...
def fz_run_page_contents(page, dev, transform, cookie): ...
def fz_run_page_widgets(page, dev, transform, cookie): ...
def fz_run_t3_glyph(font, gid, trm, dev): ...
def fz_runeidx(str, p): ...
def fz_runelen(rune): ...
def fz_runeptr(str, idx): ...
def fz_runetochar(str, rune): ...
def fz_samples_get(pixmap, offset): ...
def fz_samples_set(pixmap, offset, value): ...
def fz_save_accelerator(doc, accel): ...
def fz_save_bitmap_as_pbm(bitmap, filename): ...
def fz_save_bitmap_as_pcl(bitmap, filename, append, pcl): ...
def fz_save_bitmap_as_pkm(bitmap, filename): ...
def fz_save_bitmap_as_pwg(bitmap, filename, append, pwg): ...
def fz_save_buffer(buf, filename): ...
def fz_save_pixmap_as_jpeg(pixmap, filename, quality): ...
def fz_save_pixmap_as_jpx(pixmap, filename, q): ...
def fz_save_pixmap_as_pam(pixmap, filename): ...
def fz_save_pixmap_as_pbm(pixmap, filename): ...
def fz_save_pixmap_as_pcl(pixmap, filename, append, pcl): ...
def fz_save_pixmap_as_pclm(pixmap, filename, append, options): ...
def fz_save_pixmap_as_pdfocr(pixmap, filename, append, options): ...
def fz_save_pixmap_as_pkm(pixmap, filename): ...
def fz_save_pixmap_as_png(pixmap, filename): ...
def fz_save_pixmap_as_pnm(pixmap, filename): ...
def fz_save_pixmap_as_ps(pixmap, filename, append): ...
def fz_save_pixmap_as_psd(pixmap, filename): ...
def fz_save_pixmap_as_pwg(pixmap, filename, append, pwg): ...
def fz_save_xml(root, path, indented): ...
def fz_scale(sx, sy): ...
def fz_scale_pixmap(src, x, y, w, h, clip): ...
def fz_search_chapter_page_number(doc, chapter, page, needle, hit_mark, hit_bbox, hit_max): ...
def fz_search_chapter_page_number_cb(doc, chapter, page, needle, cb, opaque): ...
def fz_search_display_list(list, needle, hit_mark, hit_bbox, hit_max): ...
def fz_search_display_list_cb(list, needle, cb, opaque): ...
def fz_search_page(page, needle, hit_mark, hit_bbox, hit_max): ...
def fz_search_page2(doc, number, needle, hit_max): ...
def fz_search_page_cb(page, needle, cb, opaque): ...
def fz_search_page_number(doc, number, needle, hit_mark, hit_bbox, hit_max): ...
def fz_search_page_number_cb(doc, number, needle, cb, opaque): ...
def fz_search_stext_page(text, needle, hit_mark, hit_bbox, hit_max): ...
def fz_search_stext_page_cb(text, needle, cb, opaque): ...
def fz_seek(stm, offset, whence): ...
def fz_seek_output(out, off, whence): ...
def fz_segment_stext_page(page): ...
def fz_separation_current_behavior(sep, separation): ...
def fz_separation_equivalent(seps, idx, dst_cs, dst_color, prf, color_params): ...
def fz_separation_name(sep, separation): ...
def fz_set_aa_level(bits): ...
def fz_set_compressed_image_buffer(cimg, buf): ...
def fz_set_default_cmyk(default_cs, cs): ...
def fz_set_default_colorspaces(dev, default_cs): ...
def fz_set_default_gray(default_cs, cs): ...
def fz_set_default_output_intent(default_cs, cs): ...
def fz_set_default_rgb(default_cs, cs): ...
def fz_set_error_callback(error_cb, user): ...
def fz_set_font_bbox(font, xmin, ymin, xmax, ymax): ...
def fz_set_font_embedding(font, embed): ...
def fz_set_graphics_aa_level(bits): ...
def fz_set_graphics_min_line_width(min_line_width): ...
def fz_set_link_rect(link, rect): ...
def fz_set_link_uri(link, uri): ...
def fz_set_metadata(doc, key, value): ...
def fz_set_pixmap_image_tile(cimg, pix): ...
def fz_set_pixmap_resolution(pix, xres, yres): ...
def fz_set_separation_behavior(sep, separation, behavior): ...
def fz_set_stddbg(out): ...
def fz_set_text_aa_level(bits): ...
def fz_set_use_document_css(use): ...
def fz_set_user_context(user): ...
def fz_set_user_css(text): ...
def fz_set_warning_callback(warning_cb, user): ...
def fz_sha256_final(state, digest): ...
def fz_sha256_init(state): ...
def fz_sha256_update(state, input, inlen): ...
def fz_sha384_final(state, digest): ...
def fz_sha384_init(state): ...
def fz_sha384_update(state, input, inlen): ...
def fz_sha512_final(state, digest): ...
def fz_sha512_init(state): ...
def fz_sha512_update(state, input, inlen): ...
def fz_shear(sx, sy): ...
def fz_show_glyph(text, font, trm, glyph, unicode, wmode, bidi_level, markup_dir, language): ...
def fz_show_glyph_aux(text, font, trm, adv, glyph, unicode, cid, wmode, bidi_level, markup_dir, lang): ...
def fz_show_string(text, font, trm, s, wmode, bidi_level, markup_dir, language): ...
def fz_shrink_store(percent): ...
def fz_skew_detect(pixmap): ...
def fz_skip(stm, len): ...
def fz_skip_space(stm): ...
def fz_skip_string(stm, str): ...
def fz_slice_buffer(buf, start, end): ...
def fz_snap_selection(page, ap, bp, mode): ...
def fz_start_throw_on_repair(): ...
def fz_stat_ctime(path): ...
def fz_stat_mtime(path): ...
def fz_store_item(key, val, itemsize, type): ...
def fz_store_scavenge(size, phase): ...
def fz_store_scavenge_external(size, phase): ...
def fz_story_document(story): ...
def fz_story_positions(story, cb, arg): ...
def fz_story_warnings(story): ...
def fz_strcasecmp(a, b): ...
def fz_strdup(s): ...
def fz_stream_filename(stm): ...
def fz_stream_from_output(arg_0): ...
def fz_string_from_box_type(box): ...
def fz_string_from_buffer(buf): ...
def fz_string_from_text_language(str, lang): ...
def fz_string_from_text_language2(lang): ...
def fz_strlcat(dst, src, n): ...
def fz_strlcpy(dst, src, n): ...
def fz_strncasecmp(a, b, n): ...
def fz_strnlen(s, maxlen): ...
def fz_stroke_path(dev, path, stroke, ctm, colorspace, color, alpha, color_params): ...
def fz_stroke_text(dev, text, stroke, ctm, colorspace, color, alpha, color_params): ...
def fz_strsep(stringp, delim): ...
def fz_strtof(s, es): ...
def fz_structure_from_string(str): ...
def fz_structure_to_string(type): ...
def fz_subpixel_adjust(ctm, subpix_ctm, qe, qf): ...
def fz_subsample_pixmap(tile, factor): ...
def fz_subset_cff_for_gids(orig, gids, num_gids, symbolic, cidfont): ...
def fz_subset_ttf_for_gids(orig, gids, num_gids, symbolic, cidfont): ...
def fz_sync_bits(stm): ...
def fz_tell(stm): ...
def fz_tell_output(out): ...
def fz_terminate_buffer(buf): ...
def fz_text_aa_level(): ...
def fz_text_language_from_string(str): ...
def fz_tint_pixmap(pix, black, white): ...
def fz_tolower(c): ...
def fz_toupper(c): ...
def fz_transform_page(mediabox, resolution, rotate): ...
def fz_transform_path(path, transform): ...
def fz_transform_point(point, m): ...
def fz_transform_point_xy(x, y, m): ...
def fz_transform_quad(q, m): ...
def fz_transform_rect(rect, m): ...
def fz_transform_vector(vector, m): ...
def fz_translate(tx, ty): ...
def fz_translate_irect(a, xoff, yoff): ...
def fz_translate_rect(a, xoff, yoff): ...
def fz_tree_archive_add_buffer(arch_, name, buf): ...
def fz_tree_archive_add_data(arch_, name, data, size): ...
def fz_tree_lookup(node, key): ...
def fz_trim_buffer(buf): ...
def fz_trim_path(path): ...
def fz_truncate_output(arg_0): ...
def fz_try_invert_matrix(inv, src): ...
def fz_try_open_archive_entry(arch, name): ...
def fz_try_open_archive_with_stream(file): ...
def fz_try_open_file(name): ...
def fz_try_parse_xml_archive_entry(dir, filename, preserve_white): ...
def fz_try_read_archive_entry(arch, name): ...
def fz_try_read_file(filename): ...
def fz_tune_image_decode(image_decode, arg): ...
def fz_tune_image_scale(image_scale, arg): ...
def fz_unicode_from_glyph_name(name): ...
def fz_unicode_from_glyph_name_strict(name): ...
def fz_union_rect(a, b): ...
def fz_unlock(lock): ...
def fz_unpack_stream(src, depth, w, h, n, indexed, pad, skip): ...
def fz_unread_byte(stm): ...
def fz_unshare_stroke_state(shared): ...
def fz_unshare_stroke_state_with_dash_len(shared, len): ...
def fz_urldecode(url): ...
def fz_use_document_css(): ...
def fz_user_context(): ...
def fz_user_css(): ...
def fz_utflen(s): ...
def fz_var_imp(arg_0): ...
def fz_walk_path(path, walker, arg): ...
def fz_warn(*args): ...
def fz_warning_callback(user): ...
def fz_warp_pixmap(src, points, width, height): ...
def fz_windows_1250_from_unicode(u): ...
def fz_windows_1251_from_unicode(u): ...
def fz_windows_1252_from_unicode(u): ...
def fz_write_band(writer, stride, band_height, samples): ...
def fz_write_base64(out, data, size, newline): ...
def fz_write_base64_buffer(out, data, newline): ...
def fz_write_bitmap_as_pbm(out, bitmap): ...
def fz_write_bitmap_as_pcl(out, bitmap, pcl): ...
def fz_write_bitmap_as_pkm(out, bitmap): ...
def fz_write_bitmap_as_pwg(out, bitmap, pwg): ...
def fz_write_bitmap_as_pwg_page(out, bitmap, pwg): ...
def fz_write_bits(out, data, num_bits): ...
def fz_write_bits_sync(out): ...
def fz_write_buffer(out, data): ...
def fz_write_byte(out, x): ...
def fz_write_char(out, x): ...
def fz_write_data(out, data, size): ...
def fz_write_document(wri, doc): ...
def fz_write_float_be(out, f): ...
def fz_write_float_le(out, f): ...
def fz_write_header(writer, w, h, n, alpha, xres, yres, pagenum, cs, seps): ...
def fz_write_image_as_data_uri(out, image): ...
def fz_write_int16_be(out, x): ...
def fz_write_int16_le(out, x): ...
def fz_write_int32_be(out, x): ...
def fz_write_int32_le(out, x): ...
def fz_write_pixmap_as_data_uri(out, pixmap): ...
def fz_write_pixmap_as_jpeg(out, pix, quality, invert_cmyk): ...
def fz_write_pixmap_as_jpx(out, pix, quality): ...
def fz_write_pixmap_as_pam(out, pixmap): ...
def fz_write_pixmap_as_pcl(out, pixmap, pcl): ...
def fz_write_pixmap_as_pclm(out, pixmap, options): ...
def fz_write_pixmap_as_pdfocr(out, pixmap, options): ...
def fz_write_pixmap_as_png(out, pixmap): ...
def fz_write_pixmap_as_pnm(out, pixmap): ...
def fz_write_pixmap_as_ps(out, pixmap): ...
def fz_write_pixmap_as_psd(out, pixmap): ...
def fz_write_pixmap_as_pwg(out, pixmap, pwg): ...
def fz_write_pixmap_as_pwg_page(out, pixmap, pwg): ...
def fz_write_ps_file_header(out): ...
def fz_write_ps_file_trailer(out, pages): ...
def fz_write_pwg_file_header(out): ...
def fz_write_rune(out, rune): ...
def fz_write_stabilized_story(writer, user_css, em, contentfn, contentfn_ref, rectfn, rectfn_ref, pagefn, pagefn_ref, dir): ...
def fz_write_story(writer, story, rectfn, rectfn_ref, positionfn, positionfn_ref, pagefn, pagefn_ref): ...
def fz_write_stream(out, _in): ...
def fz_write_string(out, s): ...
def fz_write_uint16_be(out, x): ...
def fz_write_uint16_le(out, x): ...
def fz_write_uint32_be(out, x): ...
def fz_write_uint32_le(out, x): ...
def fz_write_xml(root, out, indented): ...
def fz_write_zip_entry(zip, name, buf, compress): ...
def fz_xml_add_att(pool, node, key, val): ...
def fz_xml_att(item, att): ...
def fz_xml_att_alt(item, one, two): ...
def fz_xml_att_eq(item, name, match): ...
def fz_xml_down(item): ...
def fz_xml_find(item, tag): ...
def fz_xml_find_dfs(item, tag, att, match): ...
def fz_xml_find_dfs_top(item, tag, att, match, top): ...
def fz_xml_find_down(item, tag): ...
def fz_xml_find_down_match(item, tag, att, match): ...
def fz_xml_find_match(item, tag, att, match): ...
def fz_xml_find_next(item, tag): ...
def fz_xml_find_next_dfs(item, tag, att, match): ...
def fz_xml_find_next_dfs_top(item, tag, att, match, top): ...
def fz_xml_find_next_match(item, tag, att, match): ...
def fz_xml_is_tag(item, name): ...
def fz_xml_next(item): ...
def fz_xml_prev(item): ...
def fz_xml_root(xml): ...
def fz_xml_tag(item): ...
def fz_xml_text(item): ...
def fz_xml_up(item): ...
def pdf_abandon_operation(doc): ...
def pdf_access_exec_menu_item_event(evt): ...
def pdf_add_annot_border_dash_item(annot, length): ...
def pdf_add_annot_ink_list(annot, n, stroke): ...
def pdf_add_annot_ink_list_stroke(annot): ...
def pdf_add_annot_ink_list_stroke_vertex(annot, p): ...
def pdf_add_annot_quad_point(annot, quad): ...
def pdf_add_annot_vertex(annot, p): ...
def pdf_add_cid_font(doc, font): ...
def pdf_add_cjk_font(doc, font, script, wmode, serif): ...
def pdf_add_codespace(cmap, low, high, n): ...
def pdf_add_embedded_file(doc, filename, mimetype, contents, created, modifed, add_checksum): ...
def pdf_add_hmtx(font, lo, hi, w): ...
def pdf_add_image(doc, image): ...
def pdf_add_journal_fragment(doc, parent, copy, copy_stream, newobj): ...
def pdf_add_new_array(doc, initial): ...
def pdf_add_new_dict(doc, initial): ...
def pdf_add_object(doc, obj): ...
def pdf_add_page(doc, mediabox, rotate, resources, contents): ...
def pdf_add_simple_font(doc, font, encoding): ...
def pdf_add_stream(doc, buf, obj, compressed): ...
def pdf_add_substitute_font(doc, font): ...
def pdf_add_vmtx(font, lo, hi, x, y, w): ...
def pdf_annot_MK_BC(annot, n, color): ...
def pdf_annot_MK_BC_rgb(annot, rgb): ...
def pdf_annot_MK_BG(annot, n, color): ...
def pdf_annot_MK_BG_rgb(annot, rgb): ...
def pdf_annot_active(annot): ...
def pdf_annot_ap(annot): ...
def pdf_annot_author(annot): ...
def pdf_annot_border(annot): ...
def pdf_annot_border_dash_count(annot): ...
def pdf_annot_border_dash_item(annot, i): ...
def pdf_annot_border_effect(annot): ...
def pdf_annot_border_effect_intensity(annot): ...
def pdf_annot_border_style(annot): ...
def pdf_annot_border_width(annot): ...
def pdf_annot_callout_line(annot, callout, n): ...
def pdf_annot_callout_point(annot): ...
def pdf_annot_callout_style(annot): ...
def pdf_annot_color(annot, n, color): ...
def pdf_annot_contents(annot): ...
def pdf_annot_creation_date(annot): ...
def pdf_annot_default_appearance(annot, font, size, n, color): ...
def pdf_annot_default_appearance_unmapped(annot, font_name, font_name_len, size, n, color): ...
def pdf_annot_ensure_local_xref(annot): ...
def pdf_annot_event_blur(annot): ...
def pdf_annot_event_down(annot): ...
def pdf_annot_event_enter(annot): ...
def pdf_annot_event_exit(annot): ...
def pdf_annot_event_focus(annot): ...
def pdf_annot_event_page_close(annot): ...
def pdf_annot_event_page_invisible(annot): ...
def pdf_annot_event_page_open(annot): ...
def pdf_annot_event_page_visible(annot): ...
def pdf_annot_event_up(annot): ...
def pdf_annot_field_event_keystroke(doc, annot, evt): ...
def pdf_annot_field_flags(annot): ...
def pdf_annot_field_label(widget): ...
def pdf_annot_field_value(annot): ...
def pdf_annot_filespec(annot): ...
def pdf_annot_flags(annot): ...
def pdf_annot_has_author(annot): ...
def pdf_annot_has_border(annot): ...
def pdf_annot_has_border_effect(annot): ...
def pdf_annot_has_callout(annot): ...
def pdf_annot_has_filespec(annot): ...
def pdf_annot_has_icon_name(annot): ...
def pdf_annot_has_ink_list(annot): ...
def pdf_annot_has_intent(annot): ...
def pdf_annot_has_interior_color(annot): ...
def pdf_annot_has_line(annot): ...
def pdf_annot_has_line_ending_styles(annot): ...
def pdf_annot_has_open(annot): ...
def pdf_annot_has_popup(annot): ...
def pdf_annot_has_quad_points(annot): ...
def pdf_annot_has_quadding(annot): ...
def pdf_annot_has_rect(annot): ...
def pdf_annot_has_vertices(annot): ...
def pdf_annot_hidden_for_editing(annot): ...
def pdf_annot_hot(annot): ...
def pdf_annot_icon_name(annot): ...
def pdf_annot_ink_list_count(annot): ...
def pdf_annot_ink_list_stroke_count(annot, i): ...
def pdf_annot_ink_list_stroke_vertex(annot, i, k): ...
def pdf_annot_intent(annot): ...
def pdf_annot_interior_color(annot, n, color): ...
def pdf_annot_is_open(annot): ...
def pdf_annot_is_standard_stamp(annot): ...
def pdf_annot_language(annot): ...
def pdf_annot_line(annot, a, b): ...
def pdf_annot_line_caption(annot): ...
def pdf_annot_line_caption_offset(annot): ...
def pdf_annot_line_end_style(annot): ...
def pdf_annot_line_ending_styles(annot, start_style, end_style): ...
def pdf_annot_line_leader(annot): ...
def pdf_annot_line_leader_extension(annot): ...
def pdf_annot_line_leader_offset(annot): ...
def pdf_annot_line_start_style(annot): ...
def pdf_annot_modification_date(annot): ...
def pdf_annot_needs_resynthesis(annot): ...
def pdf_annot_obj(annot): ...
def pdf_annot_opacity(annot): ...
def pdf_annot_page(annot): ...
def pdf_annot_pop_and_discard_local_xref(annot): ...
def pdf_annot_pop_local_xref(annot): ...
def pdf_annot_popup(annot): ...
def pdf_annot_push_local_xref(annot): ...
def pdf_annot_quad_point(annot, i): ...
def pdf_annot_quad_point_count(annot): ...
def pdf_annot_quadding(annot): ...
def pdf_annot_rect(annot): ...
def pdf_annot_request_resynthesis(annot): ...
def pdf_annot_request_synthesis(annot): ...
def pdf_annot_transform(annot): ...
def pdf_annot_type(annot): ...
def pdf_annot_type_from_string(subtype): ...
def pdf_annot_vertex(annot, i): ...
def pdf_annot_vertex_count(annot): ...
def pdf_append_explicit_dest_to_uri(url, dest): ...
def pdf_append_named_dest_to_uri(url, name): ...
def pdf_append_token(buf, tok, lex): ...
def pdf_apply_redaction(annot, opts): ...
def pdf_array_contains(array, obj): ...
def pdf_array_delete(array, index): ...
def pdf_array_find(array, obj): ...
def pdf_array_get(array, i): ...
def pdf_array_get_bool(array, index): ...
def pdf_array_get_int(array, index): ...
def pdf_array_get_matrix(array, index): ...
def pdf_array_get_name(array, index): ...
def pdf_array_get_real(array, index): ...
def pdf_array_get_rect(array, index): ...
def pdf_array_get_string(array, index, sizep): ...
def pdf_array_get_text_string(array, index): ...
def pdf_array_insert(array, obj, index): ...
def pdf_array_len(array): ...
def pdf_array_push(array, obj): ...
def pdf_array_push_array(array, initial): ...
def pdf_array_push_bool(array, x): ...
def pdf_array_push_dict(array, initial): ...
def pdf_array_push_int(array, x): ...
def pdf_array_push_name(array, x): ...
def pdf_array_push_real(array, x): ...
def pdf_array_push_string(array, x, n): ...
def pdf_array_push_text_string(array, x): ...
def pdf_array_put(array, i, obj): ...
def pdf_array_put_array(array, i, initial): ...
def pdf_array_put_bool(array, i, x): ...
def pdf_array_put_dict(array, i, initial): ...
def pdf_array_put_int(array, i, x): ...
def pdf_array_put_name(array, i, x): ...
def pdf_array_put_real(array, i, x): ...
def pdf_array_put_string(array, i, x, n): ...
def pdf_array_put_text_string(array, i, x): ...
def pdf_authenticate_password(doc, pw): ...
def pdf_bake_document(doc, bake_annots, bake_widgets): ...
def pdf_begin_implicit_operation(doc): ...
def pdf_begin_operation(doc, operation): ...
def pdf_bound_annot(annot): ...
def pdf_bound_page(page, box): ...
def pdf_bound_widget(widget): ...
def pdf_button_field_on_state(field): ...
def pdf_calculate_form(doc): ...
def pdf_can_be_saved_incrementally(doc): ...
def pdf_can_redo(doc): ...
def pdf_can_undo(doc): ...
def pdf_check_certificate(verifier, doc, signature): ...
def pdf_check_digest(verifier, doc, signature): ...
def pdf_check_widget_certificate(verifier, widget): ...
def pdf_check_widget_digest(verifier, widget): ...
def pdf_choice_field_option(field, exportval, i): ...
def pdf_choice_field_option_count(field): ...
def pdf_choice_widget_is_multiselect(tw): ...
def pdf_choice_widget_options(tw, exportval, opts): ...
def pdf_choice_widget_options2(tw, exportval): ...
def pdf_choice_widget_set_value(tw, n, opts): ...
def pdf_choice_widget_value(tw, opts): ...
def pdf_clean_file(infile, outfile, password, opts, retainlen): ...
def pdf_clean_font_name(fontname): ...
def pdf_clean_obj(obj): ...
def pdf_clear_annot_border_dash(annot): ...
def pdf_clear_annot_ink_list(annot): ...
def pdf_clear_annot_quad_points(annot): ...
def pdf_clear_annot_vertices(annot): ...
def pdf_clear_signature(widget): ...
def pdf_clear_xref(doc): ...
def pdf_clear_xref_to_mark(doc): ...
def pdf_close_processor(proc): ...
def pdf_cmap_size(cmap): ...
def pdf_cmap_wmode(cmap): ...
def pdf_copy_array(array): ...
def pdf_copy_dict(dict): ...
def pdf_count_document_associated_files(doc): ...
def pdf_count_layer_config_ui(doc): ...
def pdf_count_layer_configs(doc): ...
def pdf_count_layers(doc): ...
def pdf_count_objects(doc): ...
def pdf_count_page_associated_files(page): ...
def pdf_count_pages(doc): ...
def pdf_count_pages_imp(doc, chapter): ...
def pdf_count_q_balance(doc, res, stm, prepend, append): ...
def pdf_count_signatures(doc): ...
def pdf_count_unsaved_versions(doc): ...
def pdf_count_versions(doc): ...
def pdf_create_annot(page, type): ...
def pdf_create_annot_raw(page, type): ...
def pdf_create_document(): ...
def pdf_create_field_name(doc, prefix, buf, len): ...
def pdf_create_link(page, bbox, uri): ...
def pdf_create_object(doc): ...
def pdf_create_signature_widget(page, name): ...
def pdf_crypt_encrypt_metadata(crypt): ...
def pdf_crypt_key(crypt): ...
def pdf_crypt_length(crypt): ...
def pdf_crypt_method(crypt): ...
def pdf_crypt_obj(crypt, obj, num, gen): ...
def pdf_crypt_owner_encryption(crypt): ...
def pdf_crypt_owner_password(crypt): ...
def pdf_crypt_permissions(crypt): ...
def pdf_crypt_permissions_encryption(crypt): ...
def pdf_crypt_revision(crypt): ...
def pdf_crypt_stream_method(crypt): ...
def pdf_crypt_string_method(crypt): ...
def pdf_crypt_user_encryption(crypt): ...
def pdf_crypt_user_password(crypt): ...
def pdf_crypt_version(crypt): ...
def pdf_cycle(here, prev, obj): ...
def pdf_debug_doc_changes(doc): ...
def pdf_debug_obj(obj): ...
def pdf_debug_ref(obj): ...
def pdf_decode_cmap(cmap, s, e, cpt): ...
def pdf_deep_copy_obj(obj): ...
def pdf_delete_annot(page, annot): ...
def pdf_delete_link(page, link): ...
def pdf_delete_object(doc, num): ...
def pdf_delete_page(doc, number): ...
def pdf_delete_page_labels(doc, index): ...
def pdf_delete_page_range(doc, start, end): ...
def pdf_deselect_layer_config_ui(doc, ui): ...
def pdf_deserialise_journal(doc, stm): ...
def pdf_dict_del(dict, key): ...
def pdf_dict_dels(dict, key): ...
def pdf_dict_get(dict, key): ...
def pdf_dict_get_bool(dict, key): ...
def pdf_dict_get_bool_default(dict, key, _def): ...
def pdf_dict_get_date(dict, key): ...
def pdf_dict_get_inheritable(dict, key): ...
def pdf_dict_get_inheritable_bool(dict, key): ...
def pdf_dict_get_inheritable_date(dict, key): ...
def pdf_dict_get_inheritable_int(dict, key): ...
def pdf_dict_get_inheritable_int64(dict, key): ...
def pdf_dict_get_inheritable_matrix(dict, key): ...
def pdf_dict_get_inheritable_name(dict, key): ...
def pdf_dict_get_inheritable_real(dict, key): ...
def pdf_dict_get_inheritable_rect(dict, key): ...
def pdf_dict_get_inheritable_string(dict, key, sizep): ...
def pdf_dict_get_inheritable_text_string(dict, key): ...
def pdf_dict_get_int(dict, key): ...
def pdf_dict_get_int64(dict, key): ...
def pdf_dict_get_int_default(dict, key, _def): ...
def pdf_dict_get_key(dict, idx): ...
def pdf_dict_get_matrix(dict, key): ...
def pdf_dict_get_name(dict, key): ...
def pdf_dict_get_point(dict, key): ...
def pdf_dict_get_real(dict, key): ...
def pdf_dict_get_real_default(dict, key, _def): ...
def pdf_dict_get_rect(dict, key): ...
def pdf_dict_get_string(dict, key, sizep): ...
def pdf_dict_get_text_string(dict, key): ...
def pdf_dict_get_text_string_opt(dict, key): ...
def pdf_dict_get_val(dict, idx): ...
def pdf_dict_geta(dict, key, abbrev): ...
def pdf_dict_getp(dict, path): ...
def pdf_dict_getp_inheritable(dict, path): ...
def pdf_dict_gets(dict, key): ...
def pdf_dict_gets_inheritable(dict, key): ...
def pdf_dict_getsa(dict, key, abbrev): ...
def pdf_dict_len(dict): ...
def pdf_dict_put(dict, key, val): ...
def pdf_dict_put_array(dict, key, initial): ...
def pdf_dict_put_bool(dict, key, x): ...
def pdf_dict_put_date(dict, key, time): ...
def pdf_dict_put_dict(dict, key, initial): ...
def pdf_dict_put_indirect(dict, key, num): ...
def pdf_dict_put_int(dict, key, x): ...
def pdf_dict_put_matrix(dict, key, x): ...
def pdf_dict_put_name(dict, key, x): ...
def pdf_dict_put_point(dict, key, x): ...
def pdf_dict_put_real(dict, key, x): ...
def pdf_dict_put_rect(dict, key, x): ...
def pdf_dict_put_string(dict, key, x, n): ...
def pdf_dict_put_text_string(dict, key, x): ...
def pdf_dict_put_val_null(obj, idx): ...
def pdf_dict_putp(dict, path, val): ...
def pdf_dict_puts(dict, key, val): ...
def pdf_dict_puts_dict(dict, key, initial): ...
def pdf_dirty_annot(annot): ...
def pdf_dirty_obj(obj): ...
def pdf_disable_js(doc): ...
def pdf_discard_journal(journal): ...
def pdf_doc_was_linearized(doc): ...
def pdf_document_associated_file(doc, idx): ...
def pdf_document_event_did_print(doc): ...
def pdf_document_event_did_save(doc): ...
def pdf_document_event_will_close(doc): ...
def pdf_document_event_will_print(doc): ...
def pdf_document_event_will_save(doc): ...
def pdf_document_from_fz_document(ptr): ...
def pdf_document_language(doc): ...
def pdf_document_output_intent(doc): ...
def pdf_document_permissions(doc): ...
def pdf_edit_text_field_value(widget, value, change, selStart, selEnd, newvalue): ...
def pdf_empty_store(doc): ...
def pdf_enable_journal(doc): ...
def pdf_enable_js(doc): ...
def pdf_enable_layer(doc, layer, enabled): ...
def pdf_encrypt_data(crypt, num, gen, fmt_str_out, arg, s, n): ...
def pdf_encrypted_len(crypt, num, gen, len): ...
def pdf_end_hmtx(font): ...
def pdf_end_operation(doc): ...
def pdf_end_vmtx(font): ...
def pdf_ensure_solid_xref(doc, num): ...
def pdf_eval_function(func, _in, inlen, out, outlen): ...
def pdf_event_issue_alert(doc, evt): ...
def pdf_event_issue_exec_menu_item(doc, item): ...
def pdf_event_issue_launch_url(doc, url, new_frame): ...
def pdf_event_issue_mail_doc(doc, evt): ...
def pdf_event_issue_print(doc): ...
def pdf_field_border_style(field): ...
def pdf_field_display(field): ...
def pdf_field_event_calculate(doc, field): ...
def pdf_field_event_format(doc, field): ...
def pdf_field_event_keystroke(doc, field, evt): ...
def pdf_field_event_validate(doc, field, value, newvalue): ...
def pdf_field_flags(field): ...
def pdf_field_label(field): ...
def pdf_field_reset(doc, field): ...
def pdf_field_set_border_style(field, text): ...
def pdf_field_set_button_caption(field, text): ...
def pdf_field_set_display(field, d): ...
def pdf_field_set_fill_color(field, col): ...
def pdf_field_set_text_color(field, col): ...
def pdf_field_type(field): ...
def pdf_field_type_string(field): ...
def pdf_field_value(field): ...
def pdf_filter_annot_contents(doc, annot, options): ...
def pdf_filter_page_contents(doc, page, options): ...
def pdf_filter_xobject_instance(old_xobj, page_res, ctm, options, cycle_up): ...
def pdf_find_font_resource(doc, type, encoding, item, key): ...
def pdf_find_item(drop, key): ...
def pdf_find_version_for_obj(doc, obj): ...
def pdf_first_annot(page): ...
def pdf_first_widget(page): ...
def pdf_flatten_inheritable_page_items(page): ...
def pdf_font_cid_to_gid(fontdesc, cid): ...
def pdf_font_writing_supported(font): ...
def pdf_forget_xref(doc): ...
def pdf_format_date(time, s, n): ...
def pdf_format_write_options(buffer, buffer_len, opts): ...
def pdf_function_size(func): ...
def pdf_get_bound_document(obj): ...
def pdf_get_doc_event_callback_data(doc): ...
def pdf_get_embedded_file_params(fs, out): ...
def pdf_get_filespec_params(fs, out): ...
def pdf_get_indirect_document(obj): ...
def pdf_get_widget_editing_state(widget): ...
def pdf_graft_mapped_object(map, obj): ...
def pdf_graft_mapped_page(map, page_to, src, page_from): ...
def pdf_graft_object(dst, obj): ...
def pdf_graft_page(dst, page_to, src, page_from): ...
def pdf_has_permission(doc, p): ...
def pdf_has_unsaved_changes(doc): ...
def pdf_has_unsaved_sigs(doc): ...
def pdf_incremental_change_since_signing_widget(widget): ...
def pdf_insert_font_resource(doc, key, obj): ...
def pdf_insert_page(doc, at, page): ...
def pdf_intent_from_name(obj): ...
def pdf_intent_from_string(str): ...
def pdf_invalidate_xfa(doc): ...
def pdf_is_array(obj): ...
def pdf_is_bool(obj): ...
def pdf_is_dict(obj): ...
def pdf_is_embedded_file(fs): ...
def pdf_is_field_locked(locked, name): ...
def pdf_is_filespec(fs): ...
def pdf_is_indirect(obj): ...
def pdf_is_int(obj): ...
def pdf_is_jpx_image(dict): ...
def pdf_is_local_object(doc, obj): ...
def pdf_is_name(obj): ...
def pdf_is_null(obj): ...
def pdf_is_number(obj): ...
def pdf_is_ocg_hidden(doc, rdb, usage, ocg): ...
def pdf_is_real(obj): ...
def pdf_is_stream(obj): ...
def pdf_is_string(obj): ...
def pdf_is_tint_colorspace(cs): ...
def pdf_js_event_init(js, target, value, willCommit): ...
def pdf_js_event_init_keystroke(js, target, evt): ...
def pdf_js_event_result(js): ...
def pdf_js_event_result_keystroke(js, evt): ...
def pdf_js_event_result_validate(js, newvalue): ...
def pdf_js_event_value(js): ...
def pdf_js_execute(js, name, code, result): ...
def pdf_js_set_console(doc, console, user): ...
def pdf_js_supported(doc): ...
def pdf_layer_config_info(doc, config_num, info): ...
def pdf_layer_config_ui_info(doc, ui, info): ...
def pdf_layer_is_enabled(doc, layer): ...
def pdf_layer_name(doc, layer): ...
def pdf_layout_fit_text(font, lang, str, bounds): ...
def pdf_lex(f, lexbuf): ...
def pdf_lex_no_string(f, lexbuf): ...
def pdf_lexbuf_fin(lexbuf): ...
def pdf_lexbuf_grow(lexbuf): ...
def pdf_lexbuf_init(lexbuf, size): ...
def pdf_line_ending_from_name(end): ...
def pdf_line_ending_from_string(end): ...
def pdf_load_builtin_cmap(name): ...
def pdf_load_cmap(file): ...
def pdf_load_colorspace(obj): ...
def pdf_load_compressed_inline_image(doc, dict, length, cstm, indexed, image): ...
def pdf_load_compressed_stream(doc, num, worst_case): ...
def pdf_load_default_colorspaces(doc, page): ...
def pdf_load_embedded_cmap(doc, ref): ...
def pdf_load_embedded_file_contents(fs): ...
def pdf_load_encoding(estrings, encoding): ...
def pdf_load_field_name(field): ...
def pdf_load_field_name2(field): ...
def pdf_load_function(ref, _in, out): ...
def pdf_load_image(doc, obj): ...
def pdf_load_inline_image(doc, rdb, dict, file): ...
def pdf_load_journal(doc, filename): ...
def pdf_load_link_annots(arg_0, arg_1, annots, pagenum, page_ctm): ...
def pdf_load_links(page): ...
def pdf_load_name_tree(doc, which): ...
def pdf_load_object(doc, num): ...
def pdf_load_outline(doc): ...
def pdf_load_page(doc, number): ...
def pdf_load_page_imp(doc, chapter, number): ...
def pdf_load_page_tree(doc): ...
def pdf_load_pattern(doc, obj): ...
def pdf_load_raw_stream(ref): ...
def pdf_load_raw_stream_number(doc, num): ...
def pdf_load_shading(doc, obj): ...
def pdf_load_stream(ref): ...
def pdf_load_stream_number(doc, num): ...
def pdf_load_stream_or_string_as_utf8(src): ...
def pdf_load_system_cmap(name): ...
def pdf_load_to_unicode(doc, font, strings, collection, cmapstm): ...
def pdf_load_type3_glyphs(doc, fontdesc): ...
def pdf_load_unencrypted_object(doc, num): ...
def pdf_lookup_cmap(cmap, cpt): ...
def pdf_lookup_cmap_full(cmap, cpt, out): ...
def pdf_lookup_dest(doc, needle): ...
def pdf_lookup_field(form, name): ...
def pdf_lookup_metadata(doc, key, ptr, size): ...
def pdf_lookup_metadata2(doc, key): ...
def pdf_lookup_name(doc, which, needle): ...
def pdf_lookup_number(root, needle): ...
def pdf_lookup_page_loc(doc, needle, parentp, indexp): ...
def pdf_lookup_page_number(doc, pageobj): ...
def pdf_lookup_page_obj(doc, needle): ...
def pdf_lookup_substitute_font(mono, serif, bold, italic, len): ...
def pdf_map_one_to_many(cmap, one, many, len): ...
def pdf_map_range_to_range(cmap, srclo, srchi, dstlo): ...
def pdf_mark_bits_reset(marks): ...
def pdf_mark_bits_set(marks, obj): ...
def pdf_mark_list_check(list, obj): ...
def pdf_mark_list_free(list): ...
def pdf_mark_list_init(list): ...
def pdf_mark_list_pop(list): ...
def pdf_mark_list_push(list, obj): ...
def pdf_mark_obj(obj): ...
def pdf_mark_xref(doc): ...
def pdf_metadata(doc): ...
def pdf_minimize_document(doc): ...
def pdf_name_eq(a, b): ...
def pdf_name_from_intent(intent): ...
def pdf_name_from_line_ending(end): ...
def pdf_needs_password(doc): ...
def pdf_new_action_from_link(doc, uri): ...
def pdf_new_array(doc, initialcap): ...
def pdf_new_buffer_processor(buffer, ahxencode, newlines): ...
def pdf_new_cmap(): ...
def pdf_new_color_filter(doc, chain, struct_parents, transform, options, copts): ...
def pdf_new_date(doc, time): ...
def pdf_new_dest_from_link(doc, uri, is_remote): ...
def pdf_new_dict(doc, initialcap): ...
def pdf_new_display_list_from_annot(annot): ...
def pdf_new_graft_map(dst): ...
def pdf_new_identity_cmap(wmode, bytes): ...
def pdf_new_indirect(doc, num, gen): ...
def pdf_new_int(i): ...
def pdf_new_link(page, rect, uri, obj): ...
def pdf_new_matrix(doc, mtx): ...
def pdf_new_name(str): ...
def pdf_new_output_processor(out, ahxencode, newlines): ...
def pdf_new_pdf_device(doc, topctm, resources, contents): ...
def pdf_new_pixmap_from_annot(annot, ctm, cs, seps, alpha): ...
def pdf_new_pixmap_from_page_contents_with_separations_and_usage(page, ctm, cs, seps, alpha, usage, box): ...
def pdf_new_pixmap_from_page_contents_with_usage(page, ctm, cs, alpha, usage, box): ...
def pdf_new_pixmap_from_page_with_separations_and_usage(page, ctm, cs, seps, alpha, usage, box): ...
def pdf_new_pixmap_from_page_with_usage(page, ctm, cs, alpha, usage, box): ...
def pdf_new_point(doc, point): ...
def pdf_new_processor(size): ...
def pdf_new_real(f): ...
def pdf_new_rect(doc, rect): ...
def pdf_new_run_processor(doc, dev, ctm, struct_parent, usage, gstate, default_cs, cookie): ...
def pdf_new_sanitize_filter(doc, chain, struct_parents, transform, options, sopts): ...
def pdf_new_string(str, len): ...
def pdf_new_text_string(s): ...
def pdf_new_uri_from_explicit_dest(dest): ...
def pdf_new_uri_from_path_and_explicit_dest(path, dest): ...
def pdf_new_uri_from_path_and_named_dest(path, name): ...
def pdf_new_utf8_from_pdf_stream_obj(src): ...
def pdf_new_utf8_from_pdf_string(srcptr, srclen): ...
def pdf_new_utf8_from_pdf_string_obj(src): ...
def pdf_new_xobject(doc, bbox, matrix, res, buffer): ...
def pdf_next_annot(annot): ...
def pdf_next_widget(previous): ...
def pdf_nuke_annots(page): ...
def pdf_nuke_links(page): ...
def pdf_nuke_page(page): ...
def pdf_obj_is_dirty(obj): ...
def pdf_obj_is_incremental(obj): ...
def pdf_obj_marked(obj): ...
def pdf_obj_memo(obj, bit, memo): ...
def pdf_obj_num_is_stream(doc, num): ...
def pdf_obj_parent_num(obj): ...
def pdf_obj_refs(ref): ...
def pdf_objcmp(a, b): ...
def pdf_objcmp_deep(a, b): ...
def pdf_objcmp_resolve(a, b): ...
def pdf_open_contents_stream(doc, obj): ...
def pdf_open_crypt(chain, crypt, num, gen): ...
def pdf_open_crypt_with_filter(chain, crypt, name, num, gen): ...
def pdf_open_document(filename): ...
def pdf_open_document_with_stream(file): ...
def pdf_open_inline_stream(doc, stmobj, length, chain, params): ...
def pdf_open_raw_stream(ref): ...
def pdf_open_raw_stream_number(doc, num): ...
def pdf_open_stream(ref): ...
def pdf_open_stream_number(doc, num): ...
def pdf_open_stream_with_offset(doc, num, dict, stm_ofs): ...
def pdf_page_associated_file(page, idx): ...
def pdf_page_contents(page): ...
def pdf_page_event_close(page): ...
def pdf_page_event_open(page): ...
def pdf_page_from_fz_page(ptr): ...
def pdf_page_group(page): ...
def pdf_page_has_transparency(page): ...
def pdf_page_label(doc, page, buf, size): ...
def pdf_page_label_imp(doc, chapter, page, buf, size): ...
def pdf_page_obj_transform(pageobj, outbox, outctm): ...
def pdf_page_obj_transform_box(pageobj, outbox, out, box): ...
def pdf_page_presentation(page, transition, duration): ...
def pdf_page_resources(page): ...
def pdf_page_separations(page): ...
def pdf_page_transform(page, mediabox, ctm): ...
def pdf_page_transform_box(page, mediabox, ctm, box): ...
def pdf_page_write(doc, mediabox, presources, pcontents): ...
def pdf_parse_array(doc, f, buf): ...
def pdf_parse_date(s): ...
def pdf_parse_default_appearance(da, font, size, n, color): ...
def pdf_parse_default_appearance_unmapped(da, font_name, font_name_len, size, n, color): ...
def pdf_parse_dict(doc, f, buf): ...
def pdf_parse_ind_obj(doc, f, num, gen, stm_ofs, try_repair): ...
def pdf_parse_journal_obj(doc, stm, onum, ostm, newobj): ...
def pdf_parse_stm_obj(doc, f, buf): ...
def pdf_parse_write_options(opts, args): ...
def pdf_pin_document(obj): ...
def pdf_preview_signature_as_display_list(w, h, lang, signer, appearance_flags, graphic, reason, location): ...
def pdf_preview_signature_as_pixmap(w, h, lang, signer, appearance_flags, graphic, reason, location): ...
def pdf_print_crypt(out, crypt): ...
def pdf_print_default_appearance(buf, nbuf, font, size, n, color): ...
def pdf_print_encrypted_obj(out, obj, tight, ascii, crypt, num, gen, sep): ...
def pdf_print_font(out, fontdesc): ...
def pdf_print_obj(out, obj, tight, ascii): ...
def pdf_process_annot(proc, annot, cookie): ...
def pdf_process_contents(proc, doc, res, stm, cookie, out_res): ...
def pdf_process_glyph(proc, doc, resources, contents): ...
def pdf_process_raw_contents(proc, doc, rdb, stmobj, cookie): ...
def pdf_processor_pop_resources(proc): ...
def pdf_processor_push_resources(proc, res): ...
def pdf_progressive_advance(doc, pagenum): ...
def pdf_purge_local_font_resources(doc): ...
def pdf_purge_locals_from_store(doc): ...
def pdf_purge_object_from_store(doc, num): ...
def pdf_read_journal(doc, stm): ...
def pdf_rearrange_pages(doc, count, pages, structure): ...
def pdf_rearrange_pages2(doc, pages, structure): ...
def pdf_recolor_page(doc, pagenum, opts): ...
def pdf_recolor_shade(shade, reshade, opaque): ...
def pdf_redact_page(doc, page, opts): ...
def pdf_redo(doc): ...
def pdf_remove_item(drop, key): ...
def pdf_remove_output_intents(doc): ...
def pdf_repair_obj(doc, buf, stmofsp, stmlenp, encrypt, id, page, tmpofs, root): ...
def pdf_repair_obj_stms(doc): ...
def pdf_repair_trailer(doc): ...
def pdf_repair_xref(doc): ...
def pdf_replace_xref(doc, entries, n): ...
def pdf_reset_form(doc, fields, exclude): ...
def pdf_reset_processor(proc): ...
def pdf_resolve_indirect(ref): ...
def pdf_resolve_indirect_chain(ref): ...
def pdf_resolve_link(doc, uri, xp, yp): ...
def pdf_rewrite_images(doc, opts): ...
def pdf_run_annot(annot, dev, ctm, cookie): ...
def pdf_run_document_structure(doc, dev, cookie): ...
def pdf_run_glyph(doc, resources, contents, dev, ctm, gstate, default_cs): ...
def pdf_run_page(page, dev, ctm, cookie): ...
def pdf_run_page_annots(page, dev, ctm, cookie): ...
def pdf_run_page_annots_with_usage(page, dev, ctm, usage, cookie): ...
def pdf_run_page_contents(page, dev, ctm, cookie): ...
def pdf_run_page_contents_with_usage(page, dev, ctm, usage, cookie): ...
def pdf_run_page_widgets(page, dev, ctm, cookie): ...
def pdf_run_page_widgets_with_usage(page, dev, ctm, usage, cookie): ...
def pdf_run_page_with_usage(page, dev, ctm, usage, cookie): ...
def pdf_sample_shade_function(samples, n, funcs, func, t0, t1): ...
def pdf_save_document(doc, filename, opts): ...
def pdf_save_journal(doc, filename): ...
def pdf_save_snapshot(doc, filename): ...
def pdf_select_layer_config(doc, config_num): ...
def pdf_select_layer_config_ui(doc, ui): ...
def pdf_serialise_journal(doc, out): ...
def pdf_set_annot_active(annot, active): ...
def pdf_set_annot_appearance(annot, appearance, state, ctm, bbox, res, contents): ...
def pdf_set_annot_appearance_from_display_list(annot, appearance, state, ctm, list): ...
def pdf_set_annot_author(annot, author): ...
def pdf_set_annot_border(annot, width): ...
def pdf_set_annot_border_effect(annot, effect): ...
def pdf_set_annot_border_effect_intensity(annot, intensity): ...
def pdf_set_annot_border_style(annot, style): ...
def pdf_set_annot_border_width(annot, width): ...
def pdf_set_annot_callout_line(annot, callout, n): ...
def pdf_set_annot_callout_line2(annot, callout): ...
def pdf_set_annot_callout_point(annot, p): ...
def pdf_set_annot_callout_style(annot, style): ...
def pdf_set_annot_color(annot, n, color): ...
def pdf_set_annot_contents(annot, text): ...
def pdf_set_annot_creation_date(annot, time): ...
def pdf_set_annot_default_appearance(annot, font, size, n, color): ...
def pdf_set_annot_field_value(doc, widget, text, ignore_trigger_events): ...
def pdf_set_annot_filespec(annot, obj): ...
def pdf_set_annot_flags(annot, flags): ...
def pdf_set_annot_hidden_for_editing(annot, hidden): ...
def pdf_set_annot_hot(annot, hot): ...
def pdf_set_annot_icon_name(annot, name): ...
def pdf_set_annot_ink_list(annot, n, count, v): ...
def pdf_set_annot_intent(annot, it): ...
def pdf_set_annot_interior_color(annot, n, color): ...
def pdf_set_annot_is_open(annot, is_open): ...
def pdf_set_annot_language(annot, lang): ...
def pdf_set_annot_line(annot, a, b): ...
def pdf_set_annot_line_caption(annot, cap): ...
def pdf_set_annot_line_caption_offset(annot, offset): ...
def pdf_set_annot_line_end_style(annot, e): ...
def pdf_set_annot_line_ending_styles(annot, start_style, end_style): ...
def pdf_set_annot_line_leader(annot, ll): ...
def pdf_set_annot_line_leader_extension(annot, lle): ...
def pdf_set_annot_line_leader_offset(annot, llo): ...
def pdf_set_annot_line_start_style(annot, s): ...
def pdf_set_annot_modification_date(annot, time): ...
def pdf_set_annot_opacity(annot, opacity): ...
def pdf_set_annot_popup(annot, rect): ...
def pdf_set_annot_quad_points(annot, n, qv): ...
def pdf_set_annot_quadding(annot, q): ...
def pdf_set_annot_rect(annot, rect): ...
def pdf_set_annot_resynthesised(annot): ...
def pdf_set_annot_stamp_image(annot, image): ...
def pdf_set_annot_vertex(annot, i, p): ...
def pdf_set_annot_vertices(annot, n, v): ...
def pdf_set_choice_field_value(widget, value): ...
def pdf_set_cmap_wmode(cmap, wmode): ...
def pdf_set_default_hmtx(font, w): ...
def pdf_set_default_vmtx(font, y, w): ...
def pdf_set_doc_event_callback(doc, event_cb, free_event_data_cb, data): ...
def pdf_set_document_language(doc, lang): ...
def pdf_set_field_value(doc, field, text, ignore_trigger_events): ...
def pdf_set_font_wmode(font, wmode): ...
def pdf_set_int(obj, i): ...
def pdf_set_layer_config_as_default(doc): ...
def pdf_set_obj_memo(obj, bit, memo): ...
def pdf_set_obj_parent(obj, num): ...
def pdf_set_page_box(page, box, rect): ...
def pdf_set_page_labels(doc, index, style, prefix, start): ...
def pdf_set_populating_xref_trailer(doc, trailer): ...
def pdf_set_str_len(obj, newlen): ...
def pdf_set_text_field_value(widget, value): ...
def pdf_set_usecmap(cmap, usecmap): ...
def pdf_set_widget_editing_state(widget, editing): ...
def pdf_sign_signature(widget, signer, appearance_flags, graphic, reason, location): ...
def pdf_sign_signature_with_appearance(widget, signer, date, disp_list): ...
def pdf_signature_appearance_signed(rect, lang, img, left_text, right_text, include_logo): ...
def pdf_signature_appearance_unsigned(rect, lang): ...
def pdf_signature_byte_range(doc, signature, byte_range): ...
def pdf_signature_contents(doc, signature, contents): ...
def pdf_signature_drop_distinguished_name(name): ...
def pdf_signature_error_description(err): ...
def pdf_signature_format_distinguished_name(name): ...
def pdf_signature_hash_bytes(doc, signature): ...
def pdf_signature_incremental_change_since_signing(doc, signature): ...
def pdf_signature_info(name, dn, reason, location, date, include_labels): ...
def pdf_signature_is_signed(doc, field): ...
def pdf_signature_set_value(doc, field, signer, stime): ...
def pdf_sort_cmap(cmap): ...
def pdf_sort_dict(dict): ...
def pdf_specifics(doc): ...
def pdf_sprint_obj(buf, cap, len, obj, tight, ascii): ...
def pdf_store_item(key, val, itemsize): ...
def pdf_string_from_annot_type(type): ...
def pdf_string_from_intent(intent): ...
def pdf_string_from_line_ending(end): ...
def pdf_structure_type(role_map, tag): ...
def pdf_subset_fonts(doc, pages_len, pages): ...
def pdf_subset_fonts2(doc, pages): ...
def pdf_sync_annots(page): ...
def pdf_sync_links(page): ...
def pdf_sync_open_pages(doc): ...
def pdf_sync_page(page): ...
def pdf_text_widget_format(tw): ...
def pdf_text_widget_max_len(tw): ...
def pdf_to_bool(obj): ...
def pdf_to_bool_default(obj, _def): ...
def pdf_to_date(time): ...
def pdf_to_gen(obj): ...
def pdf_to_int(obj): ...
def pdf_to_int64(obj): ...
def pdf_to_int_default(obj, _def): ...
def pdf_to_matrix(array): ...
def pdf_to_name(obj): ...
def pdf_to_num(obj): ...
def pdf_to_point(array, offset): ...
def pdf_to_quad(array, offset): ...
def pdf_to_real(obj): ...
def pdf_to_real_default(obj, _def): ...
def pdf_to_rect(array): ...
def pdf_to_str_buf(obj): ...
def pdf_to_str_len(obj): ...
def pdf_to_string(obj, sizep): ...
def pdf_to_text_string(obj): ...
def pdf_toggle_layer_config_ui(doc, ui): ...
def pdf_toggle_widget(widget): ...
def pdf_tos_get_text(tos): ...
def pdf_tos_make_trm(tos, text, fontdesc, cid, trm, adv): ...
def pdf_tos_move_after_char(tos): ...
def pdf_tos_newline(tos, leading): ...
def pdf_tos_reset(tos, render): ...
def pdf_tos_restore(tos, save): ...
def pdf_tos_save(tos, save): ...
def pdf_tos_set_matrix(tos, a, b, c, d, e, f): ...
def pdf_tos_translate(tos, tx, ty): ...
def pdf_trailer(doc): ...
def pdf_undo(doc): ...
def pdf_undoredo_state(doc, steps): ...
def pdf_undoredo_step(doc, step): ...
def pdf_unmark_obj(obj): ...
def pdf_update_annot(annot): ...
def pdf_update_default_colorspaces(old_cs, res): ...
def pdf_update_object(doc, num, obj): ...
def pdf_update_page(page): ...
def pdf_update_stream(doc, ref, buf, compressed): ...
def pdf_update_widget(widget): ...
def pdf_update_xobject(doc, xobj, bbox, mat, res, buffer): ...
def pdf_validate_change_history(doc): ...
def pdf_validate_changes(doc, version): ...
def pdf_validate_signature(widget): ...
def pdf_verify_embedded_file_checksum(fs): ...
def pdf_version(doc): ...
def pdf_walk_tree(tree, kid_name, arrive, leave, arg, names, values): ...
def pdf_was_pure_xfa(doc): ...
def pdf_was_repaired(doc): ...
def pdf_widget_is_readonly(widget): ...
def pdf_widget_is_signed(widget): ...
def pdf_widget_type(widget): ...
def pdf_write_digest(out, byte_range, field, digest_offset, digest_length, signer): ...
def pdf_write_document(doc, out, opts): ...
def pdf_write_journal(doc, out): ...
def pdf_write_snapshot(doc, out): ...
def pdf_xobject_bbox(xobj): ...
def pdf_xobject_colorspace(xobj): ...
def pdf_xobject_isolated(xobj): ...
def pdf_xobject_knockout(xobj): ...
def pdf_xobject_matrix(xobj): ...
def pdf_xobject_resources(xobj): ...
def pdf_xobject_transparency(xobj): ...
def pdf_xref_ensure_incremental_object(doc, num): ...
def pdf_xref_ensure_local_object(doc, num): ...
def pdf_xref_entry_map(doc, fn, arg): ...
def pdf_xref_is_incremental(doc, num): ...
def pdf_xref_len(doc): ...
def pdf_xref_obj_is_unsaved_signature(doc, obj): ...
def pdf_xref_remove_unsaved_signature(doc, field): ...
def pdf_xref_store_unsaved_signature(doc, field, signer): ...
def pdf_zugferd_profile(doc, version): ...
def pdf_zugferd_profile_to_string(profile): ...
def pdf_zugferd_xml(doc): ...
def internal_assert_fail(file, line, fn, expression): ...
def internal_env_flag(name): ...
def internal_env_flag_check_unset(if_, name): ...
def internal_context_get(): ...

class FzErrorBase(Exception):
    thisown: Incomplete
    m_code: Incomplete
    m_text: Incomplete
    m_what: Incomplete
    def what(self): ...
    def __init__(self, code, text) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorNone(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorGeneric(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorSystem(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorLibrary(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorArgument(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorLimit(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorUnsupported(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorFormat(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorSyntax(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorTrylater(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorAbort(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

class FzErrorRepaired(FzErrorBase):
    thisown: Incomplete
    def __init__(self, message) -> None: ...
    __swig_destroy__: Incomplete

def internal_throw_exception(ctx): ...
def to_stdstring(s): ...
def py_repr(x): ...
def py_str(x): ...
def ll_fz_buffer_to_bytes_internal(buffer, clear): ...
def python_memoryview_from_memory(data, size, writable): ...
def ll_fz_buffer_storage_memoryview(buffer, writable): ...
def raw_to_python_bytes(*args): ...
def python_buffer_data(PYTHON_BUFFER_DATA): ...
def python_mutable_buffer_data(PYTHON_BUFFER_MUTABLE_DATA): ...
def obj_enum_to_obj(n): ...
def ll_pdf_set_annot_color2(annot, n, color0, color1, color2, color3): ...
def ll_pdf_set_annot_interior_color2(annot, n, color0, color1, color2, color3): ...
def ll_fz_fill_text2(dev, text, ctm, colorspace, color0, color1, color2, color3, alpha, color_params): ...
def fz_memrnd2(length): ...
def ll_fz_pixmap_copy_raw(pm, samples): ...
def fz_runetochar2(rune): ...
def ll_fz_make_bookmark2(doc, loc): ...
def ll_fz_lookup_bookmark2(doc, mark): ...
def fz_lookup_bookmark2(doc, mark): ...

class fz_convert_color2_v:
    thisown: Incomplete
    v0: Incomplete
    v1: Incomplete
    v2: Incomplete
    v3: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_convert_color2(*args): ...

class DiagnosticCallback:
    thisown: Incomplete
    def __init__(self, description) -> None: ...
    __swig_destroy__: Incomplete
    @staticmethod
    def s_print(self0, message): ...
    m_description: Incomplete
    def __disown__(self): ...

class StoryPositionsCallback:
    thisown: Incomplete
    def __init__(self) -> None: ...
    def call(self, position): ...
    @staticmethod
    def s_call(ctx, self0, position): ...
    __swig_destroy__: Incomplete
    def __disown__(self): ...

def ll_fz_story_positions_director(story, cb): ...
def Pixmap_set_alpha_helper(balen, n, data_len, zero_out, data, pix, premultiply, bground, colors, bgcolor): ...
def page_merge_helper(old_annots, graft_map, doc_des, new_annots, n): ...

class ll_fz_bidi_fragment_text_outparams:
    thisown: Incomplete
    baseDir: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_bidi_fragment_text_outparams_fn(text, textlen, callback, arg, flags, outparams): ...

class ll_fz_bitmap_details_outparams:
    thisown: Incomplete
    w: Incomplete
    h: Incomplete
    n: Incomplete
    stride: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_bitmap_details_outparams_fn(bitmap, outparams): ...

class ll_fz_buffer_extract_outparams:
    thisown: Incomplete
    data: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_buffer_extract_outparams_fn(buf, outparams): ...

class ll_fz_buffer_storage_outparams:
    thisown: Incomplete
    datap: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_buffer_storage_outparams_fn(buf, outparams): ...

class ll_fz_chartorune_outparams:
    thisown: Incomplete
    rune: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_chartorune_outparams_fn(str, outparams): ...

class ll_fz_clamp_color_outparams:
    thisown: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_clamp_color_outparams_fn(cs, _in, outparams): ...

class ll_fz_convert_color_outparams:
    thisown: Incomplete
    dv: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_convert_color_outparams_fn(ss, sv, ds, _is, params, outparams): ...

class ll_fz_convert_error_outparams:
    thisown: Incomplete
    code: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_convert_error_outparams_fn(outparams): ...

class ll_fz_convert_separation_colors_outparams:
    thisown: Incomplete
    dst_color: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_convert_separation_colors_outparams_fn(src_cs, src_color, dst_seps, dst_cs, color_params, outparams): ...

class ll_fz_decomp_image_from_stream_outparams:
    thisown: Incomplete
    l2extra: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_decomp_image_from_stream_outparams_fn(stm, image, subarea, indexed, l2factor, outparams): ...

class ll_fz_deflate_outparams:
    thisown: Incomplete
    compressed_length: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_deflate_outparams_fn(dest, source, source_length, level, outparams): ...

class ll_fz_dom_get_attribute_outparams:
    thisown: Incomplete
    att: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_dom_get_attribute_outparams_fn(elt, i, outparams): ...

class ll_fz_drop_imp_outparams:
    thisown: Incomplete
    refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_drop_imp_outparams_fn(p, outparams): ...

class ll_fz_drop_imp16_outparams:
    thisown: Incomplete
    refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_drop_imp16_outparams_fn(p, outparams): ...

class ll_fz_encode_character_with_fallback_outparams:
    thisown: Incomplete
    out_font: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_encode_character_with_fallback_outparams_fn(font, unicode, script, language, outparams): ...

class ll_fz_error_callback_outparams:
    thisown: Incomplete
    user: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_error_callback_outparams_fn(outparams): ...

class ll_fz_eval_function_outparams:
    thisown: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_eval_function_outparams_fn(func, _in, inlen, outlen, outparams): ...

class ll_fz_fill_pixmap_with_color_outparams:
    thisown: Incomplete
    color: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_fill_pixmap_with_color_outparams_fn(pix, colorspace, color_params, outparams): ...

class ll_fz_get_pixmap_from_image_outparams:
    thisown: Incomplete
    w: Incomplete
    h: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_get_pixmap_from_image_outparams_fn(image, subarea, ctm, outparams): ...

class ll_fz_getopt_outparams:
    thisown: Incomplete
    nargv: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_getopt_outparams_fn(nargc, ostr, outparams): ...

class ll_fz_getopt_long_outparams:
    thisown: Incomplete
    nargv: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_getopt_long_outparams_fn(nargc, ostr, longopts, outparams): ...

class ll_fz_grisu_outparams:
    thisown: Incomplete
    exp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_grisu_outparams_fn(f, s, outparams): ...

class ll_fz_has_option_outparams:
    thisown: Incomplete
    val: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_has_option_outparams_fn(opts, key, outparams): ...

class ll_fz_image_resolution_outparams:
    thisown: Incomplete
    xres: Incomplete
    yres: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_image_resolution_outparams_fn(image, outparams): ...

class ll_fz_keep_imp_outparams:
    thisown: Incomplete
    refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_keep_imp_outparams_fn(p, outparams): ...

class ll_fz_keep_imp16_outparams:
    thisown: Incomplete
    refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_keep_imp16_outparams_fn(p, outparams): ...

class ll_fz_keep_imp_locked_outparams:
    thisown: Incomplete
    refs: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_keep_imp_locked_outparams_fn(p, outparams): ...

class ll_fz_lookup_base14_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_base14_font_outparams_fn(name, outparams): ...

class ll_fz_lookup_builtin_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_builtin_font_outparams_fn(name, bold, italic, outparams): ...

class ll_fz_lookup_cjk_font_outparams:
    thisown: Incomplete
    len: Incomplete
    index: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_cjk_font_outparams_fn(ordering, outparams): ...

class ll_fz_lookup_cjk_font_by_language_outparams:
    thisown: Incomplete
    len: Incomplete
    subfont: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_cjk_font_by_language_outparams_fn(lang, outparams): ...

class ll_fz_lookup_noto_boxes_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_boxes_font_outparams_fn(outparams): ...

class ll_fz_lookup_noto_emoji_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_emoji_font_outparams_fn(outparams): ...

class ll_fz_lookup_noto_font_outparams:
    thisown: Incomplete
    len: Incomplete
    subfont: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_font_outparams_fn(script, lang, outparams): ...

class ll_fz_lookup_noto_math_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_math_font_outparams_fn(outparams): ...

class ll_fz_lookup_noto_music_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_music_font_outparams_fn(outparams): ...

class ll_fz_lookup_noto_symbol1_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_symbol1_font_outparams_fn(outparams): ...

class ll_fz_lookup_noto_symbol2_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_lookup_noto_symbol2_font_outparams_fn(outparams): ...

class ll_fz_new_deflated_data_outparams:
    thisown: Incomplete
    compressed_length: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_deflated_data_outparams_fn(source, source_length, level, outparams): ...

class ll_fz_new_deflated_data_from_buffer_outparams:
    thisown: Incomplete
    compressed_length: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_deflated_data_from_buffer_outparams_fn(buffer, level, outparams): ...

class ll_fz_new_display_list_from_svg_outparams:
    thisown: Incomplete
    w: Incomplete
    h: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_display_list_from_svg_outparams_fn(buf, base_uri, dir, outparams): ...

class ll_fz_new_display_list_from_svg_xml_outparams:
    thisown: Incomplete
    w: Incomplete
    h: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_display_list_from_svg_xml_outparams_fn(xmldoc, xml, base_uri, dir, outparams): ...

class ll_fz_new_draw_device_with_options_outparams:
    thisown: Incomplete
    pixmap: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_draw_device_with_options_outparams_fn(options, mediabox, outparams): ...

class ll_fz_new_svg_device_with_id_outparams:
    thisown: Incomplete
    id: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_svg_device_with_id_outparams_fn(out, page_width, page_height, text_format, reuse_images, outparams): ...

class ll_fz_new_test_device_outparams:
    thisown: Incomplete
    is_color: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_new_test_device_outparams_fn(threshold, options, passthrough, outparams): ...

class ll_fz_open_image_decomp_stream_outparams:
    thisown: Incomplete
    l2factor: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_open_image_decomp_stream_outparams_fn(arg_0, arg_1, outparams): ...

class ll_fz_open_image_decomp_stream_from_buffer_outparams:
    thisown: Incomplete
    l2factor: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_open_image_decomp_stream_from_buffer_outparams_fn(arg_0, outparams): ...

class ll_fz_page_presentation_outparams:
    thisown: Incomplete
    duration: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_page_presentation_outparams_fn(page, transition, outparams): ...

class ll_fz_paint_shade_outparams:
    thisown: Incomplete
    cache: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_paint_shade_outparams_fn(shade, override_cs, ctm, dest, color_params, bbox, eop, outparams): ...

class ll_fz_parse_page_range_outparams:
    thisown: Incomplete
    a: Incomplete
    b: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_parse_page_range_outparams_fn(s, n, outparams): ...

class ll_fz_read_best_outparams:
    thisown: Incomplete
    truncated: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_read_best_outparams_fn(stm, initial, worst_case, outparams): ...

class ll_fz_resolve_link_outparams:
    thisown: Incomplete
    xp: Incomplete
    yp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_resolve_link_outparams_fn(doc, uri, outparams): ...

class ll_fz_search_chapter_page_number_outparams:
    thisown: Incomplete
    hit_mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_search_chapter_page_number_outparams_fn(doc, chapter, page, needle, hit_bbox, hit_max, outparams): ...

class ll_fz_search_display_list_outparams:
    thisown: Incomplete
    hit_mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_search_display_list_outparams_fn(list, needle, hit_bbox, hit_max, outparams): ...

class ll_fz_search_page_outparams:
    thisown: Incomplete
    hit_mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_search_page_outparams_fn(page, needle, hit_bbox, hit_max, outparams): ...

class ll_fz_search_page_number_outparams:
    thisown: Incomplete
    hit_mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_search_page_number_outparams_fn(doc, number, needle, hit_bbox, hit_max, outparams): ...

class ll_fz_search_stext_page_outparams:
    thisown: Incomplete
    hit_mark: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_search_stext_page_outparams_fn(text, needle, hit_bbox, hit_max, outparams): ...

class ll_fz_separation_equivalent_outparams:
    thisown: Incomplete
    dst_color: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_separation_equivalent_outparams_fn(seps, idx, dst_cs, prf, color_params, outparams): ...

class ll_fz_store_scavenge_outparams:
    thisown: Incomplete
    phase: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_store_scavenge_outparams_fn(size, outparams): ...

class ll_fz_store_scavenge_external_outparams:
    thisown: Incomplete
    phase: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_store_scavenge_external_outparams_fn(size, outparams): ...

class ll_fz_strsep_outparams:
    thisown: Incomplete
    stringp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_strsep_outparams_fn(delim, outparams): ...

class ll_fz_strtof_outparams:
    thisown: Incomplete
    es: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_strtof_outparams_fn(s, outparams): ...

class ll_fz_subset_cff_for_gids_outparams:
    thisown: Incomplete
    gids: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_subset_cff_for_gids_outparams_fn(orig, num_gids, symbolic, cidfont, outparams): ...

class ll_fz_subset_ttf_for_gids_outparams:
    thisown: Incomplete
    gids: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_subset_ttf_for_gids_outparams_fn(orig, num_gids, symbolic, cidfont, outparams): ...

class ll_fz_warning_callback_outparams:
    thisown: Incomplete
    user: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_fz_warning_callback_outparams_fn(outparams): ...

class ll_pdf_annot_MK_BC_outparams:
    thisown: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_MK_BC_outparams_fn(annot, color, outparams): ...

class ll_pdf_annot_MK_BG_outparams:
    thisown: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_MK_BG_outparams_fn(annot, color, outparams): ...

class ll_pdf_annot_callout_line_outparams:
    thisown: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_callout_line_outparams_fn(annot, callout, outparams): ...

class ll_pdf_annot_color_outparams:
    thisown: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_color_outparams_fn(annot, color, outparams): ...

class ll_pdf_annot_default_appearance_outparams:
    thisown: Incomplete
    font: Incomplete
    size: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_default_appearance_outparams_fn(annot, color, outparams): ...

class ll_pdf_annot_default_appearance_unmapped_outparams:
    thisown: Incomplete
    size: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_default_appearance_unmapped_outparams_fn(annot, font_name, font_name_len, color, outparams): ...

class ll_pdf_annot_interior_color_outparams:
    thisown: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_interior_color_outparams_fn(annot, color, outparams): ...

class ll_pdf_annot_line_ending_styles_outparams:
    thisown: Incomplete
    start_style: Incomplete
    end_style: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_annot_line_ending_styles_outparams_fn(annot, outparams): ...

class ll_pdf_array_get_string_outparams:
    thisown: Incomplete
    sizep: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_array_get_string_outparams_fn(array, index, outparams): ...

class ll_pdf_count_q_balance_outparams:
    thisown: Incomplete
    prepend: Incomplete
    append: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_count_q_balance_outparams_fn(doc, res, stm, outparams): ...

class ll_pdf_decode_cmap_outparams:
    thisown: Incomplete
    cpt: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_decode_cmap_outparams_fn(cmap, s, e, outparams): ...

class ll_pdf_dict_get_inheritable_string_outparams:
    thisown: Incomplete
    sizep: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_dict_get_inheritable_string_outparams_fn(dict, key, outparams): ...

class ll_pdf_dict_get_put_drop_outparams:
    thisown: Incomplete
    old_val: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_dict_get_put_drop_outparams_fn(dict, key, val, outparams): ...

class ll_pdf_dict_get_string_outparams:
    thisown: Incomplete
    sizep: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_dict_get_string_outparams_fn(dict, key, outparams): ...

class ll_pdf_edit_text_field_value_outparams:
    thisown: Incomplete
    selStart: Incomplete
    selEnd: Incomplete
    newvalue: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_edit_text_field_value_outparams_fn(widget, value, change, outparams): ...

class ll_pdf_eval_function_outparams:
    thisown: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_eval_function_outparams_fn(func, _in, inlen, outlen, outparams): ...

class ll_pdf_field_event_validate_outparams:
    thisown: Incomplete
    newvalue: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_field_event_validate_outparams_fn(doc, field, value, outparams): ...

class ll_pdf_js_event_result_validate_outparams:
    thisown: Incomplete
    newvalue: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_js_event_result_validate_outparams_fn(js, outparams): ...

class ll_pdf_js_execute_outparams:
    thisown: Incomplete
    result: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_js_execute_outparams_fn(js, name, code, outparams): ...

class ll_pdf_load_encoding_outparams:
    thisown: Incomplete
    estrings: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_load_encoding_outparams_fn(encoding, outparams): ...

class ll_pdf_load_to_unicode_outparams:
    thisown: Incomplete
    strings: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_load_to_unicode_outparams_fn(doc, font, collection, cmapstm, outparams): ...

class ll_pdf_lookup_cmap_full_outparams:
    thisown: Incomplete
    out: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_lookup_cmap_full_outparams_fn(cmap, cpt, outparams): ...

class ll_pdf_lookup_page_loc_outparams:
    thisown: Incomplete
    parentp: Incomplete
    indexp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_lookup_page_loc_outparams_fn(doc, needle, outparams): ...

class ll_pdf_lookup_substitute_font_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_lookup_substitute_font_outparams_fn(mono, serif, bold, italic, outparams): ...

class ll_pdf_map_one_to_many_outparams:
    thisown: Incomplete
    many: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_map_one_to_many_outparams_fn(cmap, one, len, outparams): ...

class ll_pdf_obj_memo_outparams:
    thisown: Incomplete
    memo: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_obj_memo_outparams_fn(obj, bit, outparams): ...

class ll_pdf_page_presentation_outparams:
    thisown: Incomplete
    duration: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_page_presentation_outparams_fn(page, transition, outparams): ...

class ll_pdf_page_write_outparams:
    thisown: Incomplete
    presources: Incomplete
    pcontents: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_page_write_outparams_fn(doc, mediabox, outparams): ...

class ll_pdf_parse_default_appearance_outparams:
    thisown: Incomplete
    font: Incomplete
    size: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_parse_default_appearance_outparams_fn(da, color, outparams): ...

class ll_pdf_parse_default_appearance_unmapped_outparams:
    thisown: Incomplete
    size: Incomplete
    n: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_parse_default_appearance_unmapped_outparams_fn(da, font_name, font_name_len, color, outparams): ...

class ll_pdf_parse_ind_obj_outparams:
    thisown: Incomplete
    num: Incomplete
    gen: Incomplete
    stm_ofs: Incomplete
    try_repair: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_parse_ind_obj_outparams_fn(doc, f, outparams): ...

class ll_pdf_parse_journal_obj_outparams:
    thisown: Incomplete
    onum: Incomplete
    ostm: Incomplete
    newobj: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_parse_journal_obj_outparams_fn(doc, stm, outparams): ...

class ll_pdf_print_encrypted_obj_outparams:
    thisown: Incomplete
    sep: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_print_encrypted_obj_outparams_fn(out, obj, tight, ascii, crypt, num, gen, outparams): ...

class ll_pdf_process_contents_outparams:
    thisown: Incomplete
    out_res: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_process_contents_outparams_fn(proc, doc, res, stm, cookie, outparams): ...

class ll_pdf_repair_obj_outparams:
    thisown: Incomplete
    stmofsp: Incomplete
    stmlenp: Incomplete
    encrypt: Incomplete
    id: Incomplete
    page: Incomplete
    tmpofs: Incomplete
    root: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_repair_obj_outparams_fn(doc, buf, outparams): ...

class ll_pdf_resolve_link_outparams:
    thisown: Incomplete
    xp: Incomplete
    yp: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_resolve_link_outparams_fn(doc, uri, outparams): ...

class ll_pdf_sample_shade_function_outparams:
    thisown: Incomplete
    samples: Incomplete
    func: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_sample_shade_function_outparams_fn(n, funcs, t0, t1, outparams): ...

class ll_pdf_signature_contents_outparams:
    thisown: Incomplete
    contents: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_signature_contents_outparams_fn(doc, signature, outparams): ...

class ll_pdf_sprint_obj_outparams:
    thisown: Incomplete
    len: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_sprint_obj_outparams_fn(buf, cap, obj, tight, ascii, outparams): ...

class ll_pdf_to_string_outparams:
    thisown: Incomplete
    sizep: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_to_string_outparams_fn(obj, outparams): ...

class ll_pdf_tos_make_trm_outparams:
    thisown: Incomplete
    adv: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_tos_make_trm_outparams_fn(tos, text, fontdesc, cid, trm, outparams): ...

class ll_pdf_undoredo_state_outparams:
    thisown: Incomplete
    steps: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_undoredo_state_outparams_fn(doc, outparams): ...

class ll_pdf_walk_tree_outparams:
    thisown: Incomplete
    names: Incomplete
    values: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_walk_tree_outparams_fn(tree, kid_name, arrive, leave, arg, outparams): ...

class ll_pdf_zugferd_profile_outparams:
    thisown: Incomplete
    version: Incomplete
    def __init__(self) -> None: ...
    __swig_destroy__: Incomplete

def ll_pdf_zugferd_profile_outparams_fn(doc, outparams): ...

UCDN_EAST_ASIAN_F: Incomplete
UCDN_EAST_ASIAN_H: Incomplete
UCDN_EAST_ASIAN_W: Incomplete
UCDN_EAST_ASIAN_NA: Incomplete
UCDN_EAST_ASIAN_A: Incomplete
UCDN_EAST_ASIAN_N: Incomplete
UCDN_SCRIPT_COMMON: Incomplete
UCDN_SCRIPT_LATIN: Incomplete
UCDN_SCRIPT_GREEK: Incomplete
UCDN_SCRIPT_CYRILLIC: Incomplete
UCDN_SCRIPT_ARMENIAN: Incomplete
UCDN_SCRIPT_HEBREW: Incomplete
UCDN_SCRIPT_ARABIC: Incomplete
UCDN_SCRIPT_SYRIAC: Incomplete
UCDN_SCRIPT_THAANA: Incomplete
UCDN_SCRIPT_DEVANAGARI: Incomplete
UCDN_SCRIPT_BENGALI: Incomplete
UCDN_SCRIPT_GURMUKHI: Incomplete
UCDN_SCRIPT_GUJARATI: Incomplete
UCDN_SCRIPT_ORIYA: Incomplete
UCDN_SCRIPT_TAMIL: Incomplete
UCDN_SCRIPT_TELUGU: Incomplete
UCDN_SCRIPT_KANNADA: Incomplete
UCDN_SCRIPT_MALAYALAM: Incomplete
UCDN_SCRIPT_SINHALA: Incomplete
UCDN_SCRIPT_THAI: Incomplete
UCDN_SCRIPT_LAO: Incomplete
UCDN_SCRIPT_TIBETAN: Incomplete
UCDN_SCRIPT_MYANMAR: Incomplete
UCDN_SCRIPT_GEORGIAN: Incomplete
UCDN_SCRIPT_HANGUL: Incomplete
UCDN_SCRIPT_ETHIOPIC: Incomplete
UCDN_SCRIPT_CHEROKEE: Incomplete
UCDN_SCRIPT_CANADIAN_ABORIGINAL: Incomplete
UCDN_SCRIPT_OGHAM: Incomplete
UCDN_SCRIPT_RUNIC: Incomplete
UCDN_SCRIPT_KHMER: Incomplete
UCDN_SCRIPT_MONGOLIAN: Incomplete
UCDN_SCRIPT_HIRAGANA: Incomplete
UCDN_SCRIPT_KATAKANA: Incomplete
UCDN_SCRIPT_BOPOMOFO: Incomplete
UCDN_SCRIPT_HAN: Incomplete
UCDN_SCRIPT_YI: Incomplete
UCDN_SCRIPT_OLD_ITALIC: Incomplete
UCDN_SCRIPT_GOTHIC: Incomplete
UCDN_SCRIPT_DESERET: Incomplete
UCDN_SCRIPT_INHERITED: Incomplete
UCDN_SCRIPT_TAGALOG: Incomplete
UCDN_SCRIPT_HANUNOO: Incomplete
UCDN_SCRIPT_BUHID: Incomplete
UCDN_SCRIPT_TAGBANWA: Incomplete
UCDN_SCRIPT_LIMBU: Incomplete
UCDN_SCRIPT_TAI_LE: Incomplete
UCDN_SCRIPT_LINEAR_B: Incomplete
UCDN_SCRIPT_UGARITIC: Incomplete
UCDN_SCRIPT_SHAVIAN: Incomplete
UCDN_SCRIPT_OSMANYA: Incomplete
UCDN_SCRIPT_CYPRIOT: Incomplete
UCDN_SCRIPT_BRAILLE: Incomplete
UCDN_SCRIPT_BUGINESE: Incomplete
UCDN_SCRIPT_COPTIC: Incomplete
UCDN_SCRIPT_NEW_TAI_LUE: Incomplete
UCDN_SCRIPT_GLAGOLITIC: Incomplete
UCDN_SCRIPT_TIFINAGH: Incomplete
UCDN_SCRIPT_SYLOTI_NAGRI: Incomplete
UCDN_SCRIPT_OLD_PERSIAN: Incomplete
UCDN_SCRIPT_KHAROSHTHI: Incomplete
UCDN_SCRIPT_BALINESE: Incomplete
UCDN_SCRIPT_CUNEIFORM: Incomplete
UCDN_SCRIPT_PHOENICIAN: Incomplete
UCDN_SCRIPT_PHAGS_PA: Incomplete
UCDN_SCRIPT_NKO: Incomplete
UCDN_SCRIPT_SUNDANESE: Incomplete
UCDN_SCRIPT_LEPCHA: Incomplete
UCDN_SCRIPT_OL_CHIKI: Incomplete
UCDN_SCRIPT_VAI: Incomplete
UCDN_SCRIPT_SAURASHTRA: Incomplete
UCDN_SCRIPT_KAYAH_LI: Incomplete
UCDN_SCRIPT_REJANG: Incomplete
UCDN_SCRIPT_LYCIAN: Incomplete
UCDN_SCRIPT_CARIAN: Incomplete
UCDN_SCRIPT_LYDIAN: Incomplete
UCDN_SCRIPT_CHAM: Incomplete
UCDN_SCRIPT_TAI_THAM: Incomplete
UCDN_SCRIPT_TAI_VIET: Incomplete
UCDN_SCRIPT_AVESTAN: Incomplete
UCDN_SCRIPT_EGYPTIAN_HIEROGLYPHS: Incomplete
UCDN_SCRIPT_SAMARITAN: Incomplete
UCDN_SCRIPT_LISU: Incomplete
UCDN_SCRIPT_BAMUM: Incomplete
UCDN_SCRIPT_JAVANESE: Incomplete
UCDN_SCRIPT_MEETEI_MAYEK: Incomplete
UCDN_SCRIPT_IMPERIAL_ARAMAIC: Incomplete
UCDN_SCRIPT_OLD_SOUTH_ARABIAN: Incomplete
UCDN_SCRIPT_INSCRIPTIONAL_PARTHIAN: Incomplete
UCDN_SCRIPT_INSCRIPTIONAL_PAHLAVI: Incomplete
UCDN_SCRIPT_OLD_TURKIC: Incomplete
UCDN_SCRIPT_KAITHI: Incomplete
UCDN_SCRIPT_BATAK: Incomplete
UCDN_SCRIPT_BRAHMI: Incomplete
UCDN_SCRIPT_MANDAIC: Incomplete
UCDN_SCRIPT_CHAKMA: Incomplete
UCDN_SCRIPT_MEROITIC_CURSIVE: Incomplete
UCDN_SCRIPT_MEROITIC_HIEROGLYPHS: Incomplete
UCDN_SCRIPT_MIAO: Incomplete
UCDN_SCRIPT_SHARADA: Incomplete
UCDN_SCRIPT_SORA_SOMPENG: Incomplete
UCDN_SCRIPT_TAKRI: Incomplete
UCDN_SCRIPT_UNKNOWN: Incomplete
UCDN_SCRIPT_BASSA_VAH: Incomplete
UCDN_SCRIPT_CAUCASIAN_ALBANIAN: Incomplete
UCDN_SCRIPT_DUPLOYAN: Incomplete
UCDN_SCRIPT_ELBASAN: Incomplete
UCDN_SCRIPT_GRANTHA: Incomplete
UCDN_SCRIPT_KHOJKI: Incomplete
UCDN_SCRIPT_KHUDAWADI: Incomplete
UCDN_SCRIPT_LINEAR_A: Incomplete
UCDN_SCRIPT_MAHAJANI: Incomplete
UCDN_SCRIPT_MANICHAEAN: Incomplete
UCDN_SCRIPT_MENDE_KIKAKUI: Incomplete
UCDN_SCRIPT_MODI: Incomplete
UCDN_SCRIPT_MRO: Incomplete
UCDN_SCRIPT_NABATAEAN: Incomplete
UCDN_SCRIPT_OLD_NORTH_ARABIAN: Incomplete
UCDN_SCRIPT_OLD_PERMIC: Incomplete
UCDN_SCRIPT_PAHAWH_HMONG: Incomplete
UCDN_SCRIPT_PALMYRENE: Incomplete
UCDN_SCRIPT_PAU_CIN_HAU: Incomplete
UCDN_SCRIPT_PSALTER_PAHLAVI: Incomplete
UCDN_SCRIPT_SIDDHAM: Incomplete
UCDN_SCRIPT_TIRHUTA: Incomplete
UCDN_SCRIPT_WARANG_CITI: Incomplete
UCDN_SCRIPT_AHOM: Incomplete
UCDN_SCRIPT_ANATOLIAN_HIEROGLYPHS: Incomplete
UCDN_SCRIPT_HATRAN: Incomplete
UCDN_SCRIPT_MULTANI: Incomplete
UCDN_SCRIPT_OLD_HUNGARIAN: Incomplete
UCDN_SCRIPT_SIGNWRITING: Incomplete
UCDN_SCRIPT_ADLAM: Incomplete
UCDN_SCRIPT_BHAIKSUKI: Incomplete
UCDN_SCRIPT_MARCHEN: Incomplete
UCDN_SCRIPT_NEWA: Incomplete
UCDN_SCRIPT_OSAGE: Incomplete
UCDN_SCRIPT_TANGUT: Incomplete
UCDN_SCRIPT_MASARAM_GONDI: Incomplete
UCDN_SCRIPT_NUSHU: Incomplete
UCDN_SCRIPT_SOYOMBO: Incomplete
UCDN_SCRIPT_ZANABAZAR_SQUARE: Incomplete
UCDN_SCRIPT_DOGRA: Incomplete
UCDN_SCRIPT_GUNJALA_GONDI: Incomplete
UCDN_SCRIPT_HANIFI_ROHINGYA: Incomplete
UCDN_SCRIPT_MAKASAR: Incomplete
UCDN_SCRIPT_MEDEFAIDRIN: Incomplete
UCDN_SCRIPT_OLD_SOGDIAN: Incomplete
UCDN_SCRIPT_SOGDIAN: Incomplete
UCDN_SCRIPT_ELYMAIC: Incomplete
UCDN_SCRIPT_NANDINAGARI: Incomplete
UCDN_SCRIPT_NYIAKENG_PUACHUE_HMONG: Incomplete
UCDN_SCRIPT_WANCHO: Incomplete
UCDN_SCRIPT_CHORASMIAN: Incomplete
UCDN_SCRIPT_DIVES_AKURU: Incomplete
UCDN_SCRIPT_KHITAN_SMALL_SCRIPT: Incomplete
UCDN_SCRIPT_YEZIDI: Incomplete
UCDN_SCRIPT_VITHKUQI: Incomplete
UCDN_SCRIPT_OLD_UYGHUR: Incomplete
UCDN_SCRIPT_CYPRO_MINOAN: Incomplete
UCDN_SCRIPT_TANGSA: Incomplete
UCDN_SCRIPT_TOTO: Incomplete
UCDN_SCRIPT_KAWI: Incomplete
UCDN_SCRIPT_NAG_MUNDARI: Incomplete
UCDN_LAST_SCRIPT: Incomplete
UCDN_LINEBREAK_CLASS_OP: Incomplete
UCDN_LINEBREAK_CLASS_CL: Incomplete
UCDN_LINEBREAK_CLASS_CP: Incomplete
UCDN_LINEBREAK_CLASS_QU: Incomplete
UCDN_LINEBREAK_CLASS_GL: Incomplete
UCDN_LINEBREAK_CLASS_NS: Incomplete
UCDN_LINEBREAK_CLASS_EX: Incomplete
UCDN_LINEBREAK_CLASS_SY: Incomplete
UCDN_LINEBREAK_CLASS_IS: Incomplete
UCDN_LINEBREAK_CLASS_PR: Incomplete
UCDN_LINEBREAK_CLASS_PO: Incomplete
UCDN_LINEBREAK_CLASS_NU: Incomplete
UCDN_LINEBREAK_CLASS_AL: Incomplete
UCDN_LINEBREAK_CLASS_HL: Incomplete
UCDN_LINEBREAK_CLASS_ID: Incomplete
UCDN_LINEBREAK_CLASS_IN: Incomplete
UCDN_LINEBREAK_CLASS_HY: Incomplete
UCDN_LINEBREAK_CLASS_BA: Incomplete
UCDN_LINEBREAK_CLASS_BB: Incomplete
UCDN_LINEBREAK_CLASS_B2: Incomplete
UCDN_LINEBREAK_CLASS_ZW: Incomplete
UCDN_LINEBREAK_CLASS_CM: Incomplete
UCDN_LINEBREAK_CLASS_WJ: Incomplete
UCDN_LINEBREAK_CLASS_H2: Incomplete
UCDN_LINEBREAK_CLASS_H3: Incomplete
UCDN_LINEBREAK_CLASS_JL: Incomplete
UCDN_LINEBREAK_CLASS_JV: Incomplete
UCDN_LINEBREAK_CLASS_JT: Incomplete
UCDN_LINEBREAK_CLASS_RI: Incomplete
UCDN_LINEBREAK_CLASS_AI: Incomplete
UCDN_LINEBREAK_CLASS_BK: Incomplete
UCDN_LINEBREAK_CLASS_CB: Incomplete
UCDN_LINEBREAK_CLASS_CJ: Incomplete
UCDN_LINEBREAK_CLASS_CR: Incomplete
UCDN_LINEBREAK_CLASS_LF: Incomplete
UCDN_LINEBREAK_CLASS_NL: Incomplete
UCDN_LINEBREAK_CLASS_SA: Incomplete
UCDN_LINEBREAK_CLASS_SG: Incomplete
UCDN_LINEBREAK_CLASS_SP: Incomplete
UCDN_LINEBREAK_CLASS_XX: Incomplete
UCDN_LINEBREAK_CLASS_ZWJ: Incomplete
UCDN_LINEBREAK_CLASS_EB: Incomplete
UCDN_LINEBREAK_CLASS_EM: Incomplete
UCDN_GENERAL_CATEGORY_CC: Incomplete
UCDN_GENERAL_CATEGORY_CF: Incomplete
UCDN_GENERAL_CATEGORY_CN: Incomplete
UCDN_GENERAL_CATEGORY_CO: Incomplete
UCDN_GENERAL_CATEGORY_CS: Incomplete
UCDN_GENERAL_CATEGORY_LL: Incomplete
UCDN_GENERAL_CATEGORY_LM: Incomplete
UCDN_GENERAL_CATEGORY_LO: Incomplete
UCDN_GENERAL_CATEGORY_LT: Incomplete
UCDN_GENERAL_CATEGORY_LU: Incomplete
UCDN_GENERAL_CATEGORY_MC: Incomplete
UCDN_GENERAL_CATEGORY_ME: Incomplete
UCDN_GENERAL_CATEGORY_MN: Incomplete
UCDN_GENERAL_CATEGORY_ND: Incomplete
UCDN_GENERAL_CATEGORY_NL: Incomplete
UCDN_GENERAL_CATEGORY_NO: Incomplete
UCDN_GENERAL_CATEGORY_PC: Incomplete
UCDN_GENERAL_CATEGORY_PD: Incomplete
UCDN_GENERAL_CATEGORY_PE: Incomplete
UCDN_GENERAL_CATEGORY_PF: Incomplete
UCDN_GENERAL_CATEGORY_PI: Incomplete
UCDN_GENERAL_CATEGORY_PO: Incomplete
UCDN_GENERAL_CATEGORY_PS: Incomplete
UCDN_GENERAL_CATEGORY_SC: Incomplete
UCDN_GENERAL_CATEGORY_SK: Incomplete
UCDN_GENERAL_CATEGORY_SM: Incomplete
UCDN_GENERAL_CATEGORY_SO: Incomplete
UCDN_GENERAL_CATEGORY_ZL: Incomplete
UCDN_GENERAL_CATEGORY_ZP: Incomplete
UCDN_GENERAL_CATEGORY_ZS: Incomplete
UCDN_BIDI_CLASS_L: Incomplete
UCDN_BIDI_CLASS_LRE: Incomplete
UCDN_BIDI_CLASS_LRO: Incomplete
UCDN_BIDI_CLASS_R: Incomplete
UCDN_BIDI_CLASS_AL: Incomplete
UCDN_BIDI_CLASS_RLE: Incomplete
UCDN_BIDI_CLASS_RLO: Incomplete
UCDN_BIDI_CLASS_PDF: Incomplete
UCDN_BIDI_CLASS_EN: Incomplete
UCDN_BIDI_CLASS_ES: Incomplete
UCDN_BIDI_CLASS_ET: Incomplete
UCDN_BIDI_CLASS_AN: Incomplete
UCDN_BIDI_CLASS_CS: Incomplete
UCDN_BIDI_CLASS_NSM: Incomplete
UCDN_BIDI_CLASS_BN: Incomplete
UCDN_BIDI_CLASS_B: Incomplete
UCDN_BIDI_CLASS_S: Incomplete
UCDN_BIDI_CLASS_WS: Incomplete
UCDN_BIDI_CLASS_ON: Incomplete
UCDN_BIDI_CLASS_LRI: Incomplete
UCDN_BIDI_CLASS_RLI: Incomplete
UCDN_BIDI_CLASS_FSI: Incomplete
UCDN_BIDI_CLASS_PDI: Incomplete
UCDN_BIDI_PAIRED_BRACKET_TYPE_OPEN: Incomplete
UCDN_BIDI_PAIRED_BRACKET_TYPE_CLOSE: Incomplete
UCDN_BIDI_PAIRED_BRACKET_TYPE_NONE: Incomplete

def new_pint(): ...
def copy_pint(value): ...
def delete_pint(obj): ...
def pint_assign(obj, value): ...
def pint_value(obj): ...
def log(text) -> None: ...

g_mupdf_trace_director: Incomplete

def exception_info(exception_or_traceback: Incomplete | None = None, limit: Incomplete | None = None, file: Incomplete | None = None, chain: bool = True, outer: bool = True, show_exception_type: bool = True, _filelinefn: bool = True): ...
def fz_bidi_fragment_text_outparams_fn(text, textlen, callback, arg, flags): ...
fz_bidi_fragment_text = fz_bidi_fragment_text_outparams_fn

def fz_bitmap_details_outparams_fn(bitmap): ...
fz_bitmap_details = fz_bitmap_details_outparams_fn

def fz_buffer_extract_outparams_fn(buf): ...
fz_buffer_extract = fz_buffer_extract_outparams_fn

def fz_buffer_storage_outparams_fn(buf): ...
fz_buffer_storage = fz_buffer_storage_outparams_fn

def fz_chartorune_outparams_fn(str): ...
fz_chartorune = fz_chartorune_outparams_fn

def fz_clamp_color_outparams_fn(cs, in_): ...
fz_clamp_color = fz_clamp_color_outparams_fn

def fz_convert_color_outparams_fn(ss, sv, ds, is_, params): ...
fz_convert_color = fz_convert_color_outparams_fn

def fz_convert_error_outparams_fn(): ...
fz_convert_error = fz_convert_error_outparams_fn

def fz_convert_separation_colors_outparams_fn(src_cs, src_color, dst_seps, dst_cs, color_params): ...
fz_convert_separation_colors = fz_convert_separation_colors_outparams_fn

def fz_decomp_image_from_stream_outparams_fn(stm, image, subarea, indexed, l2factor): ...
fz_decomp_image_from_stream = fz_decomp_image_from_stream_outparams_fn

def fz_deflate_outparams_fn(dest, source, source_length, level): ...
fz_deflate = fz_deflate_outparams_fn

def fz_dom_get_attribute_outparams_fn(elt, i): ...
fz_dom_get_attribute = fz_dom_get_attribute_outparams_fn

def fz_encode_character_with_fallback_outparams_fn(font, unicode, script, language): ...
fz_encode_character_with_fallback = fz_encode_character_with_fallback_outparams_fn

def fz_error_callback_outparams_fn(): ...
fz_error_callback = fz_error_callback_outparams_fn

def fz_eval_function_outparams_fn(func, in_, inlen, outlen): ...
fz_eval_function = fz_eval_function_outparams_fn

def fz_fill_pixmap_with_color_outparams_fn(pix, colorspace, color_params): ...
fz_fill_pixmap_with_color = fz_fill_pixmap_with_color_outparams_fn

def fz_get_pixmap_from_image_outparams_fn(image, subarea, ctm): ...
fz_get_pixmap_from_image = fz_get_pixmap_from_image_outparams_fn

def fz_getopt_outparams_fn(nargc, ostr): ...
fz_getopt = fz_getopt_outparams_fn

def fz_getopt_long_outparams_fn(nargc, ostr, longopts): ...
fz_getopt_long = fz_getopt_long_outparams_fn

def fz_grisu_outparams_fn(f, s): ...
fz_grisu = fz_grisu_outparams_fn

def fz_has_option_outparams_fn(opts, key): ...
fz_has_option = fz_has_option_outparams_fn

def fz_image_resolution_outparams_fn(image): ...
fz_image_resolution = fz_image_resolution_outparams_fn

def fz_lookup_base14_font_outparams_fn(name): ...
fz_lookup_base14_font = fz_lookup_base14_font_outparams_fn

def fz_lookup_builtin_font_outparams_fn(name, bold, italic): ...
fz_lookup_builtin_font = fz_lookup_builtin_font_outparams_fn

def fz_lookup_cjk_font_outparams_fn(ordering): ...
fz_lookup_cjk_font = fz_lookup_cjk_font_outparams_fn

def fz_lookup_cjk_font_by_language_outparams_fn(lang): ...
fz_lookup_cjk_font_by_language = fz_lookup_cjk_font_by_language_outparams_fn

def fz_lookup_noto_boxes_font_outparams_fn(): ...
fz_lookup_noto_boxes_font = fz_lookup_noto_boxes_font_outparams_fn

def fz_lookup_noto_emoji_font_outparams_fn(): ...
fz_lookup_noto_emoji_font = fz_lookup_noto_emoji_font_outparams_fn

def fz_lookup_noto_font_outparams_fn(script, lang): ...
fz_lookup_noto_font = fz_lookup_noto_font_outparams_fn

def fz_lookup_noto_math_font_outparams_fn(): ...
fz_lookup_noto_math_font = fz_lookup_noto_math_font_outparams_fn

def fz_lookup_noto_music_font_outparams_fn(): ...
fz_lookup_noto_music_font = fz_lookup_noto_music_font_outparams_fn

def fz_lookup_noto_symbol1_font_outparams_fn(): ...
fz_lookup_noto_symbol1_font = fz_lookup_noto_symbol1_font_outparams_fn

def fz_lookup_noto_symbol2_font_outparams_fn(): ...
fz_lookup_noto_symbol2_font = fz_lookup_noto_symbol2_font_outparams_fn

def fz_new_deflated_data_outparams_fn(source, source_length, level): ...
fz_new_deflated_data = fz_new_deflated_data_outparams_fn

def fz_new_deflated_data_from_buffer_outparams_fn(buffer, level): ...
fz_new_deflated_data_from_buffer = fz_new_deflated_data_from_buffer_outparams_fn

def fz_new_display_list_from_svg_outparams_fn(buf, base_uri, dir): ...
fz_new_display_list_from_svg = fz_new_display_list_from_svg_outparams_fn

def fz_new_display_list_from_svg_xml_outparams_fn(xmldoc, xml, base_uri, dir): ...
fz_new_display_list_from_svg_xml = fz_new_display_list_from_svg_xml_outparams_fn

def fz_new_draw_device_with_options_outparams_fn(options, mediabox): ...
fz_new_draw_device_with_options = fz_new_draw_device_with_options_outparams_fn

def fz_new_svg_device_with_id_outparams_fn(out, page_width, page_height, text_format, reuse_images): ...
fz_new_svg_device_with_id = fz_new_svg_device_with_id_outparams_fn

def fz_new_test_device_outparams_fn(threshold, options, passthrough): ...
fz_new_test_device = fz_new_test_device_outparams_fn

def fz_open_image_decomp_stream_outparams_fn(arg_0, arg_1): ...
fz_open_image_decomp_stream = fz_open_image_decomp_stream_outparams_fn

def fz_open_image_decomp_stream_from_buffer_outparams_fn(arg_0): ...
fz_open_image_decomp_stream_from_buffer = fz_open_image_decomp_stream_from_buffer_outparams_fn

def fz_page_presentation_outparams_fn(page, transition): ...
fz_page_presentation = fz_page_presentation_outparams_fn

def fz_paint_shade_outparams_fn(shade, override_cs, ctm, dest, color_params, bbox, eop): ...
fz_paint_shade = fz_paint_shade_outparams_fn

def fz_parse_page_range_outparams_fn(s, n): ...
fz_parse_page_range = fz_parse_page_range_outparams_fn

def fz_read_best_outparams_fn(stm, initial, worst_case): ...
fz_read_best = fz_read_best_outparams_fn

def fz_resolve_link_outparams_fn(doc, uri): ...
fz_resolve_link = fz_resolve_link_outparams_fn

def fz_search_chapter_page_number_outparams_fn(doc, chapter, page, needle, hit_bbox, hit_max): ...
fz_search_chapter_page_number = fz_search_chapter_page_number_outparams_fn

def fz_search_display_list_outparams_fn(list, needle, hit_bbox, hit_max): ...
fz_search_display_list = fz_search_display_list_outparams_fn

def fz_search_page_outparams_fn(page, needle, hit_bbox, hit_max): ...
fz_search_page = fz_search_page_outparams_fn

def fz_search_page_number_outparams_fn(doc, number, needle, hit_bbox, hit_max): ...
fz_search_page_number = fz_search_page_number_outparams_fn

def fz_search_stext_page_outparams_fn(text, needle, hit_bbox, hit_max): ...
fz_search_stext_page = fz_search_stext_page_outparams_fn

def fz_separation_equivalent_outparams_fn(seps, idx, dst_cs, prf, color_params): ...
fz_separation_equivalent = fz_separation_equivalent_outparams_fn

def fz_store_scavenge_outparams_fn(size): ...
fz_store_scavenge = fz_store_scavenge_outparams_fn

def fz_store_scavenge_external_outparams_fn(size): ...
fz_store_scavenge_external = fz_store_scavenge_external_outparams_fn

def fz_strsep_outparams_fn(delim): ...
fz_strsep = fz_strsep_outparams_fn

def fz_strtof_outparams_fn(s): ...
fz_strtof = fz_strtof_outparams_fn

def fz_subset_cff_for_gids_outparams_fn(orig, num_gids, symbolic, cidfont): ...
fz_subset_cff_for_gids = fz_subset_cff_for_gids_outparams_fn

def fz_subset_ttf_for_gids_outparams_fn(orig, num_gids, symbolic, cidfont): ...
fz_subset_ttf_for_gids = fz_subset_ttf_for_gids_outparams_fn

def fz_warning_callback_outparams_fn(): ...
fz_warning_callback = fz_warning_callback_outparams_fn

def pdf_annot_MK_BC_outparams_fn(annot, color): ...
pdf_annot_MK_BC = pdf_annot_MK_BC_outparams_fn

def pdf_annot_MK_BG_outparams_fn(annot, color): ...
pdf_annot_MK_BG = pdf_annot_MK_BG_outparams_fn

def pdf_annot_callout_line_outparams_fn(annot, callout): ...
pdf_annot_callout_line = pdf_annot_callout_line_outparams_fn

def pdf_annot_color_outparams_fn(annot, color): ...
pdf_annot_color = pdf_annot_color_outparams_fn

def pdf_annot_default_appearance_outparams_fn(annot, color): ...
pdf_annot_default_appearance = pdf_annot_default_appearance_outparams_fn

def pdf_annot_default_appearance_unmapped_outparams_fn(annot, font_name, font_name_len, color): ...
pdf_annot_default_appearance_unmapped = pdf_annot_default_appearance_unmapped_outparams_fn

def pdf_annot_interior_color_outparams_fn(annot, color): ...
pdf_annot_interior_color = pdf_annot_interior_color_outparams_fn

def pdf_annot_line_ending_styles_outparams_fn(annot): ...
pdf_annot_line_ending_styles = pdf_annot_line_ending_styles_outparams_fn

def pdf_array_get_string_outparams_fn(array, index): ...
pdf_array_get_string = pdf_array_get_string_outparams_fn

def pdf_count_q_balance_outparams_fn(doc, res, stm): ...
pdf_count_q_balance = pdf_count_q_balance_outparams_fn

def pdf_decode_cmap_outparams_fn(cmap, s, e): ...
pdf_decode_cmap = pdf_decode_cmap_outparams_fn

def pdf_dict_get_inheritable_string_outparams_fn(dict, key): ...
pdf_dict_get_inheritable_string = pdf_dict_get_inheritable_string_outparams_fn

def pdf_dict_get_string_outparams_fn(dict, key): ...
pdf_dict_get_string = pdf_dict_get_string_outparams_fn

def pdf_edit_text_field_value_outparams_fn(widget, value, change): ...
pdf_edit_text_field_value = pdf_edit_text_field_value_outparams_fn

def pdf_eval_function_outparams_fn(func, in_, inlen, outlen): ...
pdf_eval_function = pdf_eval_function_outparams_fn

def pdf_field_event_validate_outparams_fn(doc, field, value): ...
pdf_field_event_validate = pdf_field_event_validate_outparams_fn

def pdf_js_event_result_validate_outparams_fn(js): ...
pdf_js_event_result_validate = pdf_js_event_result_validate_outparams_fn

def pdf_js_execute_outparams_fn(js, name, code): ...
pdf_js_execute = pdf_js_execute_outparams_fn

def pdf_load_encoding_outparams_fn(encoding): ...
pdf_load_encoding = pdf_load_encoding_outparams_fn

def pdf_load_to_unicode_outparams_fn(doc, font, collection, cmapstm): ...
pdf_load_to_unicode = pdf_load_to_unicode_outparams_fn

def pdf_lookup_cmap_full_outparams_fn(cmap, cpt): ...
pdf_lookup_cmap_full = pdf_lookup_cmap_full_outparams_fn

def pdf_lookup_page_loc_outparams_fn(doc, needle): ...
pdf_lookup_page_loc = pdf_lookup_page_loc_outparams_fn

def pdf_lookup_substitute_font_outparams_fn(mono, serif, bold, italic): ...
pdf_lookup_substitute_font = pdf_lookup_substitute_font_outparams_fn

def pdf_map_one_to_many_outparams_fn(cmap, one, len): ...
pdf_map_one_to_many = pdf_map_one_to_many_outparams_fn

def pdf_obj_memo_outparams_fn(obj, bit): ...
pdf_obj_memo = pdf_obj_memo_outparams_fn

def pdf_page_presentation_outparams_fn(page, transition): ...
pdf_page_presentation = pdf_page_presentation_outparams_fn

def pdf_page_write_outparams_fn(doc, mediabox): ...
pdf_page_write = pdf_page_write_outparams_fn

def pdf_parse_default_appearance_outparams_fn(da, color): ...
pdf_parse_default_appearance = pdf_parse_default_appearance_outparams_fn

def pdf_parse_default_appearance_unmapped_outparams_fn(da, font_name, font_name_len, color): ...
pdf_parse_default_appearance_unmapped = pdf_parse_default_appearance_unmapped_outparams_fn

def pdf_parse_ind_obj_outparams_fn(doc, f): ...
pdf_parse_ind_obj = pdf_parse_ind_obj_outparams_fn

def pdf_parse_journal_obj_outparams_fn(doc, stm): ...
pdf_parse_journal_obj = pdf_parse_journal_obj_outparams_fn

def pdf_print_encrypted_obj_outparams_fn(out, obj, tight, ascii, crypt, num, gen): ...
pdf_print_encrypted_obj = pdf_print_encrypted_obj_outparams_fn

def pdf_process_contents_outparams_fn(proc, doc, res, stm, cookie): ...
pdf_process_contents = pdf_process_contents_outparams_fn

def pdf_repair_obj_outparams_fn(doc, buf): ...
pdf_repair_obj = pdf_repair_obj_outparams_fn

def pdf_resolve_link_outparams_fn(doc, uri): ...
pdf_resolve_link = pdf_resolve_link_outparams_fn

def pdf_sample_shade_function_outparams_fn(n, funcs, t0, t1): ...
pdf_sample_shade_function = pdf_sample_shade_function_outparams_fn

def pdf_signature_contents_outparams_fn(doc, signature): ...
pdf_signature_contents = pdf_signature_contents_outparams_fn

def pdf_sprint_obj_outparams_fn(buf, cap, obj, tight, ascii): ...
pdf_sprint_obj = pdf_sprint_obj_outparams_fn

def pdf_to_string_outparams_fn(obj): ...
pdf_to_string = pdf_to_string_outparams_fn

def pdf_tos_make_trm_outparams_fn(tos, text, fontdesc, cid, trm): ...
pdf_tos_make_trm = pdf_tos_make_trm_outparams_fn

def pdf_undoredo_state_outparams_fn(doc): ...
pdf_undoredo_state = pdf_undoredo_state_outparams_fn

def pdf_walk_tree_outparams_fn(tree, kid_name, arrive, leave, arg): ...
pdf_walk_tree = pdf_walk_tree_outparams_fn

def pdf_zugferd_profile_outparams_fn(doc): ...
pdf_zugferd_profile = pdf_zugferd_profile_outparams_fn

def FzBitmap_fz_bitmap_details_outparams_fn(self): ...
def FzBuffer_fz_buffer_extract_outparams_fn(self): ...
def FzBuffer_fz_buffer_storage_outparams_fn(self): ...
def FzBuffer_fz_new_display_list_from_svg_outparams_fn(self, base_uri, dir): ...
def FzBuffer_fz_subset_cff_for_gids_outparams_fn(self, num_gids, symbolic, cidfont): ...
def FzBuffer_fz_subset_ttf_for_gids_outparams_fn(self, num_gids, symbolic, cidfont): ...
def FzColorspace_fz_clamp_color_outparams_fn(self, in_): ...
def FzColorspace_fz_convert_color_outparams_fn(self, sv, params): ...
def FzColorspace_fz_convert_separation_colors_outparams_fn(self, src_color, dst_seps, color_params): ...
def FzCompressedBuffer_fz_open_image_decomp_stream_from_buffer_outparams_fn(self): ...
def FzDisplayList_fz_search_display_list_outparams_fn(self, needle, hit_bbox, hit_max): ...
def FzDocument_fz_resolve_link_outparams_fn(self, uri): ...
def FzDocument_fz_search_chapter_page_number_outparams_fn(self, chapter, page, needle, hit_bbox, hit_max): ...
def FzDocument_fz_search_page_number_outparams_fn(self, number, needle, hit_bbox, hit_max): ...
def FzFont_fz_encode_character_with_fallback_outparams_fn(self, unicode, script, language): ...
def FzFunction_fz_eval_function_outparams_fn(self, in_, inlen, outlen): ...
def FzImage_fz_get_pixmap_from_image_outparams_fn(self, subarea, ctm): ...
def FzImage_fz_image_resolution_outparams_fn(self): ...
def FzOutput_fz_new_svg_device_with_id_outparams_fn(self, page_width, page_height, text_format, reuse_images): ...
def FzOutput_pdf_print_encrypted_obj_outparams_fn(self, obj, tight, ascii, crypt, num, gen): ...
def FzPage_fz_page_presentation_outparams_fn(self, transition): ...
def FzPage_fz_search_page_outparams_fn(self, needle, hit_bbox, hit_max): ...
def FzPixmap_fz_fill_pixmap_with_color_outparams_fn(self, colorspace, color_params): ...
def FzSeparations_fz_separation_equivalent_outparams_fn(self, idx, dst_cs, prf, color_params): ...
def FzShade_fz_paint_shade_outparams_fn(self, override_cs, ctm, dest, color_params, bbox, eop): ...
def FzStextPage_fz_search_stext_page_outparams_fn(self, needle, hit_bbox, hit_max): ...
def FzStream_fz_decomp_image_from_stream_outparams_fn(self, image, subarea, indexed, l2factor): ...
def FzStream_fz_open_image_decomp_stream_outparams_fn(self, arg_1): ...
def FzStream_fz_read_best_outparams_fn(self, initial, worst_case): ...
def FzXml_fz_dom_get_attribute_outparams_fn(self, i): ...
def FzXml_fz_new_display_list_from_svg_xml_outparams_fn(self, xmldoc, base_uri, dir): ...
def PdfAnnot_pdf_annot_MK_BC_outparams_fn(self, color): ...
def PdfAnnot_pdf_annot_MK_BG_outparams_fn(self, color): ...
def PdfAnnot_pdf_annot_color_outparams_fn(self, color): ...
def PdfAnnot_pdf_annot_default_appearance_outparams_fn(self, color): ...
def PdfAnnot_pdf_annot_default_appearance_unmapped_outparams_fn(self, font_name, font_name_len, color): ...
def PdfAnnot_pdf_annot_interior_color_outparams_fn(self, color): ...
def PdfAnnot_pdf_annot_line_ending_styles_outparams_fn(self): ...
def PdfAnnot_pdf_edit_text_field_value_outparams_fn(self, value, change): ...
def PdfCmap_pdf_decode_cmap_outparams_fn(self, s, e): ...
def PdfCmap_pdf_lookup_cmap_full_outparams_fn(self, cpt): ...
def PdfCmap_pdf_map_one_to_many_outparams_fn(self, one, len): ...
def PdfDocument_pdf_count_q_balance_outparams_fn(self, res, stm): ...
def PdfDocument_pdf_field_event_validate_outparams_fn(self, field, value): ...
def PdfDocument_pdf_load_to_unicode_outparams_fn(self, font, collection, cmapstm): ...
def PdfDocument_pdf_lookup_page_loc_outparams_fn(self, needle): ...
def PdfDocument_pdf_page_write_outparams_fn(self, mediabox): ...
def PdfDocument_pdf_parse_ind_obj_outparams_fn(self, f): ...
def PdfDocument_pdf_parse_journal_obj_outparams_fn(self, stm): ...
def PdfDocument_pdf_repair_obj_outparams_fn(self, buf): ...
def PdfDocument_pdf_resolve_link_outparams_fn(self, uri): ...
def PdfDocument_pdf_signature_contents_outparams_fn(self, signature): ...
def PdfDocument_pdf_undoredo_state_outparams_fn(self): ...
def PdfDocument_pdf_zugferd_profile_outparams_fn(self): ...
def PdfFunction_pdf_eval_function_outparams_fn(self, in_, inlen, outlen): ...
def PdfJs_pdf_js_event_result_validate_outparams_fn(self): ...
def PdfJs_pdf_js_execute_outparams_fn(self, name, code): ...
def PdfObj_pdf_array_get_string_outparams_fn(self, index): ...
def PdfObj_pdf_dict_get_inheritable_string_outparams_fn(self): ...
def PdfObj_pdf_dict_get_string_outparams_fn(self): ...
def PdfObj_pdf_obj_memo_outparams_fn(self, bit): ...
def PdfObj_pdf_to_string_outparams_fn(self): ...
def PdfObj_pdf_walk_tree_outparams_fn(self, arrive, leave, arg): ...
def PdfPage_pdf_page_presentation_outparams_fn(self, transition): ...
def PdfProcessor_pdf_process_contents_outparams_fn(self, doc, res, stm, cookie): ...
def PdfTextObjectState_pdf_tos_make_trm_outparams_fn(self, text, fontdesc, cid, trm): ...
ll_fz_parse_page_range_orig = ll_fz_parse_page_range
fz_parse_page_range = ll_fz_parse_page_range
fz_format_output_path = ll_fz_format_output_path

class IteratorWrap:
    container: Incomplete
    pos: Incomplete
    end: Incomplete
    def __init__(self, container) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...
    def next(self): ...

def ll_fz_buffer_extract_copy(buffer): ...
def fz_buffer_extract_copy(buffer): ...
def fz_buffer_storage_memoryview(buffer, writable: bool = False): ...
ll_fz_new_buffer_from_copied_data_orig = ll_fz_new_buffer_from_copied_data

def ll_pdf_dict_getl(obj, *tail): ...
def pdf_dict_getl(obj, *tail): ...
def ll_pdf_dict_putl(obj, val, *tail) -> None: ...
def pdf_dict_putl(obj, val, *tail) -> None: ...
def pdf_dict_putl_drop(obj, *tail) -> None: ...

set_warning_callback_s: Incomplete
set_error_callback_s: Incomplete

class DiagnosticCallbackPython(DiagnosticCallback):
    printfn: Incomplete
    def __init__(self, description, printfn) -> None: ...
    def __del__(self) -> None: ...

def set_diagnostic_callback(description, printfn): ...
def ll_fz_pixmap_samples_memoryview(pixmap): ...
def fz_pixmap_samples_memoryview(pixmap): ...
ll_fz_warn_original = ll_fz_warn
fz_warn = ll_fz_warn
ll_pdf_load_field_name = ll_pdf_load_field_name2
pdf_load_field_name = pdf_load_field_name2

class StoryPositionsCallback_python(StoryPositionsCallback):
    python_callback: Incomplete
    def __init__(self, python_callback) -> None: ...
    def call(self, position) -> None: ...
ll_fz_story_positions_orig = ll_fz_story_positions
FzDocumentWriter__init__0: Incomplete

def FzDocumentWriter__init__1(self, *args): ...

class fz_install_load_system_font_funcs_args3(FzInstallLoadSystemFontFuncsArgs2):
    f3: Incomplete
    f_cjk3: Incomplete
    f_fallback3: Incomplete
    def __init__(self, f: Incomplete | None = None, f_cjk: Incomplete | None = None, f_fallback: Incomplete | None = None) -> None: ...
    def ret_font(self, font): ...
    def f(self, ctx, name, bold, italic, needs_exact_metrics): ...
    def f_cjk(self, ctx, name, ordering, serif): ...
    def f_fallback(self, ctx, script, language, serif, bold, italic): ...

g_fz_install_load_system_font_funcs_args: Incomplete
Py_LIMITED_API: str
PDF_NULL: Incomplete
PDF_TRUE: Incomplete
PDF_FALSE: Incomplete
