from _typeshed import Incomplete

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

def page_merge(doc_des, doc_src, page_from, page_to, rotate, links, copy_annots, graft_map): ...
def JM_merge_range(doc_des, doc_src, spage, epage, apage, rotate, links, annots, show_progress, graft_map): ...
def FzDocument_insert_pdf(doc, src, from_page, to_page, start_at, rotate, links, annots, show_progress, final, graft_map): ...
def page_xref(this_doc, pno): ...
def JM_add_annot_id(annot, stem): ...
def JM_set_annot_callout_line(annot, callout, count): ...
def JM_get_annot_id_list(page): ...
def Tools_parse_da(this_annot): ...
def Annot_getAP(annot): ...
def Tools_update_da(this_annot, da_str): ...
def JM_point_from_py(p): ...
def Annot_rect(annot): ...
def util_transform_rect(rect, matrix): ...
def Annot_rect3(annot): ...
def Page_derotate_matrix(*args): ...
def JM_get_annot_xref_list(page_obj): ...
def xref_object(*args): ...
def Link_is_external(this_link): ...
def Page_addAnnot_FromString(*args): ...
def Link_next(this_link): ...
def page_count_fz2(document): ...
def page_count_fz(document): ...
def page_count_pdf(pdf): ...
def page_count(*args): ...
def page_annot_xrefs(*args): ...
def Outline_is_external(outline): ...
def Document_extend_toc_items(*args): ...
def ll_fz_absi(i): ...
def JM_new_texttrace_device(out): ...
def JM_char_bbox(line, ch): ...
def JM_char_quad(line, ch): ...
def JM_print_stext_page_as_text(res, page): ...
def set_skip_quad_corrections(on): ...
def set_subset_fontnames(on): ...
def set_small_glyph_heights(on): ...
def JM_cropbox(page_obj): ...
def get_cdrawings(page, extended: Incomplete | None = None, callback: Incomplete | None = None, method: Incomplete | None = None): ...
def JM_make_spanlist(line_dict, line, raw, buff, tp_rect): ...
def extractWORDS(this_tpage, delimiters): ...
def extractBLOCKS(_self): ...
def link_uri(link): ...
def page_get_textpage(_self, clip, flags, matrix): ...
def JM_make_textpage_dict(tp, page_dict, raw): ...
def pixmap_pixel(pm, x, y): ...
def pixmap_n(pixmap): ...
def JM_search_stext_page(page, needle): ...
def set_pixel(pm, x, y, color): ...
def pixmap_copy(pm, src, n): ...
def ll_JM_color_count(pm, clip): ...
